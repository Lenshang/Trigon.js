!function(e){var t={};function a(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=10)}([function(e,t,a){"use strict";a.d(t,"o",(function(){return u})),a.d(t,"n",(function(){return l})),a.d(t,"i",(function(){return r})),a.d(t,"p",(function(){return f})),a.d(t,"m",(function(){return v})),a.d(t,"F",(function(){return A})),a.d(t,"c",(function(){return m})),a.d(t,"d",(function(){return y})),a.d(t,"u",(function(){return g})),a.d(t,"h",(function(){return b})),a.d(t,"g",(function(){return N})),a.d(t,"f",(function(){return w})),a.d(t,"e",(function(){return P})),a.d(t,"b",(function(){return k})),a.d(t,"a",(function(){return I})),a.d(t,"l",(function(){return G})),a.d(t,"q",(function(){return E})),a.d(t,"y",(function(){return T})),a.d(t,"A",(function(){return S})),a.d(t,"E",(function(){return L})),a.d(t,"C",(function(){return j})),a.d(t,"v",(function(){return R})),a.d(t,"D",(function(){return Y})),a.d(t,"s",(function(){return F})),a.d(t,"t",(function(){return x})),a.d(t,"w",(function(){return O})),a.d(t,"x",(function(){return M})),a.d(t,"B",(function(){return B})),a.d(t,"k",(function(){return _})),a.d(t,"r",(function(){return C})),a.d(t,"z",(function(){return q})),a.d(t,"j",(function(){return D}));var n=a(3),i=a.n(n),s=a(5),o=a(1);let r,d=window.AudioContext||window.webkitAudioContext,u={verbosity:0,suppressedLogs:0},l=function(e,t){t=t||1,u.verbosity>=t?console.log(e):u.suppressedLogs++},c=document.querySelector("a-scene");c&&c.audioListener&&c.audioListener.context?(r=c.audioListener.context,l("An A-Frame scene has been detected.")):r=new d;let h=function(){l("unlock",2),"suspended"===r.state?(l("suspended",2),r.resume()):"running"===r.state&&(l("The audio context is running.",2),l(r,2),window.removeEventListener("mousemove",h),window.removeEventListener("touchstart",h),window.removeEventListener("touchend",h))};window.addEventListener("mousemove",h),window.addEventListener("touchstart",h),window.addEventListener("touchend",h);let p=function(e){if(e.navigator.mediaDevices&&e.navigator.mediaDevices.getUserMedia)return e.navigator.mediaDevices.getUserMedia.bind(e.navigator.mediaDevices);let t=e.navigator.getUserMedia||e.navigator.webkitGetUserMedia||e.navigator.mozGetUserMedia;return t?function(a){return new Promise((function(n,i){t.call(e.navigator,a,n,i)}))}:function(){throw"getUserMedia is unsupported"}}(window);l(p?"Your browser supports getUserMedia.":"Your browser does not support getUserMedia.");let f=function(){Math.seed=6,Math.seededRandom=function(e,t){return e=e||1,t=t||0,Math.seed=(9301*Math.seed+49297)%233280,t+Math.seed/233280*(e-t)};for(var e=2*r.sampleRate,t=r.createBuffer(1,e,r.sampleRate),a=t.getChannelData(0),n=0;n<e;n++)a[n]=2*Math.seededRandom()-1;return t}(),v=function(e){return"[object Array]"===Object.prototype.toString.call(e)},A=function(e,t){return null==e?t:e},m=function(e,t){e.env={attack:t.env?A(t.env.attack,0):0,decay:t.env?A(t.env.decay,0):0,sustain:t.env?A(t.env.sustain,1):1,hold:t.env?A(t.env.hold,3.14159):3.14159,release:t.env?A(t.env.release,0):0},e.defaultEnv={attack:t.env?A(t.env.attack,0):0,decay:t.env?A(t.env.decay,0):0,sustain:t.env?A(t.env.sustain,1):1,hold:t.env?A(t.env.hold,3.14159):3.14159,release:t.env?A(t.env.release,0):0},e.userSetHold=!(!t.env||!t.env.hold)},y=function(e,t){t.filter?v(t.filter)?e.filter=t.filter.map((function(e){return{type:e.type||"lowpass",frequency:e.frequency||600,q:e.q||1,env:e.env||null}})):e.filter=[{type:t.filter.type||"lowpass",frequency:t.filter.frequency||600,q:t.filter.q||1,env:t.filter.env||null}]:t.filter=null},g=function(e,t){var a=new XMLHttpRequest;a.open("GET",e.source,!0),a.responseType="arraybuffer",e.playable--,a.onload=function(){r.decodeAudioData(a.response,(function(a){e.decodedBuffer=a,3.14159===e.env.hold&&(e.defaultEnv.hold=e.decodedBuffer.duration*(1/e.rate),e.env.hold=e.decodedBuffer.duration*(1/e.rate)),e.duration=1e3*e.env.hold,t&&t(e),e.playable++,e.playOnLoad&&e.play(e.playOnLoadArg)}))},a.send()},b=function(e,t){t.vibrato?e.vibrato={shape:A(t.vibrato.shape,"sine"),speed:A(t.vibrato.speed,1),magnitude:A(t.vibrato.magnitude,5),attack:A(t.vibrato.attack,0)}:e.vibrato=null},N=function(e,t){t.tremolo?e.tremolo={shape:A(t.tremolo.shape,"sine"),speed:A(t.tremolo.speed,1),magnitude:A(t.tremolo.magnitude,5),attack:A(t.tremolo.attack,1)}:e.tremolo=null},w=function(e,t){if(t.reverb){e.reverb={wet:A(t.reverb.wet,1)};var a=t.reverb.impulse||"https://frivolous.biz/audio/widehall.wav",n=new XMLHttpRequest;n.open("GET",a,!0),n.responseType="arraybuffer",e.playable--,n.onload=function(){r.decodeAudioData(n.response,(function(a){e.reverb.buffer=a,e.playable++,e.playOnLoad&&e.play(e.playOnLoadArg),e instanceof s.a&&e.setUp(t),"mic"===e.source&&e.reverb&&e.reverb.buffer&&e.reverb.node&&!e.reverb.node.buffer&&(e.reverb.node.convolver.buffer=e.reverb.buffer)}))},n.send()}else e.reverb=null},P=function(e,t){"panning"in t?(e.panning={location:t.panning},"number"==typeof t.panning?e.panning.type="stereo":(e.panning.type="3d",e.panning.panningModel=t.panningModel||"equalpower",e.panning.distanceModel=t.distanceModel,e.panning.maxDistance=t.maxDistance,e.panning.rolloffFactor=t.rolloffFactor,e.panning.refDistance=t.refDistance,e.panning.coneInnerAngle=t.coneInnerAngle,e.panning.coneOuterAngle=t.coneOuterAngle,e.panning.coneOuterGain=t.coneOuterGain)):e.panning={location:0,type:"stereo"},"stereo"!==e.panning.type||r.createStereoPanner||(l("Your browser does not support stereo panning. Falling back to 3D panning."),e.panning={location:[0,0,0],type:"3d",panningModel:"equalpower"})},k=function(e,t){t.delay?e.delay={delayTime:A(t.delay.delayTime,.5),maxDelayTime:A(t.delay.maxDelayTime,2),feedback:A(t.delay.feedback,.25),wet:A(t.delay.wet,.25)}:e.delay=null},E={micConsent:!1},G=function(e,t){return e.nodes=[],e.mediaStreamSource=null,e.gain=null,p({audio:!0,video:!1}).then((function(a){return e.mediaStreamSource=r.createMediaStreamSource(a),E.micConsent=!0,T(e,t),e})).catch((function(e){l("Error setting up microphone input: ",e)}))},T=function(e,t){e.nodes=[],e.gain=r.createGain(),e.gain.gain.value=A(t.volume,e.volume),e.nodes.push(e.mediaStreamSource),e.nodes.push(e.gain),(e.filter||t.filter)&&D(e,t),(e.reverb||t.reverb)&&B(e,t),P(e,t),S(e,t),(e.delay||t.delay)&&R(e,t),Y(e,t),e.setUpExternalFxOnPlay(t,r)},_=function(e,t){e.filter.forEach((function(e,a){e.node.frequency.linearRampToValueAtTime(e.frequency,t.exactTime),e.node.frequency.linearRampToValueAtTime(e.env.frequency,t.exactTime+e.env.attack)}))},C=function(e,t){let a,n=t.loop||t.loop;a=-1!==e.env.hold&&(!n||e.userSetHold||t.env&&t.env.hold)?e.env.hold:999,e.gain[0].gain.linearRampToValueAtTime(1e-4,t.exactTime),e.gain[0].gain.linearRampToValueAtTime(e.volume,t.exactTime+e.env.attack+1e-5),e.gain[0].gain.linearRampToValueAtTime(e.volume*e.env.sustain,t.exactTime+e.env.attack+e.env.decay+2e-5),e.gain[0].gain.linearRampToValueAtTime(e.volume*e.env.sustain,t.exactTime+e.env.attack+e.env.decay+a+3e-5),e.gain[0].gain.linearRampToValueAtTime(1e-4,t.exactTime+e.env.attack+e.env.decay+a+e.env.release+4e-5),e.soundSource.start(t.exactTime,t.offset),e.soundSource.playbackRate||e.soundSource.stop(t.exactTime+e.env.attack+e.env.decay+a+e.env.release+5e-5)},F=function(e,t){let a,n=t&&t.destination||e.destination;for(let t=1;t<e.nodes.length;t++){let a,n;a="custom"===e.nodes[t-1].interface?e.nodes[t-1].output:e.nodes[t-1],n="custom"===e.nodes[t].interface?e.nodes[t].input:e.nodes[t],a.connect(n)}a="custom"===e.nodes[e.nodes.length-1].interface?e.nodes[e.nodes.length-1].output:e.nodes[e.nodes.length-1],a.connect(n)},x=function(e,t){let a;for(let t=1;t<e.length;t++){let a,n;a="custom"===e[t-1].interface?e[t-1].output:e[t-1],n="custom"===e[t].interface?e[t].input:e[t],a.disconnect(n)}a="custom"===e[e.length-1].interface?e[e.length-1].output:e[e.length-1],a.disconnect(t)},q=function(e,t){t=t||{},e.soundSource=r.createOscillator(),e.soundSource.type=e.source,t.pitch?t.pitch in o.a?e.soundSource.frequency.value=o.a[t.pitch]:e.soundSource.frequency.value=t.pitch:e.soundSource.frequency.value=e.pitch},O=function(e,t){t&&t.env?(e.env.attack=A(t.env.attack,e.defaultEnv.attack),e.env.decay=A(t.env.decay,e.defaultEnv.decay),e.env.sustain=A(t.env.sustain,e.defaultEnv.sustain),e.env.hold=A(t.env.hold,e.defaultEnv.hold),e.env.release=A(t.env.release,e.defaultEnv.release)):e.env={attack:e.defaultEnv.attack,decay:e.defaultEnv.decay,sustain:e.defaultEnv.sustain,hold:e.defaultEnv.hold,release:e.defaultEnv.release}},D=function(e,t){t.filter&&!v(t.filter)&&(t.filter=[t.filter]),e.filter.forEach((function(a,n){a.node=r.createBiquadFilter(),a.node.type=a.type,a.node.frequency.value=t.filter&&t.filter[n]&&t.filter[n].frequency||a.frequency,a.node.Q.value=t.filter&&t.filter[n]&&t.filter[n].q||a.q,(t.filter&&t.filter[n].env||e.filter[n].env)&&"mic"!==e.source&&(a.env={attack:t.filter&&t.filter[n].env&&t.filter[n].env.attack||e.filter[n].env.attack,frequency:t.filter&&t.filter[n].env&&t.filter[n].env.frequency||e.filter[n].env.frequency}),e.nodes.push(a.node)}))},M=function(e,t){t&&t.filter&&e.filter?(v(t.filter)||(t.filter=[t.filter]),D(e,t)):e.filter&&D(e,e)},B=function(e,t){var a={interface:"custom",input:r.createGain(),convolver:r.createConvolver(),wet:r.createGain(),output:r.createGain()};a.convolver.buffer=e.reverb.buffer,a.wet.gain.value=e.reverb.wet,a.input.connect(a.convolver),a.input.connect(a.output),a.convolver.connect(a.wet),a.wet.connect(a.output),e.reverb.node=a,e.nodes.push(e.reverb.node)},S=function(e,t){var a=t&&t.panning;void 0===a&&(a=e.panning.location),"number"==typeof a&&r.createStereoPanner?(e.panning.node=r.createStereoPanner(),e.panning.node.pan.value=a,e.panning.type="stereo"):(e.panning.node=r.createPanner(),"number"==typeof a?e.panning.node.setPosition(a,0,0):e.panning.node.setPosition(a[0],a[1],a[2]),e.panning.node.panningModel=t.panningModel||e.panningModel||"equalpower",e.panning.type="3d",e.panning.node.distanceModel=t.distanceModel||e.distanceModel||e.panning.node.distanceModel,e.panning.node.maxDistance=t.maxDistance||e.maxDistance||e.panning.node.maxDistance,e.panning.node.rolloffFactor=t.rolloffFactor||e.rolloffFactor||e.panning.node.rolloffFactor,e.panning.node.refDistance=t.refDistance||e.refDistance||e.panning.node.refDistance,e.panning.node.coneInnerAngle=t.coneInnerAngle||e.coneInnerAngle||e.panning.node.coneInnerAngle,e.panning.node.coneOuterAngle=t.coneOuterAngle||e.coneOuterAngle||e.panning.node.coneOuterAngle,e.panning.node.coneOuterGain=t.coneOuterGain||e.coneOuterGain||e.panning.node.coneOuterGain),e.nodes.push(e.panning.node)},L=function(e,t,a){e.vibrato.wad=new a({source:e.vibrato.shape,pitch:e.vibrato.speed,volume:e.vibrato.magnitude,env:{attack:e.vibrato.attack},destination:e.soundSource.frequency}),e.vibrato.wad.play()},j=function(e,t,a){e.tremolo.wad=new a({source:e.tremolo.shape,pitch:e.tremolo.speed,volume:e.tremolo.magnitude,env:{attack:e.tremolo.attack,hold:10},destination:e.gain[0].gain}),e.tremolo.wad.play()},R=function(e,t){if(e.delay){t.delay||(t.delay={});var a={interface:"custom",input:r.createGain(),output:r.createGain(),delayNode:r.createDelay(e.delay.maxDelayTime),feedbackNode:r.createGain(),wetNode:r.createGain()};a.delayNode.delayTime.value=A(t.delay.delayTime,e.delay.delayTime),a.feedbackNode.gain.value=A(t.delay.feedback,e.delay.feedback),a.wetNode.gain.value=A(t.delay.wet,e.delay.wet),a.input.connect(a.delayNode),a.input.connect(a.output),a.delayNode.connect(a.feedbackNode),a.delayNode.connect(a.wetNode),a.feedbackNode.connect(a.delayNode),a.wetNode.connect(a.output),e.delay.delayNode=a,e.nodes.push(a)}},I=function(e,t){e.compressor=r.createDynamicsCompressor(),e.compressor.attack.value=A(t.compressor.attack,e.compressor.attack.value),e.compressor.knee.value=A(t.compressor.knee,e.compressor.knee.value),e.compressor.ratio.value=A(t.compressor.ratio,e.compressor.ratio.value),e.compressor.release.value=A(t.compressor.release,e.compressor.release.value),e.compressor.threshold.value=A(t.compressor.threshold,e.compressor.threshold.value),e.nodes.push(e.compressor)},V=new i.a(r),Y=function(e,t){if(!e.tuna&&!t.tuna)return;let a={};if(e.tuna)for(let t in e.tuna)a[t]=e.tuna[t];if(t.tuna)for(let e in t.tuna)a[e]=t.tuna[e];for(let t in a){let n=new V[t](a[t]);e.nodes.push(n)}}},function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"b",(function(){return i}));let n={A0:27.5,"A#0":29.1352,Bb0:29.1352,B0:30.8677,"B#0":32.7032,Cb1:30.8677,C1:32.7032,"C#1":34.6478,Db1:34.6478,D1:36.7081,"D#1":38.8909,Eb1:38.8909,E1:41.2034,Fb1:41.2034,"E#1":43.6535,F1:43.6535,"F#1":46.2493,Gb1:46.2493,G1:48.9994,"G#1":51.9131,Ab1:51.9131,A1:55,"A#1":58.2705,Bb1:58.2705,B1:61.7354,Cb2:61.7354,"B#1":65.4064,C2:65.4064,"C#2":69.2957,Db2:69.2957,D2:73.4162,"D#2":77.7817,Eb2:77.7817,E2:82.4069,Fb2:82.4069,"E#2":87.3071,F2:87.3071,"F#2":92.4986,Gb2:92.4986,G2:97.9989,"G#2":103.826,Ab2:103.826,A2:110,"A#2":116.541,Bb2:116.541,B2:123.471,Cb3:123.471,"B#2":130.813,C3:130.813,"C#3":138.591,Db3:138.591,D3:146.832,"D#3":155.563,Eb3:155.563,E3:164.814,Fb3:164.814,"E#3":174.614,F3:174.614,"F#3":184.997,Gb3:184.997,G3:195.998,"G#3":207.652,Ab3:207.652,A3:220,"A#3":233.082,Bb3:233.082,B3:246.942,Cb4:246.942,"B#3":261.626,C4:261.626,"C#4":277.183,Db4:277.183,D4:293.665,"D#4":311.127,Eb4:311.127,E4:329.628,Fb4:329.628,"E#4":349.228,F4:349.228,"F#4":369.994,Gb4:369.994,G4:391.995,"G#4":415.305,Ab4:415.305,A4:440,"A#4":466.164,Bb4:466.164,B4:493.883,Cb5:493.883,"B#4":523.251,C5:523.251,"C#5":554.365,Db5:554.365,D5:587.33,"D#5":622.254,Eb5:622.254,E5:659.255,Fb5:659.255,"E#5":698.456,F5:698.456,"F#5":739.989,Gb5:739.989,G5:783.991,"G#5":830.609,Ab5:830.609,A5:880,"A#5":932.328,Bb5:932.328,B5:987.767,Cb6:987.767,"B#5":1046.5,C6:1046.5,"C#6":1108.73,Db6:1108.73,D6:1174.66,"D#6":1244.51,Eb6:1244.51,Fb6:1318.51,E6:1318.51,"E#6":1396.91,F6:1396.91,"F#6":1479.98,Gb6:1479.98,G6:1567.98,"G#6":1661.22,Ab6:1661.22,A6:1760,"A#6":1864.66,Bb6:1864.66,B6:1975.53,Cb7:1975.53,"B#6":2093,C7:2093,"C#7":2217.46,Db7:2217.46,D7:2349.32,"D#7":2489.02,Eb7:2489.02,E7:2637.02,Fb7:2637.02,"E#7":2793.83,F7:2793.83,"F#7":2959.96,Gb7:2959.96,G7:3135.96,"G#7":3322.44,Ab7:3322.44,A7:3520,"A#7":3729.31,Bb7:3729.31,B7:3951.07,Cb8:3951.07,"B#7":4186.01,C8:4186.01},i=["C0","C#0","D0","D#0","E0","F0","F#0","G0","G#0","A0","A#0","B0","C1","C#1","D1","D#1","E1","F1","F#1","G1","G#1","A1","A#1","B1","C2","C#2","D2","D#2","E2","F2","F#2","G2","G#2","A2","A#2","B2","C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3","C4","C#4","D4","D#4","E4","F4","F#4","G4","G#4","A4","A#4","B4","C5","C#5","D5","D#5","E5","F5","F#5","G5","G#5","A5","A#5","B5","C6","C#6","D6","D#6","E6","F6","F#6","G6","G#6","A6","A#6","B6","C7","C#7","D7","D#7","E7","F7","F#7","G7","G#7","A7","A#7","B7","C8"]},function(e,t,a){"use strict";(function(e){var n=a(6),i=a(5),s=a(7),o=a(1),r=a(4),d=a(8),u=a(0);let l=d.a;l.Poly=i.a,l.SoundIterator=function(e){return new n.a(e,l)},l.pitches=o.a,l.pitchesArray=o.b,l.midiMap=r.d,l.assignMidiMap=r.a,l.midiInstrument=r.c,l.midiInputs=r.b,l.presets=s.a,l.logs=u.o,e.exports&&(e.exports=l),t.a=l}).call(this,a(9)(e))},function(e,t,a){!function(){var t,a,n=function(e,t){e.value=t},i=Object.create(null,{activate:{writable:!0,value:function(e){e?(this.input.disconnect(),this.input.connect(this.activateNode),this.activateCallback&&this.activateCallback(e)):(this.input.disconnect(),this.input.connect(this.output))}},bypass:{get:function(){return this._bypass},set:function(e){this._lastBypassValue!==e&&(this._bypass=e,this.activate(!e),this._lastBypassValue=e)}},connect:{value:function(e){this.output.connect(e)}},disconnect:{value:function(e){this.output.disconnect(e)}},connectInOrder:{value:function(e){for(var t=e.length-1;t--;){if(!e[t].connect)return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.",e[t]);e[t+1].input?e[t].connect(e[t+1].input):e[t].connect(e[t+1])}}},getDefaults:{value:function(){var e={};for(var t in this.defaults)e[t]=this.defaults[t].value;return e}},automate:{value:function(e,a,n,i){var s,o=i?~~(i/1e3):t.currentTime,r=n?~~(n/1e3):0,d=this.defaults[e],u=this[e];u?d.automatable?(n?(s="linearRampToValueAtTime",u.cancelScheduledValues(o),u.setValueAtTime(u.value,o)):s="setValueAtTime",u[s](a,r+o)):u=a:console.error("Invalid Property for "+this.name)}}}),s="float",o="boolean",r="int";function d(e){if(!(this instanceof d))return new d(e);var n="undefined"==typeof window?{}:window;if(n.AudioContext||(n.AudioContext=n.webkitAudioContext),e||(console.log("tuna.js: Missing audio context! Creating a new context for you."),e=n.AudioContext&&new n.AudioContext),!e)throw new Error("Tuna cannot initialize because this environment does not support web audio.");!function(e){if(!0===e.__connectified__)return;var t=e.createGain(),a=Object.getPrototypeOf(Object.getPrototypeOf(t)),n=a.connect;a.connect=function(){var e=arguments[0];return arguments[0]=i.isPrototypeOf?i.isPrototypeOf(e)?e.input:e:e.input||e,n.apply(this,arguments),e},e.__connectified__=!0}(e),t=e,a=this}function u(e){return Math.max(0,Math.round(100*Math.pow(2,e/6))/100)}function l(e,t){var a,n,i,s=0,o=0,r=0;return a=e.toExponential().match(/^.\.?(.*)e(.+)$/),s=parseInt(a[2],10)-(a[1]+"").length,a=t.toExponential().match(/^.\.?(.*)e(.+)$/),(i=parseInt(a[2],10)-(a[1]+"").length)>s&&(s=i),n=e%t,s<-100||s>20?(o=Math.round(Math.log(n)/Math.log(10)),(n/(r=Math.pow(10,o))).toFixed(o-s)*r):parseFloat(n.toFixed(-s))}function c(e){return 0===e?1:Math.abs(e)/e}function h(e){return(Math.exp(e)-Math.exp(-e))/(Math.exp(e)+Math.exp(-e))}function p(e,t){return void 0===e?t:e}e.exports?e.exports=d:window.define("Tuna",(function(){return d})),d.prototype.Bitcrusher=function(e){e||(e=this.getDefaults()),this.bufferSize=e.bufferSize||this.defaults.bufferSize.value,this.input=t.createGain(),this.activateNode=t.createGain(),this.processor=t.createScriptProcessor(this.bufferSize,1,1),this.output=t.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output);var a,n,i,s,o,r=0,d=0;this.processor.onaudioprocess=function(e){for(a=e.inputBuffer.getChannelData(0),n=e.outputBuffer.getChannelData(0),i=Math.pow(.5,this.bits),o=a.length,s=0;s<o;s++)(r+=this.normfreq)>=1&&(r-=1,d=i*Math.floor(a[s]/i+.5)),n[s]=d},this.bits=e.bits||this.defaults.bits.value,this.normfreq=p(e.normfreq,this.defaults.normfreq.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Bitcrusher.prototype=Object.create(i,{name:{value:"Bitcrusher"},defaults:{writable:!0,value:{bits:{value:4,min:1,max:16,automatable:!1,type:r},bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},normfreq:{value:.1,min:1e-4,max:1,automatable:!1,type:s}}},bits:{enumerable:!0,get:function(){return this.processor.bits},set:function(e){this.processor.bits=e}},normfreq:{enumerable:!0,get:function(){return this.processor.normfreq},set:function(e){this.processor.normfreq=e}}}),d.prototype.Cabinet=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.convolver=this.newConvolver(e.impulsePath||"../impulses/impulse_guitar.wav"),this.makeupNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.convolver.input),this.convolver.output.connect(this.makeupNode),this.makeupNode.connect(this.output),this.makeupNode.gain.value=p(e.makeupGain,this.defaults.makeupGain.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Cabinet.prototype=Object.create(i,{name:{value:"Cabinet"},defaults:{writable:!0,value:{makeupGain:{value:1,min:0,max:20,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(e){this.makeupNode.gain.setTargetAtTime(e,t.currentTime,.01)}},newConvolver:{value:function(e){return new a.Convolver({impulse:e,dryLevel:0,wetLevel:1})}}}),d.prototype.Chorus=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.attenuator=this.activateNode=t.createGain(),this.splitter=t.createChannelSplitter(2),this.delayL=t.createDelay(),this.delayR=t.createDelay(),this.feedbackGainNodeLR=t.createGain(),this.feedbackGainNodeRL=t.createGain(),this.merger=t.createChannelMerger(2),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.delayL.delayTime,callback:n}),this.lfoR=new a.LFO({target:this.delayR.delayTime,callback:n}),this.input.connect(this.attenuator),this.attenuator.connect(this.output),this.attenuator.connect(this.splitter),this.splitter.connect(this.delayL,0),this.splitter.connect(this.delayR,1),this.delayL.connect(this.feedbackGainNodeLR),this.delayR.connect(this.feedbackGainNodeRL),this.feedbackGainNodeLR.connect(this.delayR),this.feedbackGainNodeRL.connect(this.delayL),this.delayL.connect(this.merger,0,0),this.delayR.connect(this.merger,0,1),this.merger.connect(this.output),this.feedback=p(e.feedback,this.defaults.feedback.value),this.rate=p(e.rate,this.defaults.rate.value),this.delay=p(e.delay,this.defaults.delay.value),this.depth=p(e.depth,this.defaults.depth.value),this.lfoR.phase=Math.PI/2,this.attenuator.gain.value=.6934,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Chorus.prototype=Object.create(i,{name:{value:"Chorus"},defaults:{writable:!0,value:{feedback:{value:.4,min:0,max:.95,automatable:!1,type:s},delay:{value:.0045,min:0,max:1,automatable:!1,type:s},depth:{value:.7,min:0,max:1,automatable:!1,type:s},rate:{value:1.5,min:0,max:8,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},delay:{enumerable:!0,get:function(){return this._delay},set:function(e){this._delay=2*Math.pow(10,e)*2e-4,this.lfoL.offset=this._delay,this.lfoR.offset=this._delay,this._depth=this._depth}},depth:{enumerable:!0,get:function(){return this._depth},set:function(e){this._depth=e,this.lfoL.oscillation=this._depth*this._delay,this.lfoR.oscillation=this._depth*this._delay}},feedback:{enumerable:!0,get:function(){return this._feedback},set:function(e){this._feedback=e,this.feedbackGainNodeLR.gain.setTargetAtTime(this._feedback,t.currentTime,.01),this.feedbackGainNodeRL.gain.setTargetAtTime(this._feedback,t.currentTime,.01)}},rate:{enumerable:!0,get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}}}),d.prototype.Compressor=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.compNode=this.activateNode=t.createDynamicsCompressor(),this.makeupNode=t.createGain(),this.output=t.createGain(),this.compNode.connect(this.makeupNode),this.makeupNode.connect(this.output),this.automakeup=p(e.automakeup,this.defaults.automakeup.value),this.automakeup?this.makeupNode.gain.value=u(this.computeMakeup()):this.makeupNode.gain.value=u(p(e.makeupGain,this.defaults.makeupGain.value)),this.threshold=p(e.threshold,this.defaults.threshold.value),this.release=p(e.release,this.defaults.release.value),this.attack=p(e.attack,this.defaults.attack.value),this.ratio=e.ratio||this.defaults.ratio.value,this.knee=p(e.knee,this.defaults.knee.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Compressor.prototype=Object.create(i,{name:{value:"Compressor"},defaults:{writable:!0,value:{threshold:{value:-20,min:-60,max:0,automatable:!0,type:s},release:{value:250,min:10,max:2e3,automatable:!0,type:s},makeupGain:{value:1,min:1,max:100,automatable:!0,type:s},attack:{value:1,min:0,max:1e3,automatable:!0,type:s},ratio:{value:4,min:1,max:50,automatable:!0,type:s},knee:{value:5,min:0,max:40,automatable:!0,type:s},automakeup:{value:!1,automatable:!1,type:o},bypass:{value:!1,automatable:!1,type:o}}},computeMakeup:{value:function(){var e=this.compNode;return-(e.threshold.value-e.threshold.value/e.ratio.value)/4}},automakeup:{enumerable:!0,get:function(){return this._automakeup},set:function(e){this._automakeup=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},threshold:{enumerable:!0,get:function(){return this.compNode.threshold},set:function(e){this.compNode.threshold.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},ratio:{enumerable:!0,get:function(){return this.compNode.ratio},set:function(e){this.compNode.ratio.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},knee:{enumerable:!0,get:function(){return this.compNode.knee},set:function(e){this.compNode.knee.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},attack:{enumerable:!0,get:function(){return this.compNode.attack},set:function(e){this.compNode.attack.value=e/1e3}},release:{enumerable:!0,get:function(){return this.compNode.release},set:function(e){this.compNode.release.value=e/1e3}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(e){this.makeupNode.gain.setTargetAtTime(u(e),t.currentTime,.01)}}}),d.prototype.Convolver=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.convolver=t.createConvolver(),this.dry=t.createGain(),this.filterLow=t.createBiquadFilter(),this.filterHigh=t.createBiquadFilter(),this.wet=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.filterLow),this.activateNode.connect(this.dry),this.filterLow.connect(this.filterHigh),this.filterHigh.connect(this.convolver),this.convolver.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.dry.gain.value=p(e.dryLevel,this.defaults.dryLevel.value),this.wet.gain.value=p(e.wetLevel,this.defaults.wetLevel.value),this.filterHigh.frequency.value=e.highCut||this.defaults.highCut.value,this.filterLow.frequency.value=e.lowCut||this.defaults.lowCut.value,this.output.gain.value=p(e.level,this.defaults.level.value),this.filterHigh.type="lowpass",this.filterLow.type="highpass",this.buffer=e.impulse||"../impulses/ir_rev_short.wav",this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Convolver.prototype=Object.create(i,{name:{value:"Convolver"},defaults:{writable:!0,value:{highCut:{value:22050,min:20,max:22050,automatable:!0,type:s},lowCut:{value:20,min:20,max:22050,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},wetLevel:{value:1,min:0,max:1,automatable:!0,type:s},level:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},lowCut:{get:function(){return this.filterLow.frequency},set:function(e){this.filterLow.frequency.setTargetAtTime(e,t.currentTime,.01)}},highCut:{get:function(){return this.filterHigh.frequency},set:function(e){this.filterHigh.frequency.setTargetAtTime(e,t.currentTime,.01)}},level:{get:function(){return this.output.gain},set:function(e){this.output.gain.setTargetAtTime(e,t.currentTime,.01)}},dryLevel:{get:function(){return this.dry.gain},set:function(e){this.dry.gain.setTargetAtTime(e,t.currentTime,.01)}},wetLevel:{get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},buffer:{enumerable:!1,get:function(){return this.convolver.buffer},set:function(e){var a=this.convolver,n=new XMLHttpRequest;e?(n.open("GET",e,!0),n.responseType="arraybuffer",n.onreadystatechange=function(){4===n.readyState&&(n.status<300&&n.status>199||302===n.status)&&t.decodeAudioData(n.response,(function(e){a.buffer=e}),(function(e){e&&console.log("Tuna.Convolver.setBuffer: Error decoding data"+e)}))},n.send(null)):console.log("Tuna.Convolver.setBuffer: Missing impulse path!")}}}),d.prototype.Delay=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.dry=t.createGain(),this.wet=t.createGain(),this.filter=t.createBiquadFilter(),this.delay=t.createDelay(10),this.feedbackNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.delay),this.activateNode.connect(this.dry),this.delay.connect(this.filter),this.filter.connect(this.feedbackNode),this.feedbackNode.connect(this.delay),this.feedbackNode.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.delayTime=e.delayTime||this.defaults.delayTime.value,this.feedbackNode.gain.value=p(e.feedback,this.defaults.feedback.value),this.wet.gain.value=p(e.wetLevel,this.defaults.wetLevel.value),this.dry.gain.value=p(e.dryLevel,this.defaults.dryLevel.value),this.filter.frequency.value=e.cutoff||this.defaults.cutoff.value,this.filter.type="lowpass",this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Delay.prototype=Object.create(i,{name:{value:"Delay"},defaults:{writable:!0,value:{delayTime:{value:100,min:20,max:1e3,automatable:!1,type:s},feedback:{value:.45,min:0,max:.9,automatable:!0,type:s},cutoff:{value:2e4,min:20,max:2e4,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},delayTime:{enumerable:!0,get:function(){return this.delay.delayTime},set:function(e){this.delay.delayTime.value=e/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},dryLevel:{enumerable:!0,get:function(){return this.dry.gain},set:function(e){this.dry.gain.setTargetAtTime(e,t.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackNode.gain},set:function(e){this.feedbackNode.gain.setTargetAtTime(e,t.currentTime,.01)}},cutoff:{enumerable:!0,get:function(){return this.filter.frequency},set:function(e){this.filter.frequency.setTargetAtTime(e,t.currentTime,.01)}}}),d.prototype.Filter=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.filter=t.createBiquadFilter(),this.output=t.createGain(),this.activateNode.connect(this.filter),this.filter.connect(this.output),this.filter.frequency.value=e.frequency||this.defaults.frequency.value,this.Q=e.resonance||this.defaults.Q.value,this.filterType=p(e.filterType,this.defaults.filterType.value),this.filter.gain.value=p(e.gain,this.defaults.gain.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Filter.prototype=Object.create(i,{name:{value:"Filter"},defaults:{writable:!0,value:{frequency:{value:800,min:20,max:22050,automatable:!0,type:s},Q:{value:1,min:.001,max:100,automatable:!0,type:s},gain:{value:0,min:-40,max:40,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o},filterType:{value:"lowpass",automatable:!1,type:"string"}}},filterType:{enumerable:!0,get:function(){return this.filter.type},set:function(e){this.filter.type=e}},Q:{enumerable:!0,get:function(){return this.filter.Q},set:function(e){this.filter.Q.value=e}},gain:{enumerable:!0,get:function(){return this.filter.gain},set:function(e){this.filter.gain.setTargetAtTime(e,t.currentTime,.01)}},frequency:{enumerable:!0,get:function(){return this.filter.frequency},set:function(e){this.filter.frequency.setTargetAtTime(e,t.currentTime,.01)}}}),d.prototype.Gain=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.gainNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.gainNode),this.gainNode.connect(this.output),this.gainNode.gain.value=p(e.gain,this.defaults.gain.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Gain.prototype=Object.create(i,{name:{value:"Gain"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},gain:{value:1,automatable:!0,type:s}}},gain:{enumerable:!0,get:function(){return this.gainNode.gain},set:function(e){this.gainNode.gain.setTargetAtTime(e,t.currentTime,.01)}}}),d.prototype.MoogFilter=function(e){var a,n,i,s,o,r,d,u,l,c,h,f,v,A,m;e||(e=this.getDefaults()),this.bufferSize=e.bufferSize||this.defaults.bufferSize.value,this.input=t.createGain(),this.activateNode=t.createGain(),this.processor=t.createScriptProcessor(this.bufferSize,1,1),this.output=t.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output),a=n=i=s=o=r=d=u=0,this.processor.onaudioprocess=function(e){for(l=e.inputBuffer.getChannelData(0),c=e.outputBuffer.getChannelData(0),h=1.16*this.cutoff,m=h*h*.35013*(h*h),f=this.resonance*(1-.15*h*h),A=l.length,v=0;v<A;v++)l[v]-=u*f,l[v]*=m,o=l[v]+.3*a+(1-h)*o,a=l[v],r=o+.3*n+(1-h)*r,n=o,d=r+.3*i+(1-h)*d,i=r,u=d+.3*s+(1-h)*u,s=d,c[v]=u},this.cutoff=p(e.cutoff,this.defaults.cutoff.value),this.resonance=p(e.resonance,this.defaults.resonance.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.MoogFilter.prototype=Object.create(i,{name:{value:"MoogFilter"},defaults:{writable:!0,value:{bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},cutoff:{value:.065,min:1e-4,max:1,automatable:!1,type:s},resonance:{value:3.5,min:0,max:4,automatable:!1,type:s}}},cutoff:{enumerable:!0,get:function(){return this.processor.cutoff},set:function(e){this.processor.cutoff=e}},resonance:{enumerable:!0,get:function(){return this.processor.resonance},set:function(e){this.processor.resonance=e}}}),d.prototype.Overdrive=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.inputDrive=t.createGain(),this.waveshaper=t.createWaveShaper(),this.outputDrive=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.inputDrive),this.inputDrive.connect(this.waveshaper),this.waveshaper.connect(this.outputDrive),this.outputDrive.connect(this.output),this.ws_table=new Float32Array(this.k_nSamples),this.drive=p(e.drive,this.defaults.drive.value),this.outputGain=p(e.outputGain,this.defaults.outputGain.value),this.curveAmount=p(e.curveAmount,this.defaults.curveAmount.value),this.algorithmIndex=p(e.algorithmIndex,this.defaults.algorithmIndex.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Overdrive.prototype=Object.create(i,{name:{value:"Overdrive"},defaults:{writable:!0,value:{drive:{value:1,min:0,max:1,automatable:!0,type:s,scaled:!0},outputGain:{value:0,min:-46,max:0,automatable:!0,type:s,scaled:!0},curveAmount:{value:.725,min:0,max:1,automatable:!1,type:s},algorithmIndex:{value:0,min:0,max:5,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o}}},k_nSamples:{value:8192},drive:{get:function(){return this.inputDrive.gain},set:function(e){this._drive=e}},curveAmount:{get:function(){return this._curveAmount},set:function(e){this._curveAmount=e,void 0===this._algorithmIndex&&(this._algorithmIndex=0),this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount,this.k_nSamples,this.ws_table),this.waveshaper.curve=this.ws_table}},outputGain:{get:function(){return this.outputDrive.gain},set:function(e){this._outputGain=u(e),this.outputDrive.gain.setValueAtTime(this._outputGain,t.currentTime,.01)}},algorithmIndex:{get:function(){return this._algorithmIndex},set:function(e){this._algorithmIndex=e,this.curveAmount=this._curveAmount}},waveshaperAlgorithms:{value:[function(e,t,a){var n,i,s=2*(e=Math.min(e,.9999))/(1-e);for(n=0;n<t;n++)i=2*n/t-1,a[n]=(1+s)*i/(1+s*Math.abs(i))},function(e,t,a){var n,i,s;for(n=0;n<t;n++)i=2*n/t-1,s=(.5*Math.pow(i+1.4,2)-1)*s>=0?5.8:1.2,a[n]=h(s)},function(e,t,a){var n,i,s,o=1-e;for(n=0;n<t;n++)s=(i=2*n/t-1)<0?-Math.pow(Math.abs(i),o+.04):Math.pow(i,o),a[n]=h(2*s)},function(e,t,a){var n,i,s,o,r=1-e>.99?.99:1-e;for(n=0;n<t;n++)i=2*n/t-1,(o=Math.abs(i))<r?s=o:o>r?s=r+(o-r)/(1+Math.pow((o-r)/(1-r),2)):o>1&&(s=o),a[n]=c(i)*s*(1/((r+1)/2))},function(e,t,a){var n,i;for(n=0;n<t;n++)i=2*n/t-1,a[n]=i<-.08905?-3/4*(1-Math.pow(1-(Math.abs(i)-.032857),12)+1/3*(Math.abs(i)-.032847))+.01:i>=-.08905&&i<.320018?i*i*-6.153+3.9375*i:.630035},function(e,t,a){var n,i,s=2+Math.round(14*e),o=Math.round(Math.pow(2,s-1));for(n=0;n<t;n++)i=2*n/t-1,a[n]=Math.round(i*o)/o}]}}),d.prototype.Panner=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.panner=t.createStereoPanner(),this.output=t.createGain(),this.activateNode.connect(this.panner),this.panner.connect(this.output),this.pan=p(e.pan,this.defaults.pan.value),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Panner.prototype=Object.create(i,{name:{value:"Panner"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},pan:{value:0,min:-1,max:1,automatable:!0,type:s}}},pan:{enumerable:!0,get:function(){return this.panner.pan},set:function(e){this.panner.pan.value=e}}}),d.prototype.Phaser=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.splitter=this.activateNode=t.createChannelSplitter(2),this.filtersL=[],this.filtersR=[],this.feedbackGainNodeL=t.createGain(),this.feedbackGainNodeR=t.createGain(),this.merger=t.createChannelMerger(2),this.filteredSignal=t.createGain(),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.filtersL,callback:this.callback}),this.lfoR=new a.LFO({target:this.filtersR,callback:this.callback});for(var n=this.stage;n--;)this.filtersL[n]=t.createBiquadFilter(),this.filtersR[n]=t.createBiquadFilter(),this.filtersL[n].type="allpass",this.filtersR[n].type="allpass";this.input.connect(this.splitter),this.input.connect(this.output),this.splitter.connect(this.filtersL[0],0,0),this.splitter.connect(this.filtersR[0],1,0),this.connectInOrder(this.filtersL),this.connectInOrder(this.filtersR),this.filtersL[this.stage-1].connect(this.feedbackGainNodeL),this.filtersL[this.stage-1].connect(this.merger,0,0),this.filtersR[this.stage-1].connect(this.feedbackGainNodeR),this.filtersR[this.stage-1].connect(this.merger,0,1),this.feedbackGainNodeL.connect(this.filtersL[0]),this.feedbackGainNodeR.connect(this.filtersR[0]),this.merger.connect(this.output),this.rate=p(e.rate,this.defaults.rate.value),this.baseModulationFrequency=e.baseModulationFrequency||this.defaults.baseModulationFrequency.value,this.depth=p(e.depth,this.defaults.depth.value),this.feedback=p(e.feedback,this.defaults.feedback.value),this.stereoPhase=p(e.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Phaser.prototype=Object.create(i,{name:{value:"Phaser"},stage:{value:4},defaults:{writable:!0,value:{rate:{value:.1,min:0,max:8,automatable:!1,type:s},depth:{value:.6,min:0,max:1,automatable:!1,type:s},feedback:{value:.7,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:40,min:0,max:180,automatable:!1,type:s},baseModulationFrequency:{value:700,min:500,max:1500,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},callback:{value:function(e,t){for(var a=0;a<4;a++)e[a].frequency.value=t}},depth:{get:function(){return this._depth},set:function(e){this._depth=e,this.lfoL.oscillation=this._baseModulationFrequency*this._depth,this.lfoR.oscillation=this._baseModulationFrequency*this._depth}},rate:{get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},baseModulationFrequency:{enumerable:!0,get:function(){return this._baseModulationFrequency},set:function(e){this._baseModulationFrequency=e,this.lfoL.offset=this._baseModulationFrequency,this.lfoR.offset=this._baseModulationFrequency,this.depth=this._depth}},feedback:{get:function(){return this._feedback},set:function(e){this._feedback=e,this.feedbackGainNodeL.gain.setTargetAtTime(this._feedback,t.currentTime,.01),this.feedbackGainNodeR.gain.setTargetAtTime(this._feedback,t.currentTime,.01)}},stereoPhase:{get:function(){return this._stereoPhase},set:function(e){this._stereoPhase=e;var t=this.lfoL._phase+this._stereoPhase*Math.PI/180;t=l(t,2*Math.PI),this.lfoR._phase=t}}}),d.prototype.PingPongDelay=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.wet=t.createGain(),this.stereoToMonoMix=t.createGain(),this.feedbackLevel=t.createGain(),this.output=t.createGain(),this.delayLeft=t.createDelay(10),this.delayRight=t.createDelay(10),this.activateNode=t.createGain(),this.splitter=t.createChannelSplitter(2),this.merger=t.createChannelMerger(2),this.activateNode.connect(this.splitter),this.splitter.connect(this.stereoToMonoMix,0,0),this.splitter.connect(this.stereoToMonoMix,1,0),this.stereoToMonoMix.gain.value=.5,this.stereoToMonoMix.connect(this.wet),this.wet.connect(this.delayLeft),this.feedbackLevel.connect(this.wet),this.delayLeft.connect(this.delayRight),this.delayRight.connect(this.feedbackLevel),this.delayLeft.connect(this.merger,0,0),this.delayRight.connect(this.merger,0,1),this.merger.connect(this.output),this.activateNode.connect(this.output),this.delayTimeLeft=void 0!==e.delayTimeLeft?e.delayTimeLeft:this.defaults.delayTimeLeft.value,this.delayTimeRight=void 0!==e.delayTimeRight?e.delayTimeRight:this.defaults.delayTimeRight.value,this.feedbackLevel.gain.value=void 0!==e.feedback?e.feedback:this.defaults.feedback.value,this.wet.gain.value=void 0!==e.wetLevel?e.wetLevel:this.defaults.wetLevel.value,this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.PingPongDelay.prototype=Object.create(i,{name:{value:"PingPongDelay"},delayTimeLeft:{enumerable:!0,get:function(){return this._delayTimeLeft},set:function(e){this._delayTimeLeft=e,this.delayLeft.delayTime.value=e/1e3}},delayTimeRight:{enumerable:!0,get:function(){return this._delayTimeRight},set:function(e){this._delayTimeRight=e,this.delayRight.delayTime.value=e/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackLevel.gain},set:function(e){this.feedbackLevel.gain.setTargetAtTime(e,t.currentTime,.01)}},defaults:{writable:!0,value:{delayTimeLeft:{value:200,min:1,max:1e4,automatable:!1,type:r},delayTimeRight:{value:400,min:1,max:1e4,automatable:!1,type:r},feedback:{value:.3,min:0,max:1,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}}}),d.prototype.Tremolo=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.splitter=this.activateNode=t.createChannelSplitter(2),this.amplitudeL=t.createGain(),this.amplitudeR=t.createGain(),this.merger=t.createChannelMerger(2),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.amplitudeL.gain,callback:n}),this.lfoR=new a.LFO({target:this.amplitudeR.gain,callback:n}),this.input.connect(this.splitter),this.splitter.connect(this.amplitudeL,0),this.splitter.connect(this.amplitudeR,1),this.amplitudeL.connect(this.merger,0,0),this.amplitudeR.connect(this.merger,0,1),this.merger.connect(this.output),this.rate=e.rate||this.defaults.rate.value,this.intensity=p(e.intensity,this.defaults.intensity.value),this.stereoPhase=p(e.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.offset=1-this.intensity/2,this.lfoR.offset=1-this.intensity/2,this.lfoL.phase=this.stereoPhase*Math.PI/180,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.Tremolo.prototype=Object.create(i,{name:{value:"Tremolo"},defaults:{writable:!0,value:{intensity:{value:.3,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:0,min:0,max:180,automatable:!1,type:s},rate:{value:5,min:.1,max:11,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},intensity:{enumerable:!0,get:function(){return this._intensity},set:function(e){this._intensity=e,this.lfoL.offset=1-this._intensity/2,this.lfoR.offset=1-this._intensity/2,this.lfoL.oscillation=this._intensity,this.lfoR.oscillation=this._intensity}},rate:{enumerable:!0,get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},stereoPhase:{enumerable:!0,get:function(){return this._stereoPhase},set:function(e){this._stereoPhase=e;var t=this.lfoL._phase+this._stereoPhase*Math.PI/180;t=l(t,2*Math.PI),this.lfoR.phase=t}}}),d.prototype.WahWah=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.envelopeFollower=new a.EnvelopeFollower({target:this,callback:function(e,t){e.sweep=t}}),this.filterBp=t.createBiquadFilter(),this.filterPeaking=t.createBiquadFilter(),this.output=t.createGain(),this.activateNode.connect(this.filterBp),this.filterBp.connect(this.filterPeaking),this.filterPeaking.connect(this.output),this.init(),this.automode=p(e.automode,this.defaults.automode.value),this.resonance=e.resonance||this.defaults.resonance.value,this.sensitivity=p(e.sensitivity,this.defaults.sensitivity.value),this.baseFrequency=p(e.baseFrequency,this.defaults.baseFrequency.value),this.excursionOctaves=e.excursionOctaves||this.defaults.excursionOctaves.value,this.sweep=p(e.sweep,this.defaults.sweep.value),this.activateNode.gain.value=2,this.envelopeFollower.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.WahWah.prototype=Object.create(i,{name:{value:"WahWah"},defaults:{writable:!0,value:{automode:{value:!0,automatable:!1,type:o},baseFrequency:{value:.5,min:0,max:1,automatable:!1,type:s},excursionOctaves:{value:2,min:1,max:6,automatable:!1,type:s},sweep:{value:.2,min:0,max:1,automatable:!1,type:s},resonance:{value:10,min:1,max:100,automatable:!1,type:s},sensitivity:{value:.5,min:-1,max:1,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},automode:{get:function(){return this._automode},set:function(e){this._automode=e,e?(this.activateNode.connect(this.envelopeFollower.input),this.envelopeFollower.activate(!0)):(this.envelopeFollower.activate(!1),this.activateNode.disconnect(),this.activateNode.connect(this.filterBp))}},filterFreqTimeout:{value:0},setFilterFreq:{value:function(){try{this.filterBp.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep),this.filterPeaking.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep)}catch(e){clearTimeout(this.filterFreqTimeout),this.filterFreqTimeout=setTimeout(function(){this.setFilterFreq()}.bind(this),0)}}},sweep:{enumerable:!0,get:function(){return this._sweep},set:function(e){this._sweep=Math.pow(e>1?1:e<0?0:e,this._sensitivity),this.setFilterFreq()}},baseFrequency:{enumerable:!0,get:function(){return this._baseFrequency},set:function(e){this._baseFrequency=50*Math.pow(10,2*e),this._excursionFrequency=Math.min(t.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},excursionOctaves:{enumerable:!0,get:function(){return this._excursionOctaves},set:function(e){this._excursionOctaves=e,this._excursionFrequency=Math.min(t.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},sensitivity:{enumerable:!0,get:function(){return this._sensitivity},set:function(e){this._sensitivity=Math.pow(10,e)}},resonance:{enumerable:!0,get:function(){return this._resonance},set:function(e){this._resonance=e,this.filterPeaking.Q=this._resonance}},init:{value:function(){this.output.gain.value=1,this.filterPeaking.type="peaking",this.filterBp.type="bandpass",this.filterPeaking.frequency.value=100,this.filterPeaking.gain.value=20,this.filterPeaking.Q.value=5,this.filterBp.frequency.value=100,this.filterBp.Q.value=1}}}),d.prototype.EnvelopeFollower=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.jsNode=this.output=t.createScriptProcessor(this.buffersize,1,1),this.input.connect(this.output),this.attackTime=p(e.attackTime,this.defaults.attackTime.value),this.releaseTime=p(e.releaseTime,this.defaults.releaseTime.value),this._envelope=0,this.target=e.target||{},this.callback=e.callback||function(){},this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.EnvelopeFollower.prototype=Object.create(i,{name:{value:"EnvelopeFollower"},defaults:{value:{attackTime:{value:.003,min:0,max:.5,automatable:!1,type:s},releaseTime:{value:.5,min:0,max:.5,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},buffersize:{value:256},envelope:{value:0},sampleRate:{value:44100},attackTime:{enumerable:!0,get:function(){return this._attackTime},set:function(e){this._attackTime=e,this._attackC=Math.exp(-1/this._attackTime*this.sampleRate/this.buffersize)}},releaseTime:{enumerable:!0,get:function(){return this._releaseTime},set:function(e){this._releaseTime=e,this._releaseC=Math.exp(-1/this._releaseTime*this.sampleRate/this.buffersize)}},callback:{get:function(){return this._callback},set:function(e){"function"==typeof e?this._callback=e:console.error("tuna.js: "+this.name+": Callback must be a function!")}},target:{get:function(){return this._target},set:function(e){this._target=e}},activate:{value:function(e){this.activated=e,e?(this.jsNode.connect(t.destination),this.jsNode.onaudioprocess=this.returnCompute(this)):(this.jsNode.disconnect(),this.jsNode.onaudioprocess=null),this.activateCallback&&this.activateCallback(e)}},returnCompute:{value:function(e){return function(t){e.compute(t)}}},compute:{value:function(e){var t,a,n,i,s=e.inputBuffer.getChannelData(0).length,o=e.inputBuffer.numberOfChannels;if(a=n=i=0,o>1)for(i=0;i<s;++i)for(;a<o;++a)n+=(t=e.inputBuffer.getChannelData(a)[i])*t/o;else for(i=0;i<s;++i)n+=(t=e.inputBuffer.getChannelData(0)[i])*t;n=Math.sqrt(n),this._envelope<n?(this._envelope*=this._attackC,this._envelope+=(1-this._attackC)*n):(this._envelope*=this._releaseC,this._envelope+=(1-this._releaseC)*n),this._callback(this._target,this._envelope)}}}),d.prototype.LFO=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.output=t.createScriptProcessor(256,1,1),this.activateNode=t.destination,this.frequency=p(e.frequency,this.defaults.frequency.value),this.offset=p(e.offset,this.defaults.offset.value),this.oscillation=p(e.oscillation,this.defaults.oscillation.value),this.phase=p(e.phase,this.defaults.phase.value),this.target=e.target||{},this.output.onaudioprocess=this.callback(e.callback||function(){}),this.bypass=e.bypass||this.defaults.bypass.value},d.prototype.LFO.prototype=Object.create(i,{name:{value:"LFO"},bufferSize:{value:256},sampleRate:{value:44100},defaults:{value:{frequency:{value:1,min:0,max:20,automatable:!1,type:s},offset:{value:.85,min:0,max:22049,automatable:!1,type:s},oscillation:{value:.3,min:-22050,max:22050,automatable:!1,type:s},phase:{value:0,min:0,max:2*Math.PI,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},frequency:{get:function(){return this._frequency},set:function(e){this._frequency=e,this._phaseInc=2*Math.PI*this._frequency*this.bufferSize/this.sampleRate}},offset:{get:function(){return this._offset},set:function(e){this._offset=e}},oscillation:{get:function(){return this._oscillation},set:function(e){this._oscillation=e}},phase:{get:function(){return this._phase},set:function(e){this._phase=e}},target:{get:function(){return this._target},set:function(e){this._target=e}},activate:{value:function(e){e?(this.output.connect(t.destination),this.activateCallback&&this.activateCallback(e)):this.output.disconnect()}},callback:{value:function(e){var t=this;return function(){t._phase+=t._phaseInc,t._phase>2*Math.PI&&(t._phase=0),e(t._target,t._offset+t._oscillation*Math.sin(t._phase))}}}}),d.toString=d.prototype.toString=function(){return"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js"}}()},function(e,t,a){"use strict";a.d(t,"d",(function(){return d})),a.d(t,"a",(function(){return s})),a.d(t,"c",(function(){return o})),a.d(t,"b",(function(){return r}));var n=a(0),i=a(1);let s=function(e,t,a,n){t=t||0,navigator.requestMIDIAccess().then((function(){r[t]?(r[t].onmidimessage=e,"function"==typeof a&&a()):"function"==typeof n&&n()}))},o={play:function(){Object(n.n)("playing midi")},stop:function(){Object(n.n)("stopping midi")}},r=[],d=function(e){Object(n.n)(e.receivedTime,e.data,2),144===e.data[0]?0===e.data[2]?(Object(n.n)("Playing note: ",2),Object(n.n)(i.b[e.data[1]-12],2),o.stop(i.b[e.data[1]-12])):e.data[2]>0&&(Object(n.n)("Stopping note: ",2),Object(n.n)(i.b[e.data[1]-12],2),o.play({pitch:i.b[e.data[1]-12],label:i.b[e.data[1]-12]})):176===e.data[0]?(Object(n.n)("controller"),46==e.data[1]&&(127==e.data[2]?o.pedalMod=!0:0==e.data[2]&&(o.pedalMod=!1))):224===e.data[0]&&Object(n.n)("pitch bend")},u=function(e){r=[];for(var t=e.inputs.values(),a=t.next();!a.done;a=t.next())r.push(a.value);Object(n.n)("MIDI inputs: "),Object(n.n)(r);for(var i=0;i<r.length;i++)r[i].onmidimessage=d},l=function(e){Object(n.n)("Failed to get MIDI access",e)};if(navigator&&navigator.requestMIDIAccess)try{navigator.requestMIDIAccess().then(u,l)}catch(e){Object(n.n)("Failed to get MIDI access",e)}},function(e,t,a){"use strict";var n=a(0),i=a(1),s=new Uint8Array(2048);function o(e){for(var t,a=e.inputBuffer.getChannelData(0),n=a.length,i=0,s=0;s<n;s++)t=a[s],Math.abs(t)>=this.clipLevel&&(this.clipping=!0,this.lastClip=window.performance.now()),i+=t*t;var o=Math.sqrt(i/n);this.volume=Math.max(o,this.volume*this.averaging)}const r=function(e){e||(e={}),this.isSetUp=!1,this.playable=1,e.reverb?Object(n.f)(this,e):this.setUp(e)};r.prototype.setUp=function(e){var t,a,i,s,r;this.wads=[],this.input=n.i.createAnalyser(),this.input.fftSize=2048,this.nodes=[this.input],this.destination=e.destination||n.i.destination,this.volume=e.volume||1,this.gain=n.i.createGain(),this.gain.gain.value=this.volume,this.output=n.i.createAnalyser(),this.tuna=e.tuna||null,this.audioMeter=null,e.audioMeter&&(this.audioMeter=(t=n.i,a=e.audioMeter.clipLevel,i=e.audioMeter.averaging,s=e.audioMeter.clipLag,(r=t.createScriptProcessor(512)).onaudioprocess=o,r.clipping=!1,r.lastClip=0,r.volume=0,r.clipLevel=a||.98,r.averaging=i||.95,r.clipLag=s||750,r.connect(t.destination),r.checkClipping=function(){return!!this.clipping&&(this.lastClip+this.clipLag<window.performance.now()&&(this.clipping=!1),this.clipping)},r.shutdown=function(){this.disconnect(),this.onaudioprocess=null},r),this.output.connect(this.audioMeter)),Object(n.d)(this,e),this.filter&&Object(n.j)(this,e),this.reverb&&Object(n.B)(this,e),this.constructExternalFx(e,n.i),Object(n.e)(this,e),Object(n.A)(this,e),e.compressor&&Object(n.a)(this,e),Object(n.b)(this,e),Object(n.v)(this,e),Object(n.D)(this,e),this.nodes.push(this.gain),this.nodes.push(this.output),Object(n.s)(this,e),this.isSetUp=!0,e.callback&&e.callback(this)},r.prototype.updatePitch=function(e){this.input.getByteTimeDomainData(s);var t,a,o=function(e,t){var a=-1,n=0,i=0,s=!1;if(e.length<1996)return-1;for(let t=0;t<1e3;t++){var o=(e[t]-128)/128;i+=o*o}if((i=Math.sqrt(i/1e3))<.01)return-1;for(var r=1,d=4;d<=1e3;d++){var u=0;for(let t=0;t<1e3;t++)u+=Math.abs((e[t]-128)/128-(e[t+d]-128)/128);if((u=1-u/1e3)>.9&&u>r)s=!0;else if(s)return t/a;r=u,u>n&&(n=u,a=d)}return n>.01?t/a:-1}(s,n.i.sampleRate);if(-1!==o&&11025!==o&&12e3!==o){var r=o;this.pitch=Math.floor(r);var d=(t=r,a=Math.log(t/440)/Math.log(2)*12,Math.round(a)+69);this.noteName=i.b[d-12]}var u=this;u.rafID=window.requestAnimationFrame((function(){u.updatePitch()}))},r.prototype.stopUpdatingPitch=function(){cancelAnimationFrame(this.rafID)},r.prototype.setVolume=function(e){return this.isSetUp?this.gain.gain.value=e:Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.setPitch=function(e){this.wads.forEach((function(t){return e in i.a?(t.soundSource&&(t.soundSource.frequency.value=i.a[e]),t.pitch=i.a[e]):(t.soundSource&&(t.soundSource.frequency.value=e),t.pitch=e),this}))},r.prototype.play=function(e){if(this.isSetUp)if(this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=e;else{e&&e.volume&&(this.gain.gain.value=e.volume,e.volume=void 0);for(var t=0;t<this.wads.length;t++)this.wads[t].play(e)}else Object(n.n)("This PolyWad is not set up yet.");return this},r.prototype.stop=function(e){if(this.isSetUp)for(var t=0;t<this.wads.length;t++)this.wads[t].stop(e)},r.prototype.add=function(e){return this.isSetUp?(e.destination=this.input,this.wads.push(e),e instanceof r&&(e.output.disconnect(0),e.output.connect(this.input))):Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.remove=function(e){if(this.isSetUp)for(var t=0;t<this.wads.length;t++)this.wads[t]===e&&(this.wads[t].destination=n.i.destination,this.wads.splice(t,1),e instanceof r&&(e.output.disconnect(0),e.output.connect(n.i.destination)));return this},r.prototype.constructExternalFx=function(e,t){},t.a=r},function(e,t,a){"use strict";function n(e,t){if(a=e,!(null!=(n=t)&&"undefined"!=typeof Symbol&&n[Symbol.hasInstance]?n[Symbol.hasInstance](a):a instanceof n))throw new TypeError("Cannot call a class as a function");var a,n}function i(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s,o,r,d=function(){function e(t,a){n(this,e),this.Wad=a,t=Object.assign({},e.defaultArgs,t),this.files=t.files,this.sounds=this.files.map((function(e){return e.play?e:new a({source:e})})),this.randomSounds=this.sounds.slice(),this.random=t.random,this.randomPlaysBeforeRepeat=this.sounds.length>3&&t.randomPlaysBeforeRepeat<this.sounds.length-1?t.randomPlaysBeforeRepeat:0,this.index=0,this.waitingSounds=[]}var t,a,s;return t=e,(a=[{key:"play",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.sounds.length)return 0;if(this.random){var a=Math.floor(Math.random()*this.randomSounds.length),n=this.randomSounds[a];return this.index=this.sounds.indexOf(n),this.waitingSounds=this.waitingSounds.filter((function(t){return t.plays-=1,!(t.plays<1)||(e.randomSounds.push(t.sound),null)})),this.randomPlaysBeforeRepeat&&(this.randomSounds.splice(a,1),this.waitingSounds.push({plays:this.randomPlaysBeforeRepeat,sound:n})),n.play(t)}var i=this.sounds[this.index]?this.sounds[this.index].play(t):void 0;return this.index+=1,this.index>=this.sounds.length&&(this.index=0),i}},{key:"add",value:function(e){return e.play||(e=new this.Wad({source:e})),this.sounds.push(e),this.randomSounds.push(e),this}},{key:"remove",value:function(e){var t=this.sounds.indexOf(e);if(-1===t)throw new Error("That sound does not exist: ".concat(e));this.sounds.splice(t,1);var a=this.randomSounds.indexOf(e);return-1===a?this.waitingSounds=this.waitingSounds.filter((function(t){return t.sound!==e})):this.randomSounds.splice(a,1),this}}])&&i(t.prototype,a),s&&i(t,s),e}();r={files:[],random:!1,randomPlaysBeforeRepeat:0},(o="defaultArgs")in(s=d)?Object.defineProperty(s,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[o]=r,t.a=d},function(e,t,a){"use strict";t.a={hiHatClosed:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.03,release:.01},filter:{type:"highpass",frequency:400,q:1}},snare:{source:"noise",env:{attack:.001,decay:.01,sustain:.2,hold:.03,release:.02},filter:{type:"bandpass",frequency:300,q:.18}},hiHatOpen:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.43,release:.01},filter:{type:"highpass",frequency:100,q:.2}},ghost:{source:"square",volume:.3,env:{attack:.01,decay:.002,sustain:.5,hold:2.5,release:.3},filter:{type:"lowpass",frequency:600,q:7,env:{attack:.7,frequency:1600}},vibrato:{attack:8,speed:8,magnitude:100}},piano:{source:"square",volume:1.4,env:{attack:.01,decay:.005,sustain:.2,hold:.015,release:.3},filter:{type:"lowpass",frequency:1200,q:8.5,env:{attack:.2,frequency:600}}}}},function(e,t,a){"use strict";var n=a(3),i=a.n(n);class s{constructor(e,t){this._setFunc=t,this.AudioParamautomationRate="a-rate",this.defaultValue=e,this.maxValue=34028234663852886e22,this.minValue=-34028234663852886e22,this._value=this.defaultValue}get value(){return this._value}set value(e){this._setFunc(e),this._value=e}}var o=a(0);let r=function(e){if(this.source=e.source,this.destination=e.destination||o.i.destination,this.volume=Object(o.F)(e.volume,1),this.defaultVolume=this.volume,this.playable=1,this.pitch=r.pitches[e.pitch]||e.pitch||440,this.gain=[],this.detune=e.detune||0,this.offset=e.offset||0,this.loop=e.loop||!1,this.tuna=e.tuna||null,this.rate=e.rate||1,this.sprite=e.sprite||null,Object(o.c)(this,e),Object(o.d)(this,e),Object(o.h)(this,e),Object(o.g)(this,e),Object(o.f)(this,e),this.constructExternalFx(e,o.i),Object(o.e)(this,e),Object(o.b)(this,e),this.duration=(this.env.attack+this.env.decay+this.env.hold+this.env.release)*(1/this.rate)*1e3,"noise"===this.source)this.decodedBuffer=o.p;else if("mic"===this.source)Object(o.l)(this,e);else if(this.source in{sine:0,sawtooth:0,square:0,triangle:0})e.callback&&e.callback(this);else if(Object(o.u)(this,e.callback),this.sprite){var t=this;for(var a in this.sprite)this[a]={sprite:this.sprite[a],play:function(e){return(e=e||{}).env=e.env||{},e.env.hold=this.sprite[1]-this.sprite[0],e.offset=this.sprite[0],t.play(e)}}}r.allWads.push(this)};r.allWads=[],r.audioContext=o.i,r.listener=new class{constructor(e){this._listener=e.listener,window.listener=this._listener,this.positionX=this._listener.positionX||new s(0,e=>this._listener.setPosition(e,this.positionY.value,this.positionZ.value)),this.positionY=this._listener.positionY||new s(0,e=>this._listener.setPosition(this.positionX.value,e,this.positionZ.value)),this.positionZ=this._listener.positionZ||new s(0,e=>this._listener.setPosition(this.positionX.value,this.positionY.value,e)),this.forwardX=this._listener.forwardX||new s(0,e=>this._listener.setOrientation(e,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardY=this._listener.ForwardY||new s(0,e=>this._listener.setOrientation(this.forwardX.value,e,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardZ=this._listener.forwardZ||new s(-1,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,e,this.upX.value,this.upY.value,this.upZ.value)),this.upX=this._listener.upZ||new s(0,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,e,this.upY.value,this.upZ.value)),this.upY=this._listener.upY||new s(1,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,e,this.upZ.value)),this.upZ=this._listener.upZ||new s(0,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,e))}setPosition(e,t,a){this.positionX.value=e,this.positionY.value=t,this.positionZ.value=a}getPosition(){return[this.positionX.value,this.positionY.value,this.positionZ.value]}setOrientation(e,t,a,n,i,s){this.forwardX.value=e,this.forwardY.value=t,this.forwardZ.value=a,this.upX.value=n,this.upY.value=i,this.upZ.value=s}getOrientation(){return[this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value]}}(o.i),null!=typeof i.a&&(r.tuna=new i.a(r.audioContext)),r.prototype.constructExternalFx=function(e,t){},r.prototype.setUpExternalFxOnPlay=function(e,t){},r.prototype.play=function(e){if(e=e||{arg:null},this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=e;else if("mic"===this.source)o.q.micConsent?(null===e.arg||(Object(o.d)(this,e),Object(o.h)(this,e),Object(o.g)(this,e),Object(o.f)(this,e),this.constructExternalFx(e,o.i),Object(o.e)(this,e),Object(o.b)(this,e),Object(o.y)(this,e)),Object(o.s)(this,e)):(Object(o.n)("You have not given your browser permission to use your microphone."),Object(o.l)(this,e).then(()=>{this.play(e)}));else{this.nodes=[],e.wait||(e.wait=0),e.volume?this.volume=e.volume:this.volume=this.defaultVolume,e.offset=e.offset||this.offset||0,this.source in{sine:0,sawtooth:0,square:0,triangle:0}?Object(o.z)(this,e):(this.soundSource=o.i.createBufferSource(),this.soundSource.buffer=this.decodedBuffer,("noise"===this.source||this.loop||e.loop)&&(this.soundSource.loop=!0)),this.soundSource.detune&&(this.soundSource.detune.value=e.detune||this.detune),void 0===e.wait&&(e.wait=0),void 0===e.exactTime&&(e.exactTime=o.i.currentTime+e.wait),this.lastPlayedTime=e.exactTime-e.offset,this.nodes.push(this.soundSource),Object(o.w)(this,e),this.soundSource.playbackRate&&(this.soundSource.playbackRate.value=e.rate||this.rate,this.env.hold=this.env.hold*(1/this.soundSource.playbackRate.value)),Object(o.x)(this,e),Object(o.D)(this,e),this.setUpExternalFxOnPlay(e,o.i),this.gain.unshift(o.i.createGain()),this.gain[0].label=e.label,this.gain[0].soundSource=this.soundSource,this.nodes.push(this.gain[0]),this.gain.length>15&&(this.gain.length=15),this.reverb&&Object(o.B)(this,e),Object(o.A)(this,e),Object(o.v)(this,e),Object(o.s)(this,e),this.filter&&this.filter[0].env&&Object(o.k)(this,e),Object(o.r)(this,e),this.vibrato&&Object(o.E)(this,e,r),this.tremolo&&Object(o.C)(this,e,r);var t=this;this.soundSource.linkNode=[],this.nodes.forEach(e=>{this.soundSource.linkNode.push(e)});let a=this.destination;if(this.soundSource.onended=function(e){t.playPromiseResolve(t);let n=e.target;n.linkNode&&setTimeout(()=>{Object(o.t)(n.linkNode,a)},2e3)},!e.unpause)return this.playPromise=new Promise((function(e,a){t.playPromiseResolve=e})),this.playPromise}e.callback&&e.callback(this)},r.prototype.setVolume=function(e,t,a){if(t=t||.01,a){if(this.gain.length>0)for(let t=0;t<this.gain.length;t++)this.gain[t].label===a&&this.gain[t].gain.setValueAtTime(e,o.i.currentTime)}else this.defaultVolume=e,this.gain.length>0&&this.gain[0].gain.setValueAtTime(e,o.i.currentTime);return this},r.prototype.setRate=function(e){var t;return t=e&&e>0?e:0,this.soundSource?this.soundSource.playbackRate.value=t:Object(o.n)("Sorry, but the wad does not contain a soundSource!"),this},r.prototype.setPitch=function(e,t,a){if(t=t||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&(e in r.pitches?this.gain[n].soundSource.frequency.setTargetAtTime(r.pitches[e],o.i.currentTime,t):this.soundSource.frequency.settargetAtTime(e,o.i.currentTime,t));else e in r.pitches?(this.soundSource&&(this.soundSource.frequency.value=r.pitches[e]),this.pitch=r.pitches[e]):(this.soundSource&&(this.soundSource.frequency.value=e),this.pitch=e);return this},r.prototype.setDetune=function(e,t,a){if(t=t||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&this.gain[n].soundSource.detune.setTargetAtTime(e,o.i.currentTime,t);else this.soundSource.detune.setTargetAtTime(e,o.i.currentTime,t);return this},r.prototype.setPanning=function(e,t,a){return t=t||.01,"number"!=typeof e||o.i.createStereoPanner||(e=[e,0,0]),this.panning.location=e,Object(o.m)(e)&&"3d"===this.panning.type&&this.panning.node?this.panning.node.setPosition(e[0],e[1],e[2]):"number"==typeof e&&"stereo"===this.panning.type&&this.panning.node&&this.panning.node.pan.setTargetAtTime(e,o.i.currentTime,t),Object(o.m)(e)?this.panning.type="3d":"number"==typeof e&&(this.panning.type="stereo"),this},r.prototype.setReverb=function(e){var t;return t=e&&e>0&&e<1?e:e>=1?1:0,this.reverb?(this.reverb.wet=t,this.reverb.node&&(this.reverb.node.wet.gain.value=t)):Object(o.n)("Sorry, but the wad does not contain Reverb!"),this},r.prototype.setDelay=function(e,t,a){var n,i,s;return n=e&&e>0?e:0,i=t&&t>0&&t<1?t:t>=1?1:0,s=a&&a>0&&a<1?a:a>=1?1:0,this.delay?(this.delay.delayTime=n,this.delay.wet=i,this.delay.feedback=s,this.delay.delayNode&&(this.delay.delayNode.delayNode.delayTime.value=n,this.delay.delayNode.wetNode.gain.value=i,this.delay.delayNode.feedbackNode.gain.value=s)):Object(o.n)("Sorry, but the wad does not contain delay!",2),this},r.prototype.pause=function(e){this.pauseTime=o.i.currentTime,this.soundSource.onended=null,this.stop(e)},r.prototype.unpause=function(e){(e=e||{}).unpause=!0,this.pauseTime&&null!=this.lastPlayedTime?e.offset=this.pauseTime-this.lastPlayedTime:Object(o.n)("You tried to unpause a wad that was not played and paused, so it just played normally instead.",2),this.play(e)},r.prototype.stop=function(e){if("mic"!==this.source){if(!this.gain||!this.gain.length)return Object(o.n)("You tried to stop a Wad that never played. ",2),void Object(o.n)(this,2);if(e)for(var t=0;t<this.gain.length;t++)this.gain[t].label===e&&(this.gain[t].gain.cancelScheduledValues(o.i.currentTime),this.gain[t].gain.setValueAtTime(this.gain[t].gain.value,o.i.currentTime),this.gain[t].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release));else if(!e){this.gain[0].gain.cancelScheduledValues(o.i.currentTime),this.gain[0].gain.setValueAtTime(this.gain[0].gain.value,o.i.currentTime),this.gain[0].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release);try{this.soundSource.stop(o.i.currentTime+this.env.release)}catch(e){Object(o.n)(e,2);var a=this;setTimeout((function(){a.soundSource.dispatchEvent(new Event("ended")),a.soundSource.onended=null}),1e3*this.env.release)}}}else o.q.micConsent?this.mediaStreamSource.disconnect(0):Object(o.n)("You have not given your browser permission to use your microphone.");this.tremolo&&this.tremolo.wad.stop()},r.stopAll=function(e){for(var t=0;t<r.allWads.length;t++)r.allWads[t].stop(e)},r.setVolume=function(e){for(var t=0;t<r.allWads.length;t++)r.allWads[t].setVolume(e)};t.a=r},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,a){"use strict";a.r(t);var n=a(2),i=0,s=1,o=2,r=3,d=class{constructor(){this.tracks=[],this.interval=null,this.step=0,this.bpm=60,this.state=i,this._frameCount=0,this._skipFrame=60,this._stopMark=!1,this._name="trigon",this._create=null}sine(e){return new n.a({source:"sine",...e})}sawtooth(e){return new n.a({source:"sawtooth",...e})}square(e){return new n.a({source:"square",...e})}triangle(e){return new n.a({source:"triangle",...e})}baseDrum(e){var t=new class{constructor(){this._name="",this._type="trigon_instrument",this.map={}}setMap(e){this.map=e}_play(e,t){var a=this.map[e];a&&(a.onTrigger?a.onTrigger(t):a.play(t))}play(e){var t=e.pitch;e.label;t&&(this.onTrigger?this.onTrigger(e):this._play(t,e))}stop(e){}},a={kick:new n.a({source:"./samples/drum/kick.wav",...e}),snare:new n.a({source:"./samples/drum/snare.wav",...e}),ohh:new n.a({source:"./samples/drum/openhh.wav",...e}),ohh3:new n.a({source:"./samples/drum/openhh3.wav",...e}),chh:new n.a({source:"./samples/drum/closehh.wav",...e}),chh2:new n.a({source:"./samples/drum/closehh2.wav",...e}),chh3:new n.a({source:"./samples/drum/closehh3.wav",...e})};return t.setMap(a),t.onTrigger=e=>{e.pitch.split("+").forEach(a=>{t._play(a,e)})},t}groupSource(e,t){let a=new n.a.Poly(t);return e.forEach(e=>{a.add(e)}),a}addTrack(e){this.tracks.push(e)}setBpm(e){this.bpm=e,this._skipFrame=Math.round(3600/e/10),console.log("skipFrame:"+this._skipFrame)}setCreate(e){this._create=e}play(){this.state==i&&this.stop(),this.state!=s&&(this.tracks=[],this._create&&this._create(),console.log("track-count:"+this.tracks.length),this._stopMark=!1,this.state=s,requestAnimationFrame(()=>{this._onFrame()}))}_onFrame(){if(this._stopMark)return;if(requestAnimationFrame(()=>{this._onFrame()}),this._frameCount+=1,this._frameCount%(1+this._skipFrame)!=0)return;let e=!0;this.tracks.forEach(t=>{t.play(this.step)&&(e=!1)}),this.step+=1,e&&this.stop()}pause(){this._stopMark=!0,this.state=o}stop(){this._frameCount=0,this.step=0,this._stopMark=!0,this.state=r}},u=class{constructor(e=null){this.data=[],this._name="trigon_pattern",this._lastSynth=null,this.name=e,this.stopOnNext=!1}addPattern(e,t=null,a=0){if(a>0)for(var n=0;n<a;n++)this.addNote(null,"0");e&&("trigon_pattern"==e._name?this.data=this.data.concat(e.data):t.forEach(t=>{this.addNote(e,t)}))}addNote(e,t,a,n,i=null){if(n>0)for(var s=0;s<n;s++)this._addNote(null,"0");if(this._addNote(e,t,i),a>0)for(s=0;s<a;s++)this._addNote(null,"0")}addEvent(e){this.data.push({note:"_e",event:e})}_addNote(e,t,a=null){let n=t.split("/");var i=4;if(n.length>1&&(t=n[0],i=parseInt(n[1])),this.data.length>0&&"_e"==this.data[this.data.length-1].note){let n=this.data[this.data.length-1];n.note=t,n.synth=e,n.args=a}else this.data.push({synth:e,note:t,args:a});for(let e=1;e<i;e++)this.data.push({synth:null,note:"-",args:null})}play(e){var t=this.data[e];if(!t)return!1;let a=t.synth,n=t.note,i=t.args;if(t.event&&t.event(t),"0"!=n&&"-"!=n){this.stopOnNext&&this._lastSynth&&this._lastSynth.stop();let e=n.split("+");e.length>1?e.forEach(e=>{this._play(e,a,i)}):this._play(n,a,i),this._lastSynth=a,console.log("track:"+this.name+" play:"+n)}return!0}_play(e,t,a=null){[e,a]=this._parseNoteArg(e,a),a?t.play({pitch:e,label:e,...a}):t.play({pitch:e,label:e})}_parseNoteArg(e,t){return e.indexOf("[")<=0||e.indexOf("]")<=0?[e,t]:(t||(t={}),e.match(/\[.*?\]/g).forEach(e=>{let a=(e=e.substr(1,e.length-2)).split("=")[0],n=e.split("=")[1];a&&n&&(t[a]=parseFloat(n))}),[e=e.split("[")[0],t])}},l=new d;l.setBpm(120);var c=null,h=null,p=null,f=null;l.setCreate(()=>{!function(){let e=l.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),t=["A3","C4","E4","A3","C4","E4","A3","C4","E4","0","0","0","0","0","0","0"],a=new u;a.addPattern(e,t),t=["G3","C4","E4","G3","C4","E4","G3","C4","E4","0","0","0","0","0","0","0"];let n=new u;n.addPattern(e,t),t=["F3","C4","E4","F3","C4","E4","F3","C4","E4","0","0","0","0","0","0","0"];let i=new u;i.addPattern(e,t),t=["G#3","C4","E4","G#3","C4","E4","G#3","C4","E4","0","0","0","0","0","0","0"];let s=new u;s.addPattern(e,t);let o=new u;o.addPattern(a),o.addPattern(a),o.addPattern(n),o.addPattern(n),o.addPattern(i),o.addPattern(i),o.addPattern(n),o.addPattern(s),(c=new u("tr1")).addPattern(o),c.addPattern(o),c.addPattern(o),c.addPattern(o),l.addTrack(c)}(),function(){let e=l.sawtooth({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),t=new u;t.addNote(e,"A4",7),t.addNote(e,"E4",7),t.addNote(e,"A3",15),t.addNote(e,"G4",7),t.addNote(e,"D4",7),t.addNote(e,"B3",15),t.addNote(e,"F4",7),t.addNote(e,"C4",7),t.addNote(e,"A3",15),t.addNote(e,"F#4",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),(h=new u("tr2")).addPattern(t,null,128),h.addPattern(t),h.addPattern(t),h.addPattern(t),h.addPattern(t),l.addTrack(h)}(),function(){let e=l.triangle({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.25,wet:.7,feedback:.8},volume:.4}),t=new u;t.addNote(e,"C4",7),t.addNote(e,"A3",7),t.addNote(e,"E3",15),t.addNote(e,"B3",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),t.addNote(e,"C4",7),t.addNote(e,"A3",7),t.addNote(e,"E3",15),t.addNote(e,"B3",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),(p=new u("tr3")).addPattern(t,null,256),p.addPattern(t),l.addTrack(p)}(),function(){let e=l.baseDrum({volume:.8,delay:{delayTime:.3,wet:.25,feedback:.25}}),t=["kick","0","0","0","0","0","0","0","snare","0","0","0","0","0","0","0","kick","0","0","0","0","kick","0","0","snare","0","0","0","0","0","0","0"],a=new u;a.addPattern(e,t),a.addPattern(e,t),a.addPattern(e,t),a.addPattern(e,t),(f=new u("tr4")).addPattern(a,null,256),f.addPattern(a),f.addPattern(a),l.addTrack(f)}()});var v=l,A=new d;A.setBpm(76);let m={attack:.01,decay:.03,hold:.2,release:.3},y={delayTime:.5,wet:.25,feedback:.25},g=A.square({filter:{type:"lowpass",frequency:1500,q:1},env:m,delay:y,volume:.15}),b=A.square({filter:{type:"lowpass",frequency:1500,q:1},env:m,delay:y,volume:.3});var N=new u("tr1"),w=new u("tr2"),P=new u("tr_drum"),k=new u("tr_bass"),E=new u("tr_synth");!function(){let e=new u;e.addPattern(g,["F3","C4","E4","C4","F3","C4","E4","C4"]);let t=new u;t.addPattern(g,["G3","B3","D4","B3","G3","B3","D4","B3"]);let a=new u;a.addPattern(g,["A3","C4","E4","C4","A3","C4","E4","C4"]);let n=new u;n.addPattern(e),n.addPattern(t),n.addPattern(a),n.addPattern(a),N.addPattern(n,null,2),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n),N.addPattern(n)}(),function(){var e=new u;e.addNote(b,"G4",1);var t=new u;t.addNote(b,"A4"),t.addNote(b,"E5"),t.addNote(b,"A4"),t.addNote(b,"G4"),t.addNote(b,"A4",6),t.addNote(b,"G4"),t.addNote(b,"A4"),t.addNote(b,"E5"),t.addNote(b,"A4"),t.addNote(b,"G4"),t.addNote(b,"A4"),t.addNote(b,"E5"),t.addNote(b,"A4"),t.addNote(b,"G4"),t.addNote(b,"A4",2),t.addNote(b,"E4"),t.addNote(b,"G4",2),t.addNote(b,"D4"),t.addNote(b,"E4"),t.addNote(b,"G4"),t.addNote(b,"A4"),t.addNote(b,"B4"),t.addNote(b,"A4"),t.addNote(b,"E5"),t.addNote(b,"A4"),t.addNote(b,"G4"),t.addNote(b,"A4",6);var a=new u;a.addNote(b,"G4"),a.addNote(b,"A4"),a.addNote(b,"E5"),a.addNote(b,"B4"),a.addNote(b,"C5"),a.addNote(b,"B4"),a.addNote(b,"C5"),a.addNote(b,"D5"),a.addNote(b,"E5"),a.addNote(b,"A4",7),a.addNote(b,"A4",1),a.addNote(b,"G4",1);var n=new u;n.addNote(b,"G4"),n.addNote(b,"A4"),n.addNote(b,"E5"),n.addNote(b,"B4"),n.addNote(b,"C5"),n.addNote(b,"B4"),n.addNote(b,"C5"),n.addNote(b,"B4"),n.addNote(b,"A4"),n.addNote(b,"E4",6),n.addNote(b,"D4"),n.addNote(b,"E4"),n.addNote(b,"G4"),n.addNote(b,"A4"),n.addNote(b,"B4");var i=new u;i.addNote(b,"G4"),i.addNote(b,"A4"),i.addNote(b,"E5"),i.addNote(b,"B4"),i.addNote(b,"C5"),i.addNote(b,"B4"),i.addNote(b,"C5"),i.addNote(b,"D5"),i.addNote(b,"E5"),i.addNote(b,"A4",5),i.addNote(b,"A4",1),i.addNote(b,"B4",1),i.addNote(b,"G5",1);var s=new u;s.addPattern(b,["D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","C6","B5","A5"]);let o=new u;o.addPattern(t),o.addPattern(a),o.addPattern(t),o.addPattern(n),o.addPattern(t),o.addPattern(i),o.addPattern(s),w.addPattern(e),w.addPattern(o)}(),function(){let e=A.baseDrum({volume:.8}),t=new u;t.addNote(e,"kick+ohh"),t.addNote(e,"chh"),t.addNote(e,"snare+chh"),t.addNote(e,"chh"),t.addNote(e,"kick+chh"),t.addNote(e,"kick+chh"),t.addNote(e,"snare+chh"),t.addNote(e,"chh");let a=new u;a.addNote(e,"kick+chh"),a.addNote(e,"chh"),a.addNote(e,"snare+chh"),a.addNote(e,"chh"),a.addNote(e,"chh"),a.addNote(e,"chh/2"),a.addNote(e,"kick/2"),a.addNote(e,"snare+chh"),a.addNote(e,"kick+chh");let n=new u;n.addNote(e,"kick+ohh"),n.addNote(e,"chh"),n.addNote(e,"snare+chh"),n.addNote(e,"chh"),n.addNote(e,"chh"),n.addNote(e,"kick+chh"),n.addNote(e,"snare+chh"),n.addNote(e,"chh");let i=new u;i.addPattern(t),i.addPattern(a),i.addPattern(n),i.addPattern(t);let s=new u;s.addNote(e,"snare",1),P.addPattern(s,null,64),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i)}(),function(){let e=A.sawtooth({env:{attack:.01,decay:.03,hold:.05,release:.5},volume:.05,panning:0}),t=new u;t.addNote(e,"A6",null,null,{panning:-.5}),t.addNote(e,"A6",null,null,{panning:.5,volume:.03}),t.addNote(e,"E6",null,null,{panning:-.5}),t.addNote(e,"E6",null,null,{panning:.5,volume:.03});let a=new u;a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),E.addPattern(a,null,2),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a),E.addPattern(a)}(),function(){let e=A.triangle({env:{attack:.01,decay:.03,hold:2,release:.5},volume:.3});var t=new u;t.addNote(e,"F2",6),t.addNote(e,"F2"),t.addNote(e,"G2",6),t.addNote(e,"G2"),t.addNote(e,"A2",6),t.addNote(e,"A2"),t.addNote(e,"A2",7),k.stopOnNext=!0,k.addPattern(t,null,66),k.addPattern(t),k.addPattern(t),k.addPattern(t),k.addPattern(t),k.addPattern(t),k.addPattern(t),k.addPattern(t)}(),A.setCreate(()=>{A.addTrack(N),A.addTrack(w),A.addTrack(P),A.addTrack(k),A.addTrack(E)}),A.customDom=()=>{var e=document.querySelector("#control");e.innerHTML="";var t=document.createElement("span");t.id="lbsp",t.innerHTML="Speed(76):",e.appendChild(t);var a=document.createElement("input");a.setAttribute("min","30"),a.setAttribute("max","120"),a.setAttribute("type","range"),a.setAttribute("value","76"),a.onchange=e=>{A.setBpm(e.target.value),t.innerHTML="Speed("+e.target.value+"):"},e.appendChild(a)};var G=A,T=new d;T.setBpm(180);let _=T.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.15});T.setCreate(()=>{let e=new u;e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(_,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]);var t=new u;t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),T.addTrack(t)});var C=T,F=new d;F.setBpm(145);var x=new u,q=new u,O=new u,D=new u,M=new u,B=new u;(()=>{let e=F.square({filter:{type:"lowpass",frequency:800,q:1},env:{attack:.01,decay:0,hold:.2,release:.1},delay:{delayTime:.8,wet:.25,feedback:.25},volume:.15}),t=F.square({filter:{type:"lowpass",frequency:2e3,q:1},env:{attack:.001,decay:0,hold:.2,release:.15},delay:{delayTime:.8,wet:.5,feedback:.5},volume:.2}),a=new u;a.addPattern(e,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),a.addPattern(e,["0","0","0","0","0","0","0"]),a.addPattern(e,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),a.addPattern(e,["0","0","0","0","0","0","0"]);let n=new u;n.addPattern(e,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),n.addPattern(e,["0","0","0","0","0","0","0"]),n.addPattern(e,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),n.addPattern(e,["0","0","0","0","0","0","0"]);let i=new u;i.addPattern(e,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),i.addPattern(e,["0","0","0","0","0","0","0"]),i.addPattern(e,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),i.addPattern(e,["0","0","0","0","0","0","0"]);let s=new u;s.addPattern(e,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),s.addPattern(e,["0","0","0","0","0","0","0"]),s.addPattern(e,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),s.addPattern(e,["0","0","0","0","0","0","0"]);let o=new u;o.addPattern(a),o.addPattern(n),o.addPattern(i),o.addPattern(s);let r=new u;r.addPattern(t,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),r.addPattern(t,["0","0","0","0","0","0","0"]),r.addPattern(t,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),r.addPattern(t,["0","0","0","0","0","0","0"]);let d=new u;d.addPattern(t,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),d.addPattern(t,["0","0","0","0","0","0","0"]),d.addPattern(t,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),d.addPattern(t,["0","0","0","0","0","0","0"]);let l=new u;l.addPattern(t,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),l.addPattern(t,["0","0","0","0","0","0","0"]),l.addPattern(t,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),l.addPattern(t,["0","0","0","0","0","0","0"]);let c=new u;c.addPattern(t,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),c.addPattern(t,["0","0","0","0","0","0","0"]),c.addPattern(t,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),c.addPattern(t,["0","0","0","0","0","0","0"]);let h=new u;h.addPattern(r),h.addPattern(d),h.addPattern(l),h.addPattern(c),x.addPattern(o),x.addPattern(o),x.addPattern(o),x.addPattern(o),x.addPattern(o),x.addPattern(h),x.addPattern(h),x.addPattern(h),x.addPattern(h),x.addPattern(h)})();(()=>{let e=F.triangle({env:{attack:.01,decay:.005,hold:.1,release:.3},delay:{delayTime:.4,wet:.4,feedback:.5},volume:.4}),t=F.triangle({env:{attack:.01,decay:.005,hold:.1,release:.5},delay:{delayTime:.4,wet:.25,feedback:.25},volume:.2});var a=new u;a.addPattern(e,["0/16","0/16","0/16","A4","B4","C5","D5"]),a.addNote(e,"E5",14),a.addNote(e,"D5"),a.addNote(e,"C5",14),a.addNote(e,"B4"),a.addNote(e,"A4",15),a.addPattern(e,["0/16","0/16","0/16","A4","B4","C5","D5"]),a.addNote(e,"E5",14),a.addNote(e,"D5"),a.addNote(e,"C5",14),a.addNote(e,"A4"),a.addNote(e,"G#4",15);let n=new u,i=new u;i.addNote(t,"A3",1),i.addNote(t,"G#4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"G#4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"A4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"A4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"B4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"B4+E4",1),i.addNote(t,"A3",1),i.addNote(t,"C5+E4",1),i.addNote(t,"A3",1),i.addNote(t,"C5+E4",1);let s=new u;s.addNote(t,"G3",1),s.addNote(t,"G#4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"G#4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"A4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"A4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"B4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"B4+E4",1),s.addNote(t,"G3",1),s.addNote(t,"C5+E4",1),s.addNote(t,"G3",1),s.addNote(t,"C5+E4",1);let o=new u;o.addNote(t,"G3",1),o.addNote(t,"G4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"G4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"A4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"A4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"B4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"B4+E4",1),o.addNote(t,"G3",1),o.addNote(t,"C5+E4",1),o.addNote(t,"G3",1),o.addNote(t,"C5+E4",1);let r=new u;r.addNote(t,"F3",1),r.addNote(t,"G#4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"G#4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"A4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"A4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"B4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"B4+E4",1),r.addNote(t,"F3",1),r.addNote(t,"C5+E4",1),r.addNote(t,"F3",1),r.addNote(t,"C5+E4",1);let d=new u;d.addNote(t,"E3",1),d.addNote(t,"G#4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"G#4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"A4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"A4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"B4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"B4+E4",1),d.addNote(t,"E3",1),d.addNote(t,"C5+E4",1),d.addNote(t,"E3",1),d.addNote(t,"C5+E4",1),n.addPattern(i),n.addPattern(s),n.addPattern(r),n.addPattern(d),n.addPattern(i),n.addPattern(o),n.addPattern(r),n.addPattern(d),q.addPattern(null,[],64),q.addPattern(null,[],32),q.addPattern(null,[],16),q.addPattern(a),q.addPattern(a),q.addPattern(null,[],16),q.addPattern(n)})();(()=>{let e=F.triangle({env:{attack:.01,decay:.005,hold:.1,release:.5},volume:.5}),t=F.sawtooth({filter:{type:"lowpass",frequency:9500,q:1},env:{attack:.01,decay:.005,hold:.1,release:.5},volume:.2}),a=F.groupSource([e,t],{delay:{delayTime:.4,wet:.25,feedback:.25}});O.addPattern(null,[],128),O.addPattern(null,[],128),O.addPattern(null,[],128),O.addPattern(null,[],128),O.addPattern(null,[],126),O.addPattern(a,["A4/8"]),O.addPattern(a,["E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8"]);let n=a,i=new u,s=new u;s.addNote(n,"A3",1),s.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),s.addNote(n,"A3",1),s.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1);let o=new u;o.addNote(n,"G3",1),o.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),o.addNote(n,"G3",1),o.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1);let r=new u;r.addNote(n,"G3",1),r.addNote(n,"G4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"G4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),r.addNote(n,"G3",1),r.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1);let d=new u;d.addNote(n,"F3",1),d.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),d.addNote(n,"F3",1),d.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1);let l=new u;l.addNote(n,"E3",1),l.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"G#4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"A4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"B4[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),l.addNote(n,"E3",1),l.addNote(n,"C5[panning=.5]+E4[panning=-.5]",1),i.addPattern(s),i.addPattern(o),i.addPattern(d),i.addPattern(l),i.addPattern(s),i.addPattern(r),i.addPattern(d),i.addPattern(l),O.addPattern(i),O.addPattern(s),O.addPattern(r),O.addPattern(d),O.addPattern(l)})();(()=>{D.stopOnNext=!0;let e=F.triangle({env:{attack:.01,decay:.03,hold:2,release:.01},volume:.3}),t=new u;t.addNote(e,"A1",7),t.addNote(e,"A1",7),t.addNote(e,"A1",7),t.addNote(e,"A1",7),t.addNote(e,"G1",7),t.addNote(e,"G1",7),t.addNote(e,"G1",7),t.addNote(e,"G1",7),t.addNote(e,"F1",7),t.addNote(e,"F1",7),t.addNote(e,"F1",7),t.addNote(e,"F1",7),t.addNote(e,"E1",7),t.addNote(e,"E1",7),t.addNote(e,"E1",7),t.addNote(e,"E1",7),D.addPattern(null,[],128),D.addPattern(null,[],128),D.addPattern(t),D.addPattern(t),D.addPattern(null,[],128),D.addPattern(null,[],128),D.addPattern(t),D.addPattern(t),D.addPattern(t)})();(()=>{M.stopOnNext=!0;let e={attack:.01,decay:.03,hold:2,release:0},t=F.sawtooth({env:e,volume:.1,panning:.5}),a=F.sawtooth({env:e,volume:.1,detune:30,panning:-.5}),n=F.groupSource([t,a],{volume:1,filter:{type:"lowpass",frequency:2e3,q:1}}),i=new u;i.addNote(n,"A2",7),i.addNote(n,"A2",7),i.addNote(n,"A2",7),i.addNote(n,"A2",7),i.addNote(n,"G2",7),i.addNote(n,"G2",7),i.addNote(n,"G2",7),i.addNote(n,"G2",7),i.addNote(n,"F2",7),i.addNote(n,"F2",7),i.addNote(n,"F2",7),i.addNote(n,"F2",7),i.addNote(n,"E2",7),i.addNote(n,"E2",7),i.addNote(n,"E2",7),i.addNote(n,"E2",7),M.addPattern(null,[],768),M.addPattern(i),M.addPattern(i),M.addPattern(i)})();(()=>{let e=F.baseDrum({volume:.8}),t=new u;t.addNote(e,"kick+ohh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3"),t.addNote(e,"snare+chh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3"),t.addNote(e,"kick+chh3"),t.addNote(e,"chh3"),t.addNote(e,"kick+chh3"),t.addNote(e,"chh3"),t.addNote(e,"snare+chh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3"),t.addNote(e,"chh3");let a=new u;a.addNote(e,"kick+chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"snare+chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"chh3"),a.addNote(e,"kick"),a.addNote(e,"snare+chh3"),a.addNote(e,"chh3"),a.addNote(e,"kick+chh3"),a.addNote(e,"chh3");let n=new u;n.addNote(e,"kick+ohh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"snare+chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"kick+chh3"),n.addNote(e,"chh3"),n.addNote(e,"snare+chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3"),n.addNote(e,"chh3");let i=new u;i.addPattern(t),i.addPattern(a),i.addPattern(n),i.addPattern(t),B.addPattern(null,[],128),B.addPattern(null,[],128),B.addPattern(null,[],128),B.addPattern(null,[],128),B.addPattern(null,[],128),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i),B.addPattern(i)})(),F.setCreate(()=>{F.addTrack(x),F.addTrack(q),F.addTrack(O),F.addTrack(D),F.addTrack(M),F.addTrack(B)}),F.customDom=e=>{var t=document.createElement("img");t.setAttribute("src","./images/resserections.jpg"),t.setAttribute("width","350px"),e.appendChild(t)};var S=F,L=null;document.getElementById("bt").onclick=function(){null!=L?L.play():alert("Please select songs")},document.getElementById("btStop").onclick=function(){null!=L?L.stop():alert("Please select songs")},document.getElementById("btPause").onclick=function(){null!=L?L.pause():alert("Please select songs")};var j=[{name:"demo1",song:v},{name:"潮鸣り",song:G},{name:"performance-test",song:C},{name:"Resserections",song:S}],R=document.querySelector("#list");R.innerHTML="";for(let e=0;e<j.length;e++){let t=document.createElement("a");t.setAttribute("name","song"),t.setAttribute("href","javascript:void(0);");let a=e;t.onclick=()=>{document.querySelector("#control").innerHTML="",document.querySelector("h3").innerText=j[a].name,L=j[a].song,j[a].song.customDom&&j[a].song.customDom(document.querySelector("#control"))},t.innerHTML=j[e].name;let n=document.createElement("li");n.appendChild(t),R.appendChild(n)}let I=function(e){for(var t=window.location.search.substring(1).split("&"),a=0;a<t.length;a++){var n=t[a].split("=");if(n[0]==e)return n[1]}return!1}("id");I&&document.querySelectorAll("a[name='song']")[parseInt(I)-1].click()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,