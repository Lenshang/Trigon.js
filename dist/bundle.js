!function(t){var e={};function a(n){if(e[n])return e[n].exports;var i=e[n]={i:n,l:!1,exports:{}};return t[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=t,a.c=e,a.d=function(t,e,n){a.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},a.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},a.t=function(t,e){if(1&e&&(t=a(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)a.d(n,i,function(e){return t[e]}.bind(null,i));return n},a.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return a.d(e,"a",e),e},a.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},a.p="",a(a.s=10)}([function(t,e,a){"use strict";a.d(e,"o",(function(){return u})),a.d(e,"n",(function(){return l})),a.d(e,"i",(function(){return r})),a.d(e,"p",(function(){return f})),a.d(e,"m",(function(){return A})),a.d(e,"F",(function(){return v})),a.d(e,"c",(function(){return m})),a.d(e,"d",(function(){return y})),a.d(e,"u",(function(){return g})),a.d(e,"h",(function(){return b})),a.d(e,"g",(function(){return k})),a.d(e,"f",(function(){return N})),a.d(e,"e",(function(){return P})),a.d(e,"b",(function(){return w})),a.d(e,"a",(function(){return I})),a.d(e,"l",(function(){return G})),a.d(e,"q",(function(){return E})),a.d(e,"y",(function(){return C})),a.d(e,"A",(function(){return S})),a.d(e,"E",(function(){return L})),a.d(e,"C",(function(){return j})),a.d(e,"v",(function(){return R})),a.d(e,"D",(function(){return Y})),a.d(e,"s",(function(){return _})),a.d(e,"t",(function(){return D})),a.d(e,"w",(function(){return B})),a.d(e,"x",(function(){return q})),a.d(e,"B",(function(){return O})),a.d(e,"k",(function(){return T})),a.d(e,"r",(function(){return F})),a.d(e,"z",(function(){return M})),a.d(e,"j",(function(){return x}));var n=a(3),i=a.n(n),s=a(5),o=a(2);let r,d=window.AudioContext||window.webkitAudioContext,u={verbosity:0,suppressedLogs:0},l=function(t,e){e=e||1,u.verbosity>=e?console.log(t):u.suppressedLogs++},h=document.querySelector("a-scene");h&&h.audioListener&&h.audioListener.context?(r=h.audioListener.context,l("An A-Frame scene has been detected.")):r=new d;let c=function(){l("unlock",2),"suspended"===r.state?(l("suspended",2),r.resume()):"running"===r.state&&(l("The audio context is running.",2),l(r,2),window.removeEventListener("mousemove",c),window.removeEventListener("touchstart",c),window.removeEventListener("touchend",c))};window.addEventListener("mousemove",c),window.addEventListener("touchstart",c),window.addEventListener("touchend",c);let p=function(t){if(t.navigator.mediaDevices&&t.navigator.mediaDevices.getUserMedia)return t.navigator.mediaDevices.getUserMedia.bind(t.navigator.mediaDevices);let e=t.navigator.getUserMedia||t.navigator.webkitGetUserMedia||t.navigator.mozGetUserMedia;return e?function(a){return new Promise((function(n,i){e.call(t.navigator,a,n,i)}))}:function(){throw"getUserMedia is unsupported"}}(window);l(p?"Your browser supports getUserMedia.":"Your browser does not support getUserMedia.");let f=function(){Math.seed=6,Math.seededRandom=function(t,e){return t=t||1,e=e||0,Math.seed=(9301*Math.seed+49297)%233280,e+Math.seed/233280*(t-e)};for(var t=2*r.sampleRate,e=r.createBuffer(1,t,r.sampleRate),a=e.getChannelData(0),n=0;n<t;n++)a[n]=2*Math.seededRandom()-1;return e}(),A=function(t){return"[object Array]"===Object.prototype.toString.call(t)},v=function(t,e){return null==t?e:t},m=function(t,e){t.env={attack:e.env?v(e.env.attack,0):0,decay:e.env?v(e.env.decay,0):0,sustain:e.env?v(e.env.sustain,1):1,hold:e.env?v(e.env.hold,3.14159):3.14159,release:e.env?v(e.env.release,0):0},t.defaultEnv={attack:e.env?v(e.env.attack,0):0,decay:e.env?v(e.env.decay,0):0,sustain:e.env?v(e.env.sustain,1):1,hold:e.env?v(e.env.hold,3.14159):3.14159,release:e.env?v(e.env.release,0):0},t.userSetHold=!(!e.env||!e.env.hold)},y=function(t,e){e.filter?A(e.filter)?t.filter=e.filter.map((function(t){return{type:t.type||"lowpass",frequency:t.frequency||600,q:t.q||1,env:t.env||null}})):t.filter=[{type:e.filter.type||"lowpass",frequency:e.filter.frequency||600,q:e.filter.q||1,env:e.filter.env||null}]:e.filter=null},g=function(t,e){var a=new XMLHttpRequest;a.open("GET",t.source,!0),a.responseType="arraybuffer",t.playable--,a.onload=function(){r.decodeAudioData(a.response,(function(a){t.decodedBuffer=a,3.14159===t.env.hold&&(t.defaultEnv.hold=t.decodedBuffer.duration*(1/t.rate),t.env.hold=t.decodedBuffer.duration*(1/t.rate)),t.duration=1e3*t.env.hold,e&&e(t),t.playable++,t.playOnLoad&&t.play(t.playOnLoadArg)}))},a.send()},b=function(t,e){e.vibrato?t.vibrato={shape:v(e.vibrato.shape,"sine"),speed:v(e.vibrato.speed,1),magnitude:v(e.vibrato.magnitude,5),attack:v(e.vibrato.attack,0)}:t.vibrato=null},k=function(t,e){e.tremolo?t.tremolo={shape:v(e.tremolo.shape,"sine"),speed:v(e.tremolo.speed,1),magnitude:v(e.tremolo.magnitude,5),attack:v(e.tremolo.attack,1)}:t.tremolo=null},N=function(t,e){if(e.reverb){t.reverb={wet:v(e.reverb.wet,1)};var a=e.reverb.impulse||"https://frivolous.biz/audio/widehall.wav",n=new XMLHttpRequest;n.open("GET",a,!0),n.responseType="arraybuffer",t.playable--,n.onload=function(){r.decodeAudioData(n.response,(function(a){t.reverb.buffer=a,t.playable++,t.playOnLoad&&t.play(t.playOnLoadArg),t instanceof s.a&&t.setUp(e),"mic"===t.source&&t.reverb&&t.reverb.buffer&&t.reverb.node&&!t.reverb.node.buffer&&(t.reverb.node.convolver.buffer=t.reverb.buffer)}))},n.send()}else t.reverb=null},P=function(t,e){"panning"in e?(t.panning={location:e.panning},"number"==typeof e.panning?t.panning.type="stereo":(t.panning.type="3d",t.panning.panningModel=e.panningModel||"equalpower",t.panning.distanceModel=e.distanceModel,t.panning.maxDistance=e.maxDistance,t.panning.rolloffFactor=e.rolloffFactor,t.panning.refDistance=e.refDistance,t.panning.coneInnerAngle=e.coneInnerAngle,t.panning.coneOuterAngle=e.coneOuterAngle,t.panning.coneOuterGain=e.coneOuterGain)):t.panning={location:0,type:"stereo"},"stereo"!==t.panning.type||r.createStereoPanner||(l("Your browser does not support stereo panning. Falling back to 3D panning."),t.panning={location:[0,0,0],type:"3d",panningModel:"equalpower"})},w=function(t,e){e.delay?t.delay={delayTime:v(e.delay.delayTime,.5),maxDelayTime:v(e.delay.maxDelayTime,2),feedback:v(e.delay.feedback,.25),wet:v(e.delay.wet,.25)}:t.delay=null},E={micConsent:!1},G=function(t,e){return t.nodes=[],t.mediaStreamSource=null,t.gain=null,p({audio:!0,video:!1}).then((function(a){return t.mediaStreamSource=r.createMediaStreamSource(a),E.micConsent=!0,C(t,e),t})).catch((function(t){l("Error setting up microphone input: ",t)}))},C=function(t,e){t.nodes=[],t.gain=r.createGain(),t.gain.gain.value=v(e.volume,t.volume),t.nodes.push(t.mediaStreamSource),t.nodes.push(t.gain),(t.filter||e.filter)&&x(t,e),(t.reverb||e.reverb)&&O(t,e),P(t,e),S(t,e),(t.delay||e.delay)&&R(t,e),Y(t,e),t.setUpExternalFxOnPlay(e,r)},T=function(t,e){t.filter.forEach((function(t,a){t.node.frequency.linearRampToValueAtTime(t.frequency,e.exactTime),t.node.frequency.linearRampToValueAtTime(t.env.frequency,e.exactTime+t.env.attack)}))},F=function(t,e){let a,n=e.loop||e.loop;a=-1!==t.env.hold&&(!n||t.userSetHold||e.env&&e.env.hold)?t.env.hold:999,t.gain[0].gain.linearRampToValueAtTime(1e-4,e.exactTime),t.gain[0].gain.linearRampToValueAtTime(t.volume,e.exactTime+t.env.attack+1e-5),t.gain[0].gain.linearRampToValueAtTime(t.volume*t.env.sustain,e.exactTime+t.env.attack+t.env.decay+2e-5),t.gain[0].gain.linearRampToValueAtTime(t.volume*t.env.sustain,e.exactTime+t.env.attack+t.env.decay+a+3e-5),t.gain[0].gain.linearRampToValueAtTime(1e-4,e.exactTime+t.env.attack+t.env.decay+a+t.env.release+4e-5),t.soundSource.start(e.exactTime,e.offset),t.soundSource.playbackRate||t.soundSource.stop(e.exactTime+t.env.attack+t.env.decay+a+t.env.release+5e-5)},_=function(t,e){let a,n=e&&e.destination||t.destination;for(let e=1;e<t.nodes.length;e++){let a,n;a="custom"===t.nodes[e-1].interface?t.nodes[e-1].output:t.nodes[e-1],n="custom"===t.nodes[e].interface?t.nodes[e].input:t.nodes[e],a.connect(n)}a="custom"===t.nodes[t.nodes.length-1].interface?t.nodes[t.nodes.length-1].output:t.nodes[t.nodes.length-1],a.connect(n)},D=function(t,e){let a;for(let e=1;e<t.length;e++){let a,n;a="custom"===t[e-1].interface?t[e-1].output:t[e-1],n="custom"===t[e].interface?t[e].input:t[e],a.disconnect(n)}a="custom"===t[t.length-1].interface?t[t.length-1].output:t[t.length-1],a.disconnect(e)},M=function(t,e){e=e||{},t.soundSource=r.createOscillator(),t.soundSource.type=t.source,e.pitch?e.pitch in o.a?t.soundSource.frequency.value=o.a[e.pitch]:t.soundSource.frequency.value=e.pitch:t.soundSource.frequency.value=t.pitch},B=function(t,e){e&&e.env?(t.env.attack=v(e.env.attack,t.defaultEnv.attack),t.env.decay=v(e.env.decay,t.defaultEnv.decay),t.env.sustain=v(e.env.sustain,t.defaultEnv.sustain),t.env.hold=v(e.env.hold,t.defaultEnv.hold),t.env.release=v(e.env.release,t.defaultEnv.release)):t.env={attack:t.defaultEnv.attack,decay:t.defaultEnv.decay,sustain:t.defaultEnv.sustain,hold:t.defaultEnv.hold,release:t.defaultEnv.release}},x=function(t,e){e.filter&&!A(e.filter)&&(e.filter=[e.filter]),t.filter.forEach((function(a,n){a.node=r.createBiquadFilter(),a.node.type=a.type,a.node.frequency.value=e.filter&&e.filter[n]&&e.filter[n].frequency||a.frequency,a.node.Q.value=e.filter&&e.filter[n]&&e.filter[n].q||a.q,(e.filter&&e.filter[n].env||t.filter[n].env)&&"mic"!==t.source&&(a.env={attack:e.filter&&e.filter[n].env&&e.filter[n].env.attack||t.filter[n].env.attack,frequency:e.filter&&e.filter[n].env&&e.filter[n].env.frequency||t.filter[n].env.frequency}),t.nodes.push(a.node)}))},q=function(t,e){e&&e.filter&&t.filter?(A(e.filter)||(e.filter=[e.filter]),x(t,e)):t.filter&&x(t,t)},O=function(t,e){var a={interface:"custom",input:r.createGain(),convolver:r.createConvolver(),wet:r.createGain(),output:r.createGain()};a.convolver.buffer=t.reverb.buffer,a.wet.gain.value=t.reverb.wet,a.input.connect(a.convolver),a.input.connect(a.output),a.convolver.connect(a.wet),a.wet.connect(a.output),t.reverb.node=a,t.nodes.push(t.reverb.node)},S=function(t,e){var a=e&&e.panning;void 0===a&&(a=t.panning.location),"number"==typeof a&&r.createStereoPanner?(t.panning.node=r.createStereoPanner(),t.panning.node.pan.value=a,t.panning.type="stereo"):(t.panning.node=r.createPanner(),"number"==typeof a?t.panning.node.setPosition(a,0,0):t.panning.node.setPosition(a[0],a[1],a[2]),t.panning.node.panningModel=e.panningModel||t.panningModel||"equalpower",t.panning.type="3d",t.panning.node.distanceModel=e.distanceModel||t.distanceModel||t.panning.node.distanceModel,t.panning.node.maxDistance=e.maxDistance||t.maxDistance||t.panning.node.maxDistance,t.panning.node.rolloffFactor=e.rolloffFactor||t.rolloffFactor||t.panning.node.rolloffFactor,t.panning.node.refDistance=e.refDistance||t.refDistance||t.panning.node.refDistance,t.panning.node.coneInnerAngle=e.coneInnerAngle||t.coneInnerAngle||t.panning.node.coneInnerAngle,t.panning.node.coneOuterAngle=e.coneOuterAngle||t.coneOuterAngle||t.panning.node.coneOuterAngle,t.panning.node.coneOuterGain=e.coneOuterGain||t.coneOuterGain||t.panning.node.coneOuterGain),t.nodes.push(t.panning.node)},L=function(t,e,a){t.vibrato.wad=new a({source:t.vibrato.shape,pitch:t.vibrato.speed,volume:t.vibrato.magnitude,env:{attack:t.vibrato.attack},destination:t.soundSource.frequency}),t.vibrato.wad.play()},j=function(t,e,a){t.tremolo.wad=new a({source:t.tremolo.shape,pitch:t.tremolo.speed,volume:t.tremolo.magnitude,env:{attack:t.tremolo.attack,hold:10},destination:t.gain[0].gain}),t.tremolo.wad.play()},R=function(t,e){if(t.delay){e.delay||(e.delay={});var a={interface:"custom",input:r.createGain(),output:r.createGain(),delayNode:r.createDelay(t.delay.maxDelayTime),feedbackNode:r.createGain(),wetNode:r.createGain()};a.delayNode.delayTime.value=v(e.delay.delayTime,t.delay.delayTime),a.feedbackNode.gain.value=v(e.delay.feedback,t.delay.feedback),a.wetNode.gain.value=v(e.delay.wet,t.delay.wet),a.input.connect(a.delayNode),a.input.connect(a.output),a.delayNode.connect(a.feedbackNode),a.delayNode.connect(a.wetNode),a.feedbackNode.connect(a.delayNode),a.wetNode.connect(a.output),t.delay.delayNode=a,t.nodes.push(a)}},I=function(t,e){t.compressor=r.createDynamicsCompressor(),t.compressor.attack.value=v(e.compressor.attack,t.compressor.attack.value),t.compressor.knee.value=v(e.compressor.knee,t.compressor.knee.value),t.compressor.ratio.value=v(e.compressor.ratio,t.compressor.ratio.value),t.compressor.release.value=v(e.compressor.release,t.compressor.release.value),t.compressor.threshold.value=v(e.compressor.threshold,t.compressor.threshold.value),t.nodes.push(t.compressor)},V=new i.a(r),Y=function(t,e){if(!t.tuna&&!e.tuna)return;let a={};if(t.tuna)for(let e in t.tuna)a[e]=t.tuna[e];if(e.tuna)for(let t in e.tuna)a[t]=e.tuna[t];for(let e in a){let n=new V[e](a[e]);t.nodes.push(n)}}},function(t,e,a){"use strict";(function(t){var n=a(6),i=a(5),s=a(7),o=a(2),r=a(4),d=a(8),u=a(0);let l=d.a;l.Poly=i.a,l.SoundIterator=function(t){return new n.a(t,l)},l.pitches=o.a,l.pitchesArray=o.b,l.midiMap=r.d,l.assignMidiMap=r.a,l.midiInstrument=r.c,l.midiInputs=r.b,l.presets=s.a,l.logs=u.o,t.exports&&(t.exports=l),e.a=l}).call(this,a(9)(t))},function(t,e,a){"use strict";a.d(e,"a",(function(){return n})),a.d(e,"b",(function(){return i}));let n={A0:27.5,"A#0":29.1352,Bb0:29.1352,B0:30.8677,"B#0":32.7032,Cb1:30.8677,C1:32.7032,"C#1":34.6478,Db1:34.6478,D1:36.7081,"D#1":38.8909,Eb1:38.8909,E1:41.2034,Fb1:41.2034,"E#1":43.6535,F1:43.6535,"F#1":46.2493,Gb1:46.2493,G1:48.9994,"G#1":51.9131,Ab1:51.9131,A1:55,"A#1":58.2705,Bb1:58.2705,B1:61.7354,Cb2:61.7354,"B#1":65.4064,C2:65.4064,"C#2":69.2957,Db2:69.2957,D2:73.4162,"D#2":77.7817,Eb2:77.7817,E2:82.4069,Fb2:82.4069,"E#2":87.3071,F2:87.3071,"F#2":92.4986,Gb2:92.4986,G2:97.9989,"G#2":103.826,Ab2:103.826,A2:110,"A#2":116.541,Bb2:116.541,B2:123.471,Cb3:123.471,"B#2":130.813,C3:130.813,"C#3":138.591,Db3:138.591,D3:146.832,"D#3":155.563,Eb3:155.563,E3:164.814,Fb3:164.814,"E#3":174.614,F3:174.614,"F#3":184.997,Gb3:184.997,G3:195.998,"G#3":207.652,Ab3:207.652,A3:220,"A#3":233.082,Bb3:233.082,B3:246.942,Cb4:246.942,"B#3":261.626,C4:261.626,"C#4":277.183,Db4:277.183,D4:293.665,"D#4":311.127,Eb4:311.127,E4:329.628,Fb4:329.628,"E#4":349.228,F4:349.228,"F#4":369.994,Gb4:369.994,G4:391.995,"G#4":415.305,Ab4:415.305,A4:440,"A#4":466.164,Bb4:466.164,B4:493.883,Cb5:493.883,"B#4":523.251,C5:523.251,"C#5":554.365,Db5:554.365,D5:587.33,"D#5":622.254,Eb5:622.254,E5:659.255,Fb5:659.255,"E#5":698.456,F5:698.456,"F#5":739.989,Gb5:739.989,G5:783.991,"G#5":830.609,Ab5:830.609,A5:880,"A#5":932.328,Bb5:932.328,B5:987.767,Cb6:987.767,"B#5":1046.5,C6:1046.5,"C#6":1108.73,Db6:1108.73,D6:1174.66,"D#6":1244.51,Eb6:1244.51,Fb6:1318.51,E6:1318.51,"E#6":1396.91,F6:1396.91,"F#6":1479.98,Gb6:1479.98,G6:1567.98,"G#6":1661.22,Ab6:1661.22,A6:1760,"A#6":1864.66,Bb6:1864.66,B6:1975.53,Cb7:1975.53,"B#6":2093,C7:2093,"C#7":2217.46,Db7:2217.46,D7:2349.32,"D#7":2489.02,Eb7:2489.02,E7:2637.02,Fb7:2637.02,"E#7":2793.83,F7:2793.83,"F#7":2959.96,Gb7:2959.96,G7:3135.96,"G#7":3322.44,Ab7:3322.44,A7:3520,"A#7":3729.31,Bb7:3729.31,B7:3951.07,Cb8:3951.07,"B#7":4186.01,C8:4186.01},i=["A0","A#0","B0","C1","C#1","D1","D#1","E1","F1","F#1","G1","G#1","A1","A#1","B1","C2","C#2","D2","D#2","E2","F2","F#2","G2","G#2","A2","A#2","B2","C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3","C4","C#4","D4","D#4","E4","F4","F#4","G4","G#4","A4","A#4","B4","C5","C#5","D5","D#5","E5","F5","F#5","G5","G#5","A5","A#5","B5","C6","C#6","D6","D#6","E6","F6","F#6","G6","G#6","A6","A#6","B6","C7","C#7","D7","D#7","E7","F7","F#7","G7","G#7","A7","A#7","B7","C8"]},function(t,e,a){!function(){var e,a,n=function(t,e){t.value=e},i=Object.create(null,{activate:{writable:!0,value:function(t){t?(this.input.disconnect(),this.input.connect(this.activateNode),this.activateCallback&&this.activateCallback(t)):(this.input.disconnect(),this.input.connect(this.output))}},bypass:{get:function(){return this._bypass},set:function(t){this._lastBypassValue!==t&&(this._bypass=t,this.activate(!t),this._lastBypassValue=t)}},connect:{value:function(t){this.output.connect(t)}},disconnect:{value:function(t){this.output.disconnect(t)}},connectInOrder:{value:function(t){for(var e=t.length-1;e--;){if(!t[e].connect)return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.",t[e]);t[e+1].input?t[e].connect(t[e+1].input):t[e].connect(t[e+1])}}},getDefaults:{value:function(){var t={};for(var e in this.defaults)t[e]=this.defaults[e].value;return t}},automate:{value:function(t,a,n,i){var s,o=i?~~(i/1e3):e.currentTime,r=n?~~(n/1e3):0,d=this.defaults[t],u=this[t];u?d.automatable?(n?(s="linearRampToValueAtTime",u.cancelScheduledValues(o),u.setValueAtTime(u.value,o)):s="setValueAtTime",u[s](a,r+o)):u=a:console.error("Invalid Property for "+this.name)}}}),s="float",o="boolean",r="int";function d(t){if(!(this instanceof d))return new d(t);var n="undefined"==typeof window?{}:window;if(n.AudioContext||(n.AudioContext=n.webkitAudioContext),t||(console.log("tuna.js: Missing audio context! Creating a new context for you."),t=n.AudioContext&&new n.AudioContext),!t)throw new Error("Tuna cannot initialize because this environment does not support web audio.");!function(t){if(!0===t.__connectified__)return;var e=t.createGain(),a=Object.getPrototypeOf(Object.getPrototypeOf(e)),n=a.connect;a.connect=function(){var t=arguments[0];return arguments[0]=i.isPrototypeOf?i.isPrototypeOf(t)?t.input:t:t.input||t,n.apply(this,arguments),t},t.__connectified__=!0}(t),e=t,a=this}function u(t){return Math.max(0,Math.round(100*Math.pow(2,t/6))/100)}function l(t,e){var a,n,i,s=0,o=0,r=0;return a=t.toExponential().match(/^.\.?(.*)e(.+)$/),s=parseInt(a[2],10)-(a[1]+"").length,a=e.toExponential().match(/^.\.?(.*)e(.+)$/),(i=parseInt(a[2],10)-(a[1]+"").length)>s&&(s=i),n=t%e,s<-100||s>20?(o=Math.round(Math.log(n)/Math.log(10)),(n/(r=Math.pow(10,o))).toFixed(o-s)*r):parseFloat(n.toFixed(-s))}function h(t){return 0===t?1:Math.abs(t)/t}function c(t){return(Math.exp(t)-Math.exp(-t))/(Math.exp(t)+Math.exp(-t))}function p(t,e){return void 0===t?e:t}t.exports?t.exports=d:window.define("Tuna",(function(){return d})),d.prototype.Bitcrusher=function(t){t||(t=this.getDefaults()),this.bufferSize=t.bufferSize||this.defaults.bufferSize.value,this.input=e.createGain(),this.activateNode=e.createGain(),this.processor=e.createScriptProcessor(this.bufferSize,1,1),this.output=e.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output);var a,n,i,s,o,r=0,d=0;this.processor.onaudioprocess=function(t){for(a=t.inputBuffer.getChannelData(0),n=t.outputBuffer.getChannelData(0),i=Math.pow(.5,this.bits),o=a.length,s=0;s<o;s++)(r+=this.normfreq)>=1&&(r-=1,d=i*Math.floor(a[s]/i+.5)),n[s]=d},this.bits=t.bits||this.defaults.bits.value,this.normfreq=p(t.normfreq,this.defaults.normfreq.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Bitcrusher.prototype=Object.create(i,{name:{value:"Bitcrusher"},defaults:{writable:!0,value:{bits:{value:4,min:1,max:16,automatable:!1,type:r},bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},normfreq:{value:.1,min:1e-4,max:1,automatable:!1,type:s}}},bits:{enumerable:!0,get:function(){return this.processor.bits},set:function(t){this.processor.bits=t}},normfreq:{enumerable:!0,get:function(){return this.processor.normfreq},set:function(t){this.processor.normfreq=t}}}),d.prototype.Cabinet=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.convolver=this.newConvolver(t.impulsePath||"../impulses/impulse_guitar.wav"),this.makeupNode=e.createGain(),this.output=e.createGain(),this.activateNode.connect(this.convolver.input),this.convolver.output.connect(this.makeupNode),this.makeupNode.connect(this.output),this.makeupNode.gain.value=p(t.makeupGain,this.defaults.makeupGain.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Cabinet.prototype=Object.create(i,{name:{value:"Cabinet"},defaults:{writable:!0,value:{makeupGain:{value:1,min:0,max:20,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(t){this.makeupNode.gain.setTargetAtTime(t,e.currentTime,.01)}},newConvolver:{value:function(t){return new a.Convolver({impulse:t,dryLevel:0,wetLevel:1})}}}),d.prototype.Chorus=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.attenuator=this.activateNode=e.createGain(),this.splitter=e.createChannelSplitter(2),this.delayL=e.createDelay(),this.delayR=e.createDelay(),this.feedbackGainNodeLR=e.createGain(),this.feedbackGainNodeRL=e.createGain(),this.merger=e.createChannelMerger(2),this.output=e.createGain(),this.lfoL=new a.LFO({target:this.delayL.delayTime,callback:n}),this.lfoR=new a.LFO({target:this.delayR.delayTime,callback:n}),this.input.connect(this.attenuator),this.attenuator.connect(this.output),this.attenuator.connect(this.splitter),this.splitter.connect(this.delayL,0),this.splitter.connect(this.delayR,1),this.delayL.connect(this.feedbackGainNodeLR),this.delayR.connect(this.feedbackGainNodeRL),this.feedbackGainNodeLR.connect(this.delayR),this.feedbackGainNodeRL.connect(this.delayL),this.delayL.connect(this.merger,0,0),this.delayR.connect(this.merger,0,1),this.merger.connect(this.output),this.feedback=p(t.feedback,this.defaults.feedback.value),this.rate=p(t.rate,this.defaults.rate.value),this.delay=p(t.delay,this.defaults.delay.value),this.depth=p(t.depth,this.defaults.depth.value),this.lfoR.phase=Math.PI/2,this.attenuator.gain.value=.6934,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Chorus.prototype=Object.create(i,{name:{value:"Chorus"},defaults:{writable:!0,value:{feedback:{value:.4,min:0,max:.95,automatable:!1,type:s},delay:{value:.0045,min:0,max:1,automatable:!1,type:s},depth:{value:.7,min:0,max:1,automatable:!1,type:s},rate:{value:1.5,min:0,max:8,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},delay:{enumerable:!0,get:function(){return this._delay},set:function(t){this._delay=2*Math.pow(10,t)*2e-4,this.lfoL.offset=this._delay,this.lfoR.offset=this._delay,this._depth=this._depth}},depth:{enumerable:!0,get:function(){return this._depth},set:function(t){this._depth=t,this.lfoL.oscillation=this._depth*this._delay,this.lfoR.oscillation=this._depth*this._delay}},feedback:{enumerable:!0,get:function(){return this._feedback},set:function(t){this._feedback=t,this.feedbackGainNodeLR.gain.setTargetAtTime(this._feedback,e.currentTime,.01),this.feedbackGainNodeRL.gain.setTargetAtTime(this._feedback,e.currentTime,.01)}},rate:{enumerable:!0,get:function(){return this._rate},set:function(t){this._rate=t,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}}}),d.prototype.Compressor=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.compNode=this.activateNode=e.createDynamicsCompressor(),this.makeupNode=e.createGain(),this.output=e.createGain(),this.compNode.connect(this.makeupNode),this.makeupNode.connect(this.output),this.automakeup=p(t.automakeup,this.defaults.automakeup.value),this.automakeup?this.makeupNode.gain.value=u(this.computeMakeup()):this.makeupNode.gain.value=u(p(t.makeupGain,this.defaults.makeupGain.value)),this.threshold=p(t.threshold,this.defaults.threshold.value),this.release=p(t.release,this.defaults.release.value),this.attack=p(t.attack,this.defaults.attack.value),this.ratio=t.ratio||this.defaults.ratio.value,this.knee=p(t.knee,this.defaults.knee.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Compressor.prototype=Object.create(i,{name:{value:"Compressor"},defaults:{writable:!0,value:{threshold:{value:-20,min:-60,max:0,automatable:!0,type:s},release:{value:250,min:10,max:2e3,automatable:!0,type:s},makeupGain:{value:1,min:1,max:100,automatable:!0,type:s},attack:{value:1,min:0,max:1e3,automatable:!0,type:s},ratio:{value:4,min:1,max:50,automatable:!0,type:s},knee:{value:5,min:0,max:40,automatable:!0,type:s},automakeup:{value:!1,automatable:!1,type:o},bypass:{value:!1,automatable:!1,type:o}}},computeMakeup:{value:function(){var t=this.compNode;return-(t.threshold.value-t.threshold.value/t.ratio.value)/4}},automakeup:{enumerable:!0,get:function(){return this._automakeup},set:function(t){this._automakeup=t,this._automakeup&&(this.makeupGain=this.computeMakeup())}},threshold:{enumerable:!0,get:function(){return this.compNode.threshold},set:function(t){this.compNode.threshold.value=t,this._automakeup&&(this.makeupGain=this.computeMakeup())}},ratio:{enumerable:!0,get:function(){return this.compNode.ratio},set:function(t){this.compNode.ratio.value=t,this._automakeup&&(this.makeupGain=this.computeMakeup())}},knee:{enumerable:!0,get:function(){return this.compNode.knee},set:function(t){this.compNode.knee.value=t,this._automakeup&&(this.makeupGain=this.computeMakeup())}},attack:{enumerable:!0,get:function(){return this.compNode.attack},set:function(t){this.compNode.attack.value=t/1e3}},release:{enumerable:!0,get:function(){return this.compNode.release},set:function(t){this.compNode.release.value=t/1e3}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(t){this.makeupNode.gain.setTargetAtTime(u(t),e.currentTime,.01)}}}),d.prototype.Convolver=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.convolver=e.createConvolver(),this.dry=e.createGain(),this.filterLow=e.createBiquadFilter(),this.filterHigh=e.createBiquadFilter(),this.wet=e.createGain(),this.output=e.createGain(),this.activateNode.connect(this.filterLow),this.activateNode.connect(this.dry),this.filterLow.connect(this.filterHigh),this.filterHigh.connect(this.convolver),this.convolver.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.dry.gain.value=p(t.dryLevel,this.defaults.dryLevel.value),this.wet.gain.value=p(t.wetLevel,this.defaults.wetLevel.value),this.filterHigh.frequency.value=t.highCut||this.defaults.highCut.value,this.filterLow.frequency.value=t.lowCut||this.defaults.lowCut.value,this.output.gain.value=p(t.level,this.defaults.level.value),this.filterHigh.type="lowpass",this.filterLow.type="highpass",this.buffer=t.impulse||"../impulses/ir_rev_short.wav",this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Convolver.prototype=Object.create(i,{name:{value:"Convolver"},defaults:{writable:!0,value:{highCut:{value:22050,min:20,max:22050,automatable:!0,type:s},lowCut:{value:20,min:20,max:22050,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},wetLevel:{value:1,min:0,max:1,automatable:!0,type:s},level:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},lowCut:{get:function(){return this.filterLow.frequency},set:function(t){this.filterLow.frequency.setTargetAtTime(t,e.currentTime,.01)}},highCut:{get:function(){return this.filterHigh.frequency},set:function(t){this.filterHigh.frequency.setTargetAtTime(t,e.currentTime,.01)}},level:{get:function(){return this.output.gain},set:function(t){this.output.gain.setTargetAtTime(t,e.currentTime,.01)}},dryLevel:{get:function(){return this.dry.gain},set:function(t){this.dry.gain.setTargetAtTime(t,e.currentTime,.01)}},wetLevel:{get:function(){return this.wet.gain},set:function(t){this.wet.gain.setTargetAtTime(t,e.currentTime,.01)}},buffer:{enumerable:!1,get:function(){return this.convolver.buffer},set:function(t){var a=this.convolver,n=new XMLHttpRequest;t?(n.open("GET",t,!0),n.responseType="arraybuffer",n.onreadystatechange=function(){4===n.readyState&&(n.status<300&&n.status>199||302===n.status)&&e.decodeAudioData(n.response,(function(t){a.buffer=t}),(function(t){t&&console.log("Tuna.Convolver.setBuffer: Error decoding data"+t)}))},n.send(null)):console.log("Tuna.Convolver.setBuffer: Missing impulse path!")}}}),d.prototype.Delay=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.dry=e.createGain(),this.wet=e.createGain(),this.filter=e.createBiquadFilter(),this.delay=e.createDelay(10),this.feedbackNode=e.createGain(),this.output=e.createGain(),this.activateNode.connect(this.delay),this.activateNode.connect(this.dry),this.delay.connect(this.filter),this.filter.connect(this.feedbackNode),this.feedbackNode.connect(this.delay),this.feedbackNode.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.delayTime=t.delayTime||this.defaults.delayTime.value,this.feedbackNode.gain.value=p(t.feedback,this.defaults.feedback.value),this.wet.gain.value=p(t.wetLevel,this.defaults.wetLevel.value),this.dry.gain.value=p(t.dryLevel,this.defaults.dryLevel.value),this.filter.frequency.value=t.cutoff||this.defaults.cutoff.value,this.filter.type="lowpass",this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Delay.prototype=Object.create(i,{name:{value:"Delay"},defaults:{writable:!0,value:{delayTime:{value:100,min:20,max:1e3,automatable:!1,type:s},feedback:{value:.45,min:0,max:.9,automatable:!0,type:s},cutoff:{value:2e4,min:20,max:2e4,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},delayTime:{enumerable:!0,get:function(){return this.delay.delayTime},set:function(t){this.delay.delayTime.value=t/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(t){this.wet.gain.setTargetAtTime(t,e.currentTime,.01)}},dryLevel:{enumerable:!0,get:function(){return this.dry.gain},set:function(t){this.dry.gain.setTargetAtTime(t,e.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackNode.gain},set:function(t){this.feedbackNode.gain.setTargetAtTime(t,e.currentTime,.01)}},cutoff:{enumerable:!0,get:function(){return this.filter.frequency},set:function(t){this.filter.frequency.setTargetAtTime(t,e.currentTime,.01)}}}),d.prototype.Filter=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.filter=e.createBiquadFilter(),this.output=e.createGain(),this.activateNode.connect(this.filter),this.filter.connect(this.output),this.filter.frequency.value=t.frequency||this.defaults.frequency.value,this.Q=t.resonance||this.defaults.Q.value,this.filterType=p(t.filterType,this.defaults.filterType.value),this.filter.gain.value=p(t.gain,this.defaults.gain.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Filter.prototype=Object.create(i,{name:{value:"Filter"},defaults:{writable:!0,value:{frequency:{value:800,min:20,max:22050,automatable:!0,type:s},Q:{value:1,min:.001,max:100,automatable:!0,type:s},gain:{value:0,min:-40,max:40,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o},filterType:{value:"lowpass",automatable:!1,type:"string"}}},filterType:{enumerable:!0,get:function(){return this.filter.type},set:function(t){this.filter.type=t}},Q:{enumerable:!0,get:function(){return this.filter.Q},set:function(t){this.filter.Q.value=t}},gain:{enumerable:!0,get:function(){return this.filter.gain},set:function(t){this.filter.gain.setTargetAtTime(t,e.currentTime,.01)}},frequency:{enumerable:!0,get:function(){return this.filter.frequency},set:function(t){this.filter.frequency.setTargetAtTime(t,e.currentTime,.01)}}}),d.prototype.Gain=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.gainNode=e.createGain(),this.output=e.createGain(),this.activateNode.connect(this.gainNode),this.gainNode.connect(this.output),this.gainNode.gain.value=p(t.gain,this.defaults.gain.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Gain.prototype=Object.create(i,{name:{value:"Gain"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},gain:{value:1,automatable:!0,type:s}}},gain:{enumerable:!0,get:function(){return this.gainNode.gain},set:function(t){this.gainNode.gain.setTargetAtTime(t,e.currentTime,.01)}}}),d.prototype.MoogFilter=function(t){var a,n,i,s,o,r,d,u,l,h,c,f,A,v,m;t||(t=this.getDefaults()),this.bufferSize=t.bufferSize||this.defaults.bufferSize.value,this.input=e.createGain(),this.activateNode=e.createGain(),this.processor=e.createScriptProcessor(this.bufferSize,1,1),this.output=e.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output),a=n=i=s=o=r=d=u=0,this.processor.onaudioprocess=function(t){for(l=t.inputBuffer.getChannelData(0),h=t.outputBuffer.getChannelData(0),c=1.16*this.cutoff,m=c*c*.35013*(c*c),f=this.resonance*(1-.15*c*c),v=l.length,A=0;A<v;A++)l[A]-=u*f,l[A]*=m,o=l[A]+.3*a+(1-c)*o,a=l[A],r=o+.3*n+(1-c)*r,n=o,d=r+.3*i+(1-c)*d,i=r,u=d+.3*s+(1-c)*u,s=d,h[A]=u},this.cutoff=p(t.cutoff,this.defaults.cutoff.value),this.resonance=p(t.resonance,this.defaults.resonance.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.MoogFilter.prototype=Object.create(i,{name:{value:"MoogFilter"},defaults:{writable:!0,value:{bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},cutoff:{value:.065,min:1e-4,max:1,automatable:!1,type:s},resonance:{value:3.5,min:0,max:4,automatable:!1,type:s}}},cutoff:{enumerable:!0,get:function(){return this.processor.cutoff},set:function(t){this.processor.cutoff=t}},resonance:{enumerable:!0,get:function(){return this.processor.resonance},set:function(t){this.processor.resonance=t}}}),d.prototype.Overdrive=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.inputDrive=e.createGain(),this.waveshaper=e.createWaveShaper(),this.outputDrive=e.createGain(),this.output=e.createGain(),this.activateNode.connect(this.inputDrive),this.inputDrive.connect(this.waveshaper),this.waveshaper.connect(this.outputDrive),this.outputDrive.connect(this.output),this.ws_table=new Float32Array(this.k_nSamples),this.drive=p(t.drive,this.defaults.drive.value),this.outputGain=p(t.outputGain,this.defaults.outputGain.value),this.curveAmount=p(t.curveAmount,this.defaults.curveAmount.value),this.algorithmIndex=p(t.algorithmIndex,this.defaults.algorithmIndex.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Overdrive.prototype=Object.create(i,{name:{value:"Overdrive"},defaults:{writable:!0,value:{drive:{value:1,min:0,max:1,automatable:!0,type:s,scaled:!0},outputGain:{value:0,min:-46,max:0,automatable:!0,type:s,scaled:!0},curveAmount:{value:.725,min:0,max:1,automatable:!1,type:s},algorithmIndex:{value:0,min:0,max:5,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o}}},k_nSamples:{value:8192},drive:{get:function(){return this.inputDrive.gain},set:function(t){this._drive=t}},curveAmount:{get:function(){return this._curveAmount},set:function(t){this._curveAmount=t,void 0===this._algorithmIndex&&(this._algorithmIndex=0),this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount,this.k_nSamples,this.ws_table),this.waveshaper.curve=this.ws_table}},outputGain:{get:function(){return this.outputDrive.gain},set:function(t){this._outputGain=u(t),this.outputDrive.gain.setValueAtTime(this._outputGain,e.currentTime,.01)}},algorithmIndex:{get:function(){return this._algorithmIndex},set:function(t){this._algorithmIndex=t,this.curveAmount=this._curveAmount}},waveshaperAlgorithms:{value:[function(t,e,a){var n,i,s=2*(t=Math.min(t,.9999))/(1-t);for(n=0;n<e;n++)i=2*n/e-1,a[n]=(1+s)*i/(1+s*Math.abs(i))},function(t,e,a){var n,i,s;for(n=0;n<e;n++)i=2*n/e-1,s=(.5*Math.pow(i+1.4,2)-1)*s>=0?5.8:1.2,a[n]=c(s)},function(t,e,a){var n,i,s,o=1-t;for(n=0;n<e;n++)s=(i=2*n/e-1)<0?-Math.pow(Math.abs(i),o+.04):Math.pow(i,o),a[n]=c(2*s)},function(t,e,a){var n,i,s,o,r=1-t>.99?.99:1-t;for(n=0;n<e;n++)i=2*n/e-1,(o=Math.abs(i))<r?s=o:o>r?s=r+(o-r)/(1+Math.pow((o-r)/(1-r),2)):o>1&&(s=o),a[n]=h(i)*s*(1/((r+1)/2))},function(t,e,a){var n,i;for(n=0;n<e;n++)i=2*n/e-1,a[n]=i<-.08905?-3/4*(1-Math.pow(1-(Math.abs(i)-.032857),12)+1/3*(Math.abs(i)-.032847))+.01:i>=-.08905&&i<.320018?i*i*-6.153+3.9375*i:.630035},function(t,e,a){var n,i,s=2+Math.round(14*t),o=Math.round(Math.pow(2,s-1));for(n=0;n<e;n++)i=2*n/e-1,a[n]=Math.round(i*o)/o}]}}),d.prototype.Panner=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.panner=e.createStereoPanner(),this.output=e.createGain(),this.activateNode.connect(this.panner),this.panner.connect(this.output),this.pan=p(t.pan,this.defaults.pan.value),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Panner.prototype=Object.create(i,{name:{value:"Panner"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},pan:{value:0,min:-1,max:1,automatable:!0,type:s}}},pan:{enumerable:!0,get:function(){return this.panner.pan},set:function(t){this.panner.pan.value=t}}}),d.prototype.Phaser=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.splitter=this.activateNode=e.createChannelSplitter(2),this.filtersL=[],this.filtersR=[],this.feedbackGainNodeL=e.createGain(),this.feedbackGainNodeR=e.createGain(),this.merger=e.createChannelMerger(2),this.filteredSignal=e.createGain(),this.output=e.createGain(),this.lfoL=new a.LFO({target:this.filtersL,callback:this.callback}),this.lfoR=new a.LFO({target:this.filtersR,callback:this.callback});for(var n=this.stage;n--;)this.filtersL[n]=e.createBiquadFilter(),this.filtersR[n]=e.createBiquadFilter(),this.filtersL[n].type="allpass",this.filtersR[n].type="allpass";this.input.connect(this.splitter),this.input.connect(this.output),this.splitter.connect(this.filtersL[0],0,0),this.splitter.connect(this.filtersR[0],1,0),this.connectInOrder(this.filtersL),this.connectInOrder(this.filtersR),this.filtersL[this.stage-1].connect(this.feedbackGainNodeL),this.filtersL[this.stage-1].connect(this.merger,0,0),this.filtersR[this.stage-1].connect(this.feedbackGainNodeR),this.filtersR[this.stage-1].connect(this.merger,0,1),this.feedbackGainNodeL.connect(this.filtersL[0]),this.feedbackGainNodeR.connect(this.filtersR[0]),this.merger.connect(this.output),this.rate=p(t.rate,this.defaults.rate.value),this.baseModulationFrequency=t.baseModulationFrequency||this.defaults.baseModulationFrequency.value,this.depth=p(t.depth,this.defaults.depth.value),this.feedback=p(t.feedback,this.defaults.feedback.value),this.stereoPhase=p(t.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Phaser.prototype=Object.create(i,{name:{value:"Phaser"},stage:{value:4},defaults:{writable:!0,value:{rate:{value:.1,min:0,max:8,automatable:!1,type:s},depth:{value:.6,min:0,max:1,automatable:!1,type:s},feedback:{value:.7,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:40,min:0,max:180,automatable:!1,type:s},baseModulationFrequency:{value:700,min:500,max:1500,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},callback:{value:function(t,e){for(var a=0;a<4;a++)t[a].frequency.value=e}},depth:{get:function(){return this._depth},set:function(t){this._depth=t,this.lfoL.oscillation=this._baseModulationFrequency*this._depth,this.lfoR.oscillation=this._baseModulationFrequency*this._depth}},rate:{get:function(){return this._rate},set:function(t){this._rate=t,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},baseModulationFrequency:{enumerable:!0,get:function(){return this._baseModulationFrequency},set:function(t){this._baseModulationFrequency=t,this.lfoL.offset=this._baseModulationFrequency,this.lfoR.offset=this._baseModulationFrequency,this.depth=this._depth}},feedback:{get:function(){return this._feedback},set:function(t){this._feedback=t,this.feedbackGainNodeL.gain.setTargetAtTime(this._feedback,e.currentTime,.01),this.feedbackGainNodeR.gain.setTargetAtTime(this._feedback,e.currentTime,.01)}},stereoPhase:{get:function(){return this._stereoPhase},set:function(t){this._stereoPhase=t;var e=this.lfoL._phase+this._stereoPhase*Math.PI/180;e=l(e,2*Math.PI),this.lfoR._phase=e}}}),d.prototype.PingPongDelay=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.wet=e.createGain(),this.stereoToMonoMix=e.createGain(),this.feedbackLevel=e.createGain(),this.output=e.createGain(),this.delayLeft=e.createDelay(10),this.delayRight=e.createDelay(10),this.activateNode=e.createGain(),this.splitter=e.createChannelSplitter(2),this.merger=e.createChannelMerger(2),this.activateNode.connect(this.splitter),this.splitter.connect(this.stereoToMonoMix,0,0),this.splitter.connect(this.stereoToMonoMix,1,0),this.stereoToMonoMix.gain.value=.5,this.stereoToMonoMix.connect(this.wet),this.wet.connect(this.delayLeft),this.feedbackLevel.connect(this.wet),this.delayLeft.connect(this.delayRight),this.delayRight.connect(this.feedbackLevel),this.delayLeft.connect(this.merger,0,0),this.delayRight.connect(this.merger,0,1),this.merger.connect(this.output),this.activateNode.connect(this.output),this.delayTimeLeft=void 0!==t.delayTimeLeft?t.delayTimeLeft:this.defaults.delayTimeLeft.value,this.delayTimeRight=void 0!==t.delayTimeRight?t.delayTimeRight:this.defaults.delayTimeRight.value,this.feedbackLevel.gain.value=void 0!==t.feedback?t.feedback:this.defaults.feedback.value,this.wet.gain.value=void 0!==t.wetLevel?t.wetLevel:this.defaults.wetLevel.value,this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.PingPongDelay.prototype=Object.create(i,{name:{value:"PingPongDelay"},delayTimeLeft:{enumerable:!0,get:function(){return this._delayTimeLeft},set:function(t){this._delayTimeLeft=t,this.delayLeft.delayTime.value=t/1e3}},delayTimeRight:{enumerable:!0,get:function(){return this._delayTimeRight},set:function(t){this._delayTimeRight=t,this.delayRight.delayTime.value=t/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(t){this.wet.gain.setTargetAtTime(t,e.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackLevel.gain},set:function(t){this.feedbackLevel.gain.setTargetAtTime(t,e.currentTime,.01)}},defaults:{writable:!0,value:{delayTimeLeft:{value:200,min:1,max:1e4,automatable:!1,type:r},delayTimeRight:{value:400,min:1,max:1e4,automatable:!1,type:r},feedback:{value:.3,min:0,max:1,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}}}),d.prototype.Tremolo=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.splitter=this.activateNode=e.createChannelSplitter(2),this.amplitudeL=e.createGain(),this.amplitudeR=e.createGain(),this.merger=e.createChannelMerger(2),this.output=e.createGain(),this.lfoL=new a.LFO({target:this.amplitudeL.gain,callback:n}),this.lfoR=new a.LFO({target:this.amplitudeR.gain,callback:n}),this.input.connect(this.splitter),this.splitter.connect(this.amplitudeL,0),this.splitter.connect(this.amplitudeR,1),this.amplitudeL.connect(this.merger,0,0),this.amplitudeR.connect(this.merger,0,1),this.merger.connect(this.output),this.rate=t.rate||this.defaults.rate.value,this.intensity=p(t.intensity,this.defaults.intensity.value),this.stereoPhase=p(t.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.offset=1-this.intensity/2,this.lfoR.offset=1-this.intensity/2,this.lfoL.phase=this.stereoPhase*Math.PI/180,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.Tremolo.prototype=Object.create(i,{name:{value:"Tremolo"},defaults:{writable:!0,value:{intensity:{value:.3,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:0,min:0,max:180,automatable:!1,type:s},rate:{value:5,min:.1,max:11,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},intensity:{enumerable:!0,get:function(){return this._intensity},set:function(t){this._intensity=t,this.lfoL.offset=1-this._intensity/2,this.lfoR.offset=1-this._intensity/2,this.lfoL.oscillation=this._intensity,this.lfoR.oscillation=this._intensity}},rate:{enumerable:!0,get:function(){return this._rate},set:function(t){this._rate=t,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},stereoPhase:{enumerable:!0,get:function(){return this._stereoPhase},set:function(t){this._stereoPhase=t;var e=this.lfoL._phase+this._stereoPhase*Math.PI/180;e=l(e,2*Math.PI),this.lfoR.phase=e}}}),d.prototype.WahWah=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.activateNode=e.createGain(),this.envelopeFollower=new a.EnvelopeFollower({target:this,callback:function(t,e){t.sweep=e}}),this.filterBp=e.createBiquadFilter(),this.filterPeaking=e.createBiquadFilter(),this.output=e.createGain(),this.activateNode.connect(this.filterBp),this.filterBp.connect(this.filterPeaking),this.filterPeaking.connect(this.output),this.init(),this.automode=p(t.automode,this.defaults.automode.value),this.resonance=t.resonance||this.defaults.resonance.value,this.sensitivity=p(t.sensitivity,this.defaults.sensitivity.value),this.baseFrequency=p(t.baseFrequency,this.defaults.baseFrequency.value),this.excursionOctaves=t.excursionOctaves||this.defaults.excursionOctaves.value,this.sweep=p(t.sweep,this.defaults.sweep.value),this.activateNode.gain.value=2,this.envelopeFollower.activate(!0),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.WahWah.prototype=Object.create(i,{name:{value:"WahWah"},defaults:{writable:!0,value:{automode:{value:!0,automatable:!1,type:o},baseFrequency:{value:.5,min:0,max:1,automatable:!1,type:s},excursionOctaves:{value:2,min:1,max:6,automatable:!1,type:s},sweep:{value:.2,min:0,max:1,automatable:!1,type:s},resonance:{value:10,min:1,max:100,automatable:!1,type:s},sensitivity:{value:.5,min:-1,max:1,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},automode:{get:function(){return this._automode},set:function(t){this._automode=t,t?(this.activateNode.connect(this.envelopeFollower.input),this.envelopeFollower.activate(!0)):(this.envelopeFollower.activate(!1),this.activateNode.disconnect(),this.activateNode.connect(this.filterBp))}},filterFreqTimeout:{value:0},setFilterFreq:{value:function(){try{this.filterBp.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep),this.filterPeaking.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep)}catch(t){clearTimeout(this.filterFreqTimeout),this.filterFreqTimeout=setTimeout(function(){this.setFilterFreq()}.bind(this),0)}}},sweep:{enumerable:!0,get:function(){return this._sweep},set:function(t){this._sweep=Math.pow(t>1?1:t<0?0:t,this._sensitivity),this.setFilterFreq()}},baseFrequency:{enumerable:!0,get:function(){return this._baseFrequency},set:function(t){this._baseFrequency=50*Math.pow(10,2*t),this._excursionFrequency=Math.min(e.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},excursionOctaves:{enumerable:!0,get:function(){return this._excursionOctaves},set:function(t){this._excursionOctaves=t,this._excursionFrequency=Math.min(e.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},sensitivity:{enumerable:!0,get:function(){return this._sensitivity},set:function(t){this._sensitivity=Math.pow(10,t)}},resonance:{enumerable:!0,get:function(){return this._resonance},set:function(t){this._resonance=t,this.filterPeaking.Q=this._resonance}},init:{value:function(){this.output.gain.value=1,this.filterPeaking.type="peaking",this.filterBp.type="bandpass",this.filterPeaking.frequency.value=100,this.filterPeaking.gain.value=20,this.filterPeaking.Q.value=5,this.filterBp.frequency.value=100,this.filterBp.Q.value=1}}}),d.prototype.EnvelopeFollower=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.jsNode=this.output=e.createScriptProcessor(this.buffersize,1,1),this.input.connect(this.output),this.attackTime=p(t.attackTime,this.defaults.attackTime.value),this.releaseTime=p(t.releaseTime,this.defaults.releaseTime.value),this._envelope=0,this.target=t.target||{},this.callback=t.callback||function(){},this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.EnvelopeFollower.prototype=Object.create(i,{name:{value:"EnvelopeFollower"},defaults:{value:{attackTime:{value:.003,min:0,max:.5,automatable:!1,type:s},releaseTime:{value:.5,min:0,max:.5,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},buffersize:{value:256},envelope:{value:0},sampleRate:{value:44100},attackTime:{enumerable:!0,get:function(){return this._attackTime},set:function(t){this._attackTime=t,this._attackC=Math.exp(-1/this._attackTime*this.sampleRate/this.buffersize)}},releaseTime:{enumerable:!0,get:function(){return this._releaseTime},set:function(t){this._releaseTime=t,this._releaseC=Math.exp(-1/this._releaseTime*this.sampleRate/this.buffersize)}},callback:{get:function(){return this._callback},set:function(t){"function"==typeof t?this._callback=t:console.error("tuna.js: "+this.name+": Callback must be a function!")}},target:{get:function(){return this._target},set:function(t){this._target=t}},activate:{value:function(t){this.activated=t,t?(this.jsNode.connect(e.destination),this.jsNode.onaudioprocess=this.returnCompute(this)):(this.jsNode.disconnect(),this.jsNode.onaudioprocess=null),this.activateCallback&&this.activateCallback(t)}},returnCompute:{value:function(t){return function(e){t.compute(e)}}},compute:{value:function(t){var e,a,n,i,s=t.inputBuffer.getChannelData(0).length,o=t.inputBuffer.numberOfChannels;if(a=n=i=0,o>1)for(i=0;i<s;++i)for(;a<o;++a)n+=(e=t.inputBuffer.getChannelData(a)[i])*e/o;else for(i=0;i<s;++i)n+=(e=t.inputBuffer.getChannelData(0)[i])*e;n=Math.sqrt(n),this._envelope<n?(this._envelope*=this._attackC,this._envelope+=(1-this._attackC)*n):(this._envelope*=this._releaseC,this._envelope+=(1-this._releaseC)*n),this._callback(this._target,this._envelope)}}}),d.prototype.LFO=function(t){t||(t=this.getDefaults()),this.input=e.createGain(),this.output=e.createScriptProcessor(256,1,1),this.activateNode=e.destination,this.frequency=p(t.frequency,this.defaults.frequency.value),this.offset=p(t.offset,this.defaults.offset.value),this.oscillation=p(t.oscillation,this.defaults.oscillation.value),this.phase=p(t.phase,this.defaults.phase.value),this.target=t.target||{},this.output.onaudioprocess=this.callback(t.callback||function(){}),this.bypass=t.bypass||this.defaults.bypass.value},d.prototype.LFO.prototype=Object.create(i,{name:{value:"LFO"},bufferSize:{value:256},sampleRate:{value:44100},defaults:{value:{frequency:{value:1,min:0,max:20,automatable:!1,type:s},offset:{value:.85,min:0,max:22049,automatable:!1,type:s},oscillation:{value:.3,min:-22050,max:22050,automatable:!1,type:s},phase:{value:0,min:0,max:2*Math.PI,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},frequency:{get:function(){return this._frequency},set:function(t){this._frequency=t,this._phaseInc=2*Math.PI*this._frequency*this.bufferSize/this.sampleRate}},offset:{get:function(){return this._offset},set:function(t){this._offset=t}},oscillation:{get:function(){return this._oscillation},set:function(t){this._oscillation=t}},phase:{get:function(){return this._phase},set:function(t){this._phase=t}},target:{get:function(){return this._target},set:function(t){this._target=t}},activate:{value:function(t){t?(this.output.connect(e.destination),this.activateCallback&&this.activateCallback(t)):this.output.disconnect()}},callback:{value:function(t){var e=this;return function(){e._phase+=e._phaseInc,e._phase>2*Math.PI&&(e._phase=0),t(e._target,e._offset+e._oscillation*Math.sin(e._phase))}}}}),d.toString=d.prototype.toString=function(){return"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js"}}()},function(t,e,a){"use strict";a.d(e,"d",(function(){return d})),a.d(e,"a",(function(){return s})),a.d(e,"c",(function(){return o})),a.d(e,"b",(function(){return r}));var n=a(0),i=a(2);let s=function(t,e,a,n){e=e||0,navigator.requestMIDIAccess().then((function(){r[e]?(r[e].onmidimessage=t,"function"==typeof a&&a()):"function"==typeof n&&n()}))},o={play:function(){Object(n.n)("playing midi")},stop:function(){Object(n.n)("stopping midi")}},r=[],d=function(t){Object(n.n)(t.receivedTime,t.data,2),144===t.data[0]?0===t.data[2]?(Object(n.n)("Playing note: ",2),Object(n.n)(i.b[t.data[1]-12],2),o.stop(i.b[t.data[1]-12])):t.data[2]>0&&(Object(n.n)("Stopping note: ",2),Object(n.n)(i.b[t.data[1]-12],2),o.play({pitch:i.b[t.data[1]-12],label:i.b[t.data[1]-12]})):176===t.data[0]?(Object(n.n)("controller"),46==t.data[1]&&(127==t.data[2]?o.pedalMod=!0:0==t.data[2]&&(o.pedalMod=!1))):224===t.data[0]&&Object(n.n)("pitch bend")},u=function(t){r=[];for(var e=t.inputs.values(),a=e.next();!a.done;a=e.next())r.push(a.value);Object(n.n)("MIDI inputs: "),Object(n.n)(r);for(var i=0;i<r.length;i++)r[i].onmidimessage=d},l=function(t){Object(n.n)("Failed to get MIDI access",t)};if(navigator&&navigator.requestMIDIAccess)try{navigator.requestMIDIAccess().then(u,l)}catch(t){Object(n.n)("Failed to get MIDI access",t)}},function(t,e,a){"use strict";var n=a(0),i=a(2),s=new Uint8Array(2048);function o(t){for(var e,a=t.inputBuffer.getChannelData(0),n=a.length,i=0,s=0;s<n;s++)e=a[s],Math.abs(e)>=this.clipLevel&&(this.clipping=!0,this.lastClip=window.performance.now()),i+=e*e;var o=Math.sqrt(i/n);this.volume=Math.max(o,this.volume*this.averaging)}const r=function(t){t||(t={}),this.isSetUp=!1,this.playable=1,t.reverb?Object(n.f)(this,t):this.setUp(t)};r.prototype.setUp=function(t){var e,a,i,s,r;this.wads=[],this.input=n.i.createAnalyser(),this.input.fftSize=2048,this.nodes=[this.input],this.destination=t.destination||n.i.destination,this.volume=t.volume||1,this.gain=n.i.createGain(),this.gain.gain.value=this.volume,this.output=n.i.createAnalyser(),this.tuna=t.tuna||null,this.audioMeter=null,t.audioMeter&&(this.audioMeter=(e=n.i,a=t.audioMeter.clipLevel,i=t.audioMeter.averaging,s=t.audioMeter.clipLag,(r=e.createScriptProcessor(512)).onaudioprocess=o,r.clipping=!1,r.lastClip=0,r.volume=0,r.clipLevel=a||.98,r.averaging=i||.95,r.clipLag=s||750,r.connect(e.destination),r.checkClipping=function(){return!!this.clipping&&(this.lastClip+this.clipLag<window.performance.now()&&(this.clipping=!1),this.clipping)},r.shutdown=function(){this.disconnect(),this.onaudioprocess=null},r),this.output.connect(this.audioMeter)),Object(n.d)(this,t),this.filter&&Object(n.j)(this,t),this.reverb&&Object(n.B)(this,t),this.constructExternalFx(t,n.i),Object(n.e)(this,t),Object(n.A)(this,t),t.compressor&&Object(n.a)(this,t),Object(n.b)(this,t),Object(n.v)(this,t),Object(n.D)(this,t),this.nodes.push(this.gain),this.nodes.push(this.output),Object(n.s)(this,t),this.isSetUp=!0,t.callback&&t.callback(this)},r.prototype.updatePitch=function(t){this.input.getByteTimeDomainData(s);var e,a,o=function(t,e){var a=-1,n=0,i=0,s=!1;if(t.length<1996)return-1;for(let e=0;e<1e3;e++){var o=(t[e]-128)/128;i+=o*o}if((i=Math.sqrt(i/1e3))<.01)return-1;for(var r=1,d=4;d<=1e3;d++){var u=0;for(let e=0;e<1e3;e++)u+=Math.abs((t[e]-128)/128-(t[e+d]-128)/128);if((u=1-u/1e3)>.9&&u>r)s=!0;else if(s)return e/a;r=u,u>n&&(n=u,a=d)}return n>.01?e/a:-1}(s,n.i.sampleRate);if(-1!==o&&11025!==o&&12e3!==o){var r=o;this.pitch=Math.floor(r);var d=(e=r,a=Math.log(e/440)/Math.log(2)*12,Math.round(a)+69);this.noteName=i.b[d-12]}var u=this;u.rafID=window.requestAnimationFrame((function(){u.updatePitch()}))},r.prototype.stopUpdatingPitch=function(){cancelAnimationFrame(this.rafID)},r.prototype.setVolume=function(t){return this.isSetUp?this.gain.gain.value=t:Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.setPitch=function(t){this.wads.forEach((function(e){return t in i.a?(e.soundSource&&(e.soundSource.frequency.value=i.a[t]),e.pitch=i.a[t]):(e.soundSource&&(e.soundSource.frequency.value=t),e.pitch=t),this}))},r.prototype.play=function(t){if(this.isSetUp)if(this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=t;else{t&&t.volume&&(this.gain.gain.value=t.volume,t.volume=void 0);for(var e=0;e<this.wads.length;e++)this.wads[e].play(t)}else Object(n.n)("This PolyWad is not set up yet.");return this},r.prototype.stop=function(t){if(this.isSetUp)for(var e=0;e<this.wads.length;e++)this.wads[e].stop(t)},r.prototype.add=function(t){return this.isSetUp?(t.destination=this.input,this.wads.push(t),t instanceof r&&(t.output.disconnect(0),t.output.connect(this.input))):Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.remove=function(t){if(this.isSetUp)for(var e=0;e<this.wads.length;e++)this.wads[e]===t&&(this.wads[e].destination=n.i.destination,this.wads.splice(e,1),t instanceof r&&(t.output.disconnect(0),t.output.connect(n.i.destination)));return this},r.prototype.constructExternalFx=function(t,e){},e.a=r},function(t,e,a){"use strict";function n(t,e){if(a=t,!(null!=(n=e)&&"undefined"!=typeof Symbol&&n[Symbol.hasInstance]?n[Symbol.hasInstance](a):a instanceof n))throw new TypeError("Cannot call a class as a function");var a,n}function i(t,e){for(var a=0;a<e.length;a++){var n=e[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}var s,o,r,d=function(){function t(e,a){n(this,t),this.Wad=a,e=Object.assign({},t.defaultArgs,e),this.files=e.files,this.sounds=this.files.map((function(t){return t.play?t:new a({source:t})})),this.randomSounds=this.sounds.slice(),this.random=e.random,this.randomPlaysBeforeRepeat=this.sounds.length>3&&e.randomPlaysBeforeRepeat<this.sounds.length-1?e.randomPlaysBeforeRepeat:0,this.index=0,this.waitingSounds=[]}var e,a,s;return e=t,(a=[{key:"play",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.sounds.length)return 0;if(this.random){var a=Math.floor(Math.random()*this.randomSounds.length),n=this.randomSounds[a];return this.index=this.sounds.indexOf(n),this.waitingSounds=this.waitingSounds.filter((function(e){return e.plays-=1,!(e.plays<1)||(t.randomSounds.push(e.sound),null)})),this.randomPlaysBeforeRepeat&&(this.randomSounds.splice(a,1),this.waitingSounds.push({plays:this.randomPlaysBeforeRepeat,sound:n})),n.play(e)}var i=this.sounds[this.index]?this.sounds[this.index].play(e):void 0;return this.index+=1,this.index>=this.sounds.length&&(this.index=0),i}},{key:"add",value:function(t){return t.play||(t=new this.Wad({source:t})),this.sounds.push(t),this.randomSounds.push(t),this}},{key:"remove",value:function(t){var e=this.sounds.indexOf(t);if(-1===e)throw new Error("That sound does not exist: ".concat(t));this.sounds.splice(e,1);var a=this.randomSounds.indexOf(t);return-1===a?this.waitingSounds=this.waitingSounds.filter((function(e){return e.sound!==t})):this.randomSounds.splice(a,1),this}}])&&i(e.prototype,a),s&&i(e,s),t}();r={files:[],random:!1,randomPlaysBeforeRepeat:0},(o="defaultArgs")in(s=d)?Object.defineProperty(s,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[o]=r,e.a=d},function(t,e,a){"use strict";e.a={hiHatClosed:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.03,release:.01},filter:{type:"highpass",frequency:400,q:1}},snare:{source:"noise",env:{attack:.001,decay:.01,sustain:.2,hold:.03,release:.02},filter:{type:"bandpass",frequency:300,q:.18}},hiHatOpen:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.43,release:.01},filter:{type:"highpass",frequency:100,q:.2}},ghost:{source:"square",volume:.3,env:{attack:.01,decay:.002,sustain:.5,hold:2.5,release:.3},filter:{type:"lowpass",frequency:600,q:7,env:{attack:.7,frequency:1600}},vibrato:{attack:8,speed:8,magnitude:100}},piano:{source:"square",volume:1.4,env:{attack:.01,decay:.005,sustain:.2,hold:.015,release:.3},filter:{type:"lowpass",frequency:1200,q:8.5,env:{attack:.2,frequency:600}}}}},function(t,e,a){"use strict";var n=a(3),i=a.n(n);class s{constructor(t,e){this._setFunc=e,this.AudioParamautomationRate="a-rate",this.defaultValue=t,this.maxValue=34028234663852886e22,this.minValue=-34028234663852886e22,this._value=this.defaultValue}get value(){return this._value}set value(t){this._setFunc(t),this._value=t}}var o=a(0);let r=function(t){if(this.source=t.source,this.destination=t.destination||o.i.destination,this.volume=Object(o.F)(t.volume,1),this.defaultVolume=this.volume,this.playable=1,this.pitch=r.pitches[t.pitch]||t.pitch||440,this.gain=[],this.detune=t.detune||0,this.offset=t.offset||0,this.loop=t.loop||!1,this.tuna=t.tuna||null,this.rate=t.rate||1,this.sprite=t.sprite||null,Object(o.c)(this,t),Object(o.d)(this,t),Object(o.h)(this,t),Object(o.g)(this,t),Object(o.f)(this,t),this.constructExternalFx(t,o.i),Object(o.e)(this,t),Object(o.b)(this,t),this.duration=(this.env.attack+this.env.decay+this.env.hold+this.env.release)*(1/this.rate)*1e3,"noise"===this.source)this.decodedBuffer=o.p;else if("mic"===this.source)Object(o.l)(this,t);else if(this.source in{sine:0,sawtooth:0,square:0,triangle:0})t.callback&&t.callback(this);else if(Object(o.u)(this,t.callback),this.sprite){var e=this;for(var a in this.sprite)this[a]={sprite:this.sprite[a],play:function(t){return(t=t||{}).env=t.env||{},t.env.hold=this.sprite[1]-this.sprite[0],t.offset=this.sprite[0],e.play(t)}}}r.allWads.push(this)};r.allWads=[],r.audioContext=o.i,r.listener=new class{constructor(t){this._listener=t.listener,window.listener=this._listener,this.positionX=this._listener.positionX||new s(0,t=>this._listener.setPosition(t,this.positionY.value,this.positionZ.value)),this.positionY=this._listener.positionY||new s(0,t=>this._listener.setPosition(this.positionX.value,t,this.positionZ.value)),this.positionZ=this._listener.positionZ||new s(0,t=>this._listener.setPosition(this.positionX.value,this.positionY.value,t)),this.forwardX=this._listener.forwardX||new s(0,t=>this._listener.setOrientation(t,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardY=this._listener.ForwardY||new s(0,t=>this._listener.setOrientation(this.forwardX.value,t,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardZ=this._listener.forwardZ||new s(-1,t=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,t,this.upX.value,this.upY.value,this.upZ.value)),this.upX=this._listener.upZ||new s(0,t=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,t,this.upY.value,this.upZ.value)),this.upY=this._listener.upY||new s(1,t=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,t,this.upZ.value)),this.upZ=this._listener.upZ||new s(0,t=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,t))}setPosition(t,e,a){this.positionX.value=t,this.positionY.value=e,this.positionZ.value=a}getPosition(){return[this.positionX.value,this.positionY.value,this.positionZ.value]}setOrientation(t,e,a,n,i,s){this.forwardX.value=t,this.forwardY.value=e,this.forwardZ.value=a,this.upX.value=n,this.upY.value=i,this.upZ.value=s}getOrientation(){return[this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value]}}(o.i),null!=typeof i.a&&(r.tuna=new i.a(r.audioContext)),r.prototype.constructExternalFx=function(t,e){},r.prototype.setUpExternalFxOnPlay=function(t,e){},r.prototype.play=function(t){if(t=t||{arg:null},this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=t;else if("mic"===this.source)o.q.micConsent?(null===t.arg||(Object(o.d)(this,t),Object(o.h)(this,t),Object(o.g)(this,t),Object(o.f)(this,t),this.constructExternalFx(t,o.i),Object(o.e)(this,t),Object(o.b)(this,t),Object(o.y)(this,t)),Object(o.s)(this,t)):(Object(o.n)("You have not given your browser permission to use your microphone."),Object(o.l)(this,t).then(()=>{this.play(t)}));else{this.nodes=[],t.wait||(t.wait=0),t.volume?this.volume=t.volume:this.volume=this.defaultVolume,t.offset=t.offset||this.offset||0,this.source in{sine:0,sawtooth:0,square:0,triangle:0}?Object(o.z)(this,t):(this.soundSource=o.i.createBufferSource(),this.soundSource.buffer=this.decodedBuffer,("noise"===this.source||this.loop||t.loop)&&(this.soundSource.loop=!0)),this.soundSource.detune&&(this.soundSource.detune.value=t.detune||this.detune),void 0===t.wait&&(t.wait=0),void 0===t.exactTime&&(t.exactTime=o.i.currentTime+t.wait),this.lastPlayedTime=t.exactTime-t.offset,this.nodes.push(this.soundSource),Object(o.w)(this,t),this.soundSource.playbackRate&&(this.soundSource.playbackRate.value=t.rate||this.rate,this.env.hold=this.env.hold*(1/this.soundSource.playbackRate.value)),Object(o.x)(this,t),Object(o.D)(this,t),this.setUpExternalFxOnPlay(t,o.i),this.gain.unshift(o.i.createGain()),this.gain[0].label=t.label,this.gain[0].soundSource=this.soundSource,this.nodes.push(this.gain[0]),this.gain.length>15&&(this.gain.length=15),this.reverb&&Object(o.B)(this,t),Object(o.A)(this,t),Object(o.v)(this,t),Object(o.s)(this,t),this.filter&&this.filter[0].env&&Object(o.k)(this,t),Object(o.r)(this,t),this.vibrato&&Object(o.E)(this,t,r),this.tremolo&&Object(o.C)(this,t,r);var e=this;this.soundSource.linkNode=[],this.nodes.forEach(t=>{this.soundSource.linkNode.push(t)});let a=this.destination;if(this.soundSource.onended=function(t){e.playPromiseResolve(e);let n=t.target;n.linkNode&&setTimeout(()=>{Object(o.t)(n.linkNode,a)},2e3)},!t.unpause)return this.playPromise=new Promise((function(t,a){e.playPromiseResolve=t})),this.playPromise}t.callback&&t.callback(this)},r.prototype.setVolume=function(t,e,a){if(e=e||.01,a){if(this.gain.length>0)for(let e=0;e<this.gain.length;e++)this.gain[e].label===a&&this.gain[e].gain.setValueAtTime(t,o.i.currentTime)}else this.defaultVolume=t,this.gain.length>0&&this.gain[0].gain.setValueAtTime(t,o.i.currentTime);return this},r.prototype.setRate=function(t){var e;return e=t&&t>0?t:0,this.soundSource?this.soundSource.playbackRate.value=e:Object(o.n)("Sorry, but the wad does not contain a soundSource!"),this},r.prototype.setPitch=function(t,e,a){if(e=e||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&(t in r.pitches?this.gain[n].soundSource.frequency.setTargetAtTime(r.pitches[t],o.i.currentTime,e):this.soundSource.frequency.settargetAtTime(t,o.i.currentTime,e));else t in r.pitches?(this.soundSource&&(this.soundSource.frequency.value=r.pitches[t]),this.pitch=r.pitches[t]):(this.soundSource&&(this.soundSource.frequency.value=t),this.pitch=t);return this},r.prototype.setDetune=function(t,e,a){if(e=e||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&this.gain[n].soundSource.detune.setTargetAtTime(t,o.i.currentTime,e);else this.soundSource.detune.setTargetAtTime(t,o.i.currentTime,e);return this},r.prototype.setPanning=function(t,e,a){return e=e||.01,"number"!=typeof t||o.i.createStereoPanner||(t=[t,0,0]),this.panning.location=t,Object(o.m)(t)&&"3d"===this.panning.type&&this.panning.node?this.panning.node.setPosition(t[0],t[1],t[2]):"number"==typeof t&&"stereo"===this.panning.type&&this.panning.node&&this.panning.node.pan.setTargetAtTime(t,o.i.currentTime,e),Object(o.m)(t)?this.panning.type="3d":"number"==typeof t&&(this.panning.type="stereo"),this},r.prototype.setReverb=function(t){var e;return e=t&&t>0&&t<1?t:t>=1?1:0,this.reverb?(this.reverb.wet=e,this.reverb.node&&(this.reverb.node.wet.gain.value=e)):Object(o.n)("Sorry, but the wad does not contain Reverb!"),this},r.prototype.setDelay=function(t,e,a){var n,i,s;return n=t&&t>0?t:0,i=e&&e>0&&e<1?e:e>=1?1:0,s=a&&a>0&&a<1?a:a>=1?1:0,this.delay?(this.delay.delayTime=n,this.delay.wet=i,this.delay.feedback=s,this.delay.delayNode&&(this.delay.delayNode.delayNode.delayTime.value=n,this.delay.delayNode.wetNode.gain.value=i,this.delay.delayNode.feedbackNode.gain.value=s)):Object(o.n)("Sorry, but the wad does not contain delay!",2),this},r.prototype.pause=function(t){this.pauseTime=o.i.currentTime,this.soundSource.onended=null,this.stop(t)},r.prototype.unpause=function(t){(t=t||{}).unpause=!0,this.pauseTime&&null!=this.lastPlayedTime?t.offset=this.pauseTime-this.lastPlayedTime:Object(o.n)("You tried to unpause a wad that was not played and paused, so it just played normally instead.",2),this.play(t)},r.prototype.stop=function(t){if("mic"!==this.source){if(!this.gain||!this.gain.length)return Object(o.n)("You tried to stop a Wad that never played. ",2),void Object(o.n)(this,2);if(t)for(var e=0;e<this.gain.length;e++)this.gain[e].label===t&&(this.gain[e].gain.cancelScheduledValues(o.i.currentTime),this.gain[e].gain.setValueAtTime(this.gain[e].gain.value,o.i.currentTime),this.gain[e].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release));else if(!t){this.gain[0].gain.cancelScheduledValues(o.i.currentTime),this.gain[0].gain.setValueAtTime(this.gain[0].gain.value,o.i.currentTime),this.gain[0].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release);try{this.soundSource.stop(o.i.currentTime+this.env.release)}catch(t){Object(o.n)(t,2);var a=this;setTimeout((function(){a.soundSource.dispatchEvent(new Event("ended")),a.soundSource.onended=null}),1e3*this.env.release)}}}else o.q.micConsent?this.mediaStreamSource.disconnect(0):Object(o.n)("You have not given your browser permission to use your microphone.");this.tremolo&&this.tremolo.wad.stop()},r.stopAll=function(t){for(var e=0;e<r.allWads.length;e++)r.allWads[e].stop(t)},r.setVolume=function(t){for(var e=0;e<r.allWads.length;e++)r.allWads[e].setVolume(t)};e.a=r},function(t,e){t.exports=function(t){if(!t.webpackPolyfill){var e=Object.create(t);e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),Object.defineProperty(e,"exports",{enumerable:!0}),e.webpackPolyfill=1}return e}},function(t,e,a){"use strict";a.r(e);var n=a(1),i=0,s=1,o=2,r=3,d=class{constructor(){this.tracks=[],this.interval=null,this.step=0,this.bpm=60,this.state=i,this._frameCount=0,this._skipFrame=60,this._stopMark=!1,this._name="trigon",this._create=null,this.speed=1,this.pitchShift=0}sine(t){return new n.a({source:"sine",...t})}sawtooth(t){return new n.a({source:"sawtooth",...t})}square(t){return new n.a({source:"square",...t})}triangle(t){return new n.a({source:"triangle",...t})}baseDrum(t){var e=new class{constructor(){this._name="",this._type="trigon_instrument",this.map={}}setMap(t){this.map=t}_play(t,e){var a=this.map[t];a&&(a.onTrigger?a.onTrigger(e):a.play(e))}play(t){var e=t.pitch;t.label;e&&(this.onTrigger?this.onTrigger(t):this._play(e,t))}stop(t){}},a={kick:new n.a({source:"./samples/drum/kick.wav",...t}),snare:new n.a({source:"./samples/drum/snare.wav",...t}),ohh:new n.a({source:"./samples/drum/openhh.wav",...t}),ohh3:new n.a({source:"./samples/drum/openhh3.wav",...t}),chh:new n.a({source:"./samples/drum/closehh.wav",...t}),chh2:new n.a({source:"./samples/drum/closehh2.wav",...t}),chh3:new n.a({source:"./samples/drum/closehh3.wav",...t})};return e.setMap(a),e.onTrigger=t=>{t.pitch.split("+").forEach(a=>{e._play(a,t)})},e}groupSource(t,e){let a=new n.a.Poly(e);return t.forEach(t=>{a.add(t)}),a}addTrack(t){0!=this.pitchShift&&(t.pitchShift=this.pitchShift),this.tracks.push(t)}setPitchShift(t){this.tracks.forEach(e=>{e.pitchShift=t}),this.pitchShift=t}setBpm(t){this.bpm=t,this._skipFrame=Math.round(3600/t/10*2/this.speed),console.log("skipFrame:"+this._skipFrame)}setCreate(t){this._create=t}play(){this.state==i&&this.stop(),this.state!=s&&(this.tracks=[],this._create&&this._create(),console.log("track-count:"+this.tracks.length),this._stopMark=!1,this.state=s,requestAnimationFrame(()=>{this._onFrame()}))}_onFrame(){if(this._stopMark)return;if(requestAnimationFrame(()=>{this._onFrame()}),this._frameCount+=1,this._frameCount%(1+this._skipFrame)!=0)return;let t=!0;this.tracks.forEach(e=>{e.play(this.step)&&(t=!1)}),this.step+=1,t&&this.stop()}pause(){this._stopMark=!0,this.state=o}stop(){this._frameCount=0,this.step=0,this._stopMark=!0,this.state=r}};function u(t,e){let a=function(t){return n.a.pitchesArray.indexOf(t)}(t);if(a<0)return t;for(a+=e;a<0;)a+=12;for(;a>=n.a.pitchesArray.length;)a-=12;return n.a.pitchesArray[a]}var l=class{constructor(t=null,e=4,a=0){this.data=[],this._name="trigon_pattern",this._lastSynth=null,this.name=t,this.stopOnNext=!1,this.defaultNoteLength=e,this.pitchShift=a}addPattern(t,e=null,a=0){if(a>0)for(var n=0;n<a;n++)this.addNote(null,"0");t&&("trigon_pattern"==t._name?1==t.stopOnNext?this.data=this.data.concat(t.data.map(t=>(null==t.args&&(t.args={}),t.args._stop=!0,t))):this.data=this.data.concat(t.data):e.forEach(e=>{this.addNote(t,e)}))}addNote(t,e,a,n,i=null){if(n>0)for(var s=0;s<n;s++)this._addNote(null,"0");if(this._addNote(t,e,i),a>0)for(s=0;s<a;s++)this._addNote(null,"0")}addEvent(t){this.data.push({note:"_e",event:t})}_addNote(t,e,a=null){let n=e.split("/");var i=this.defaultNoteLength;if(n.length>1&&(e=n[0],i=parseInt(n[1])),this.data.length>0&&"_e"==this.data[this.data.length-1].note){let n=this.data[this.data.length-1];n.note=e,n.synth=t,n.args=a}else this.data.push({synth:t,note:e,args:a});for(let t=1;t<i;t++)this.data.push({synth:null,note:"-",args:null})}play(t){var e=this.data[t];if(!e)return!1;let a=e.synth,n=e.note,i=e.args;if(e.event&&e.event(e),"0"!=n&&"-"!=n){if(this._lastSynth&&(this.stopOnNext||this._lastSynth.stop)&&this._lastSynth.synth.stop(),"m"==n||"M"==n)return!0;let t=n.split("+");t.length>1?t.forEach(t=>{this._play(t,a,i)}):this._play(n,a,i),console.log("track:"+this.name+" play:"+n)}return!0}_play(t,e,a=null){[t,a]=this._parseNoteArg(t,a),0!=this.pitchShift&&(t=u(t,this.pitchShift)),a?e.play({pitch:t,label:t,...a}):e.play({pitch:t,label:t}),a&&a._stop?this._lastSynth={synth:e,stop:!0}:this._lastSynth={synth:e,stop:!1}}_parseNoteArg(t,e){return t.indexOf("[")<=0||t.indexOf("]")<=0?[t,e]:(e||(e={}),t.match(/\[.*?\]/g).forEach(t=>{let a=(t=t.substr(1,t.length-2)).split("=")[0],n=t.split("=")[1];"stop"==a?e._stop=!0:a&&n&&(e[a]=parseFloat(n))}),[t=t.split("[")[0],e])}},h=new d;h.setBpm(120);var c=null,p=null,f=null,A=null;h.setCreate(()=>{!function(){let t=h.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),e=["A3","C4","E4","A3","C4","E4","A3","C4","E4","0","0","0","0","0","0","0"],a=new l;a.addPattern(t,e),e=["G3","C4","E4","G3","C4","E4","G3","C4","E4","0","0","0","0","0","0","0"];let n=new l;n.addPattern(t,e),e=["F3","C4","E4","F3","C4","E4","F3","C4","E4","0","0","0","0","0","0","0"];let i=new l;i.addPattern(t,e),e=["G#3","C4","E4","G#3","C4","E4","G#3","C4","E4","0","0","0","0","0","0","0"];let s=new l;s.addPattern(t,e);let o=new l;o.addPattern(a),o.addPattern(a),o.addPattern(n),o.addPattern(n),o.addPattern(i),o.addPattern(i),o.addPattern(n),o.addPattern(s),(c=new l("tr1")).addPattern(o),c.addPattern(o),c.addPattern(o),c.addPattern(o),h.addTrack(c)}(),function(){let t=h.sawtooth({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),e=new l;e.addNote(t,"A4",7),e.addNote(t,"E4",7),e.addNote(t,"A3",15),e.addNote(t,"G4",7),e.addNote(t,"D4",7),e.addNote(t,"B3",15),e.addNote(t,"F4",7),e.addNote(t,"C4",7),e.addNote(t,"A3",15),e.addNote(t,"F#4",7),e.addNote(t,"C4",7),e.addNote(t,"E4",15),(p=new l("tr2")).addPattern(e,null,128),p.addPattern(e),p.addPattern(e),p.addPattern(e),p.addPattern(e),h.addTrack(p)}(),function(){let t=h.triangle({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.25,wet:.7,feedback:.8},volume:.4}),e=new l;e.addNote(t,"C4",7),e.addNote(t,"A3",7),e.addNote(t,"E3",15),e.addNote(t,"B3",7),e.addNote(t,"C4",7),e.addNote(t,"E4",15),e.addNote(t,"C4",7),e.addNote(t,"A3",7),e.addNote(t,"E3",15),e.addNote(t,"B3",7),e.addNote(t,"C4",7),e.addNote(t,"E4",15),(f=new l("tr3")).addPattern(e,null,256),f.addPattern(e),h.addTrack(f)}(),function(){let t=h.baseDrum({volume:.8,delay:{delayTime:.3,wet:.25,feedback:.25}}),e=["kick","0","0","0","0","0","0","0","snare","0","0","0","0","0","0","0","kick","0","0","0","0","kick","0","0","snare","0","0","0","0","0","0","0"],a=new l;a.addPattern(t,e),a.addPattern(t,e),a.addPattern(t,e),a.addPattern(t,e),(A=new l("tr4")).addPattern(a,null,256),A.addPattern(a),A.addPattern(a),h.addTrack(A)}()});var v=new d;v.setBpm(180);let m=v.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.15});v.setCreate(()=>{let t=new l;t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),t.addPattern(m,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]);var e=new l;e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),e.addPattern(t),v.addTrack(e)});var y=null;document.getElementById("bt").onclick=function(){null!=y?y.play():alert("Please select songs")},document.getElementById("btStop").onclick=function(){null!=y?y.stop():alert("Please select songs")},document.getElementById("btPause").onclick=function(){null!=y?y.pause():alert("Please select songs")};var g=[{name:"潮鸣り - 折戸伸治",song:class{constructor(){this.trigon=new d,this.trigon.speed=2,this.trigon.setBpm(76),this.track1=new l("tr1"),this.track2=new l("tr2"),this.track3=new l("tr_drum"),this.track4=new l("tr_bass"),this.track5=new l("tr_synth")}setTrack1(){let t=this.trigon.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.15}),e=new l;e.addPattern(t,["F3","C4","E4","C4","F3","C4","E4","C4"]);let a=new l;a.addPattern(t,["G3","B3","D4","B3","G3","B3","D4","B3"]);let n=new l;n.addPattern(t,["A3","C4","E4","C4","A3","C4","E4","C4"]);let i=new l;i.addPattern(e),i.addPattern(a),i.addPattern(n),i.addPattern(n),this.track1.addPattern(i,null,2),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i),this.track1.addPattern(i)}setTrack2(){let t=this.trigon.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3});var e=new l;e.addNote(t,"G4",1);var a=new l;a.addNote(t,"A4"),a.addNote(t,"E5"),a.addNote(t,"A4"),a.addNote(t,"G4"),a.addNote(t,"A4",6),a.addNote(t,"G4"),a.addNote(t,"A4"),a.addNote(t,"E5"),a.addNote(t,"A4"),a.addNote(t,"G4"),a.addNote(t,"A4"),a.addNote(t,"E5"),a.addNote(t,"A4"),a.addNote(t,"G4"),a.addNote(t,"A4",2),a.addNote(t,"E4"),a.addNote(t,"G4",2),a.addNote(t,"D4"),a.addNote(t,"E4"),a.addNote(t,"G4"),a.addNote(t,"A4"),a.addNote(t,"B4"),a.addNote(t,"A4"),a.addNote(t,"E5"),a.addNote(t,"A4"),a.addNote(t,"G4"),a.addNote(t,"A4",6);var n=new l;n.addNote(t,"G4"),n.addNote(t,"A4"),n.addNote(t,"E5"),n.addNote(t,"B4"),n.addNote(t,"C5"),n.addNote(t,"B4"),n.addNote(t,"C5"),n.addNote(t,"D5"),n.addNote(t,"E5"),n.addNote(t,"A4",7),n.addNote(t,"A4",1),n.addNote(t,"G4",1);var i=new l;i.addNote(t,"G4"),i.addNote(t,"A4"),i.addNote(t,"E5"),i.addNote(t,"B4"),i.addNote(t,"C5"),i.addNote(t,"B4"),i.addNote(t,"C5"),i.addNote(t,"B4"),i.addNote(t,"A4"),i.addNote(t,"E4",6),i.addNote(t,"D4"),i.addNote(t,"E4"),i.addNote(t,"G4"),i.addNote(t,"A4"),i.addNote(t,"B4");var s=new l;s.addNote(t,"G4"),s.addNote(t,"A4"),s.addNote(t,"E5"),s.addNote(t,"B4"),s.addNote(t,"C5"),s.addNote(t,"B4"),s.addNote(t,"C5"),s.addNote(t,"D5"),s.addNote(t,"E5"),s.addNote(t,"A4",5),s.addNote(t,"A4",1),s.addNote(t,"B4",1),s.addNote(t,"G5",1);var o=new l;o.addPattern(t,["D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","C6","B5","A5"]);let r=new l;r.addPattern(a),r.addPattern(n),r.addPattern(a),r.addPattern(i),r.addPattern(a),r.addPattern(s),r.addPattern(o),this.track2.addPattern(e),this.track2.addPattern(r)}setDrum(){let t=this.trigon.baseDrum({volume:.8}),e=new l;e.addNote(t,"kick+ohh"),e.addNote(t,"chh"),e.addNote(t,"snare+chh"),e.addNote(t,"chh"),e.addNote(t,"kick+chh"),e.addNote(t,"kick+chh"),e.addNote(t,"snare+chh"),e.addNote(t,"chh");let a=new l;a.addNote(t,"kick+chh"),a.addNote(t,"chh"),a.addNote(t,"snare+chh"),a.addNote(t,"chh"),a.addNote(t,"chh"),a.addNote(t,"chh/2"),a.addNote(t,"kick/2"),a.addNote(t,"snare+chh"),a.addNote(t,"kick+chh");let n=new l;n.addNote(t,"kick+ohh"),n.addNote(t,"chh"),n.addNote(t,"snare+chh"),n.addNote(t,"chh"),n.addNote(t,"chh"),n.addNote(t,"kick+chh"),n.addNote(t,"snare+chh"),n.addNote(t,"chh");let i=new l;i.addPattern(e),i.addPattern(a),i.addPattern(n),i.addPattern(e);let s=new l;s.addNote(t,"snare",1),this.track3.addPattern(s,null,64),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i),this.track3.addPattern(i)}setTrackBass(){let t=this.trigon.triangle({env:{attack:.01,decay:.03,hold:2,release:.5},volume:.3});var e=new l;e.addNote(t,"F2",6),e.addNote(t,"F2"),e.addNote(t,"G2",6),e.addNote(t,"G2"),e.addNote(t,"A2",6),e.addNote(t,"A2"),e.addNote(t,"A2",7),this.track4.stopOnNext=!0,this.track4.addPattern(e,null,66),this.track4.addPattern(e),this.track4.addPattern(e),this.track4.addPattern(e),this.track4.addPattern(e),this.track4.addPattern(e),this.track4.addPattern(e),this.track4.addPattern(e)}setTrackSynth(){let t=this.trigon.sawtooth({env:{attack:.01,decay:.03,hold:.05,release:.5},volume:.05,panning:0}),e=new l;e.addNote(t,"A6",null,null,{panning:-.5}),e.addNote(t,"A6",null,null,{panning:.5,volume:.03}),e.addNote(t,"E6",null,null,{panning:-.5}),e.addNote(t,"E6",null,null,{panning:.5,volume:.03});let a=new l;a.addPattern(e),a.addPattern(e),a.addPattern(e),a.addPattern(e),a.addPattern(e),a.addPattern(e),a.addPattern(e),a.addPattern(e),this.track5.addPattern(a,null,2),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a),this.track5.addPattern(a)}create(){this.setTrack1(),this.setTrack2(),this.setDrum(),this.setTrackSynth(),this.setTrackBass(),this.trigon.setCreate(()=>{this.trigon.addTrack(this.track1),this.trigon.addTrack(this.track2),this.trigon.addTrack(this.track3),this.trigon.addTrack(this.track4),this.trigon.addTrack(this.track5)})}customDom(t){t.innerHTML="";var e=document.createElement("span");e.id="lbsp",e.innerHTML="Speed(76):",t.appendChild(e);var a=document.createElement("input");a.setAttribute("min","30"),a.setAttribute("max","120"),a.setAttribute("type","range"),a.setAttribute("value","76"),a.onchange=t=>{this.trigon.setBpm(t.target.value),e.innerHTML="Speed("+t.target.value+"):"},t.appendChild(a)}}},{name:"Resserections - Lena Raine",song:class{constructor(){this.trigon=new d,this.trigon.speed=2,this.trigon.setBpm(145)}create(){var t=new l,e=new l,a=new l,n=new l,i=new l,s=new l;(()=>{let e=this.trigon.square({filter:{type:"lowpass",frequency:800,q:1},env:{attack:.01,decay:0,hold:.2,release:.1},delay:{delayTime:.8,wet:.25,feedback:.25},volume:.15}),a=this.trigon.square({filter:{type:"lowpass",frequency:2e3,q:1},env:{attack:.001,decay:0,hold:.2,release:.15},delay:{delayTime:.8,wet:.5,feedback:.5},volume:.2}),n=new l;n.addPattern(e,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),n.addPattern(e,["0","0","0","0","0","0","0"]),n.addPattern(e,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),n.addPattern(e,["0","0","0","0","0","0","0"]);let i=new l;i.addPattern(e,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),i.addPattern(e,["0","0","0","0","0","0","0"]),i.addPattern(e,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),i.addPattern(e,["0","0","0","0","0","0","0"]);let s=new l;s.addPattern(e,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),s.addPattern(e,["0","0","0","0","0","0","0"]),s.addPattern(e,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),s.addPattern(e,["0","0","0","0","0","0","0"]);let o=new l;o.addPattern(e,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),o.addPattern(e,["0","0","0","0","0","0","0"]),o.addPattern(e,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),o.addPattern(e,["0","0","0","0","0","0","0"]);let r=new l;r.addPattern(n),r.addPattern(i),r.addPattern(s),r.addPattern(o);let d=new l;d.addPattern(a,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),d.addPattern(a,["0","0","0","0","0","0","0"]),d.addPattern(a,["A2","C3","E3","G#3","C4","E4","G#4","C5","E5"]),d.addPattern(a,["0","0","0","0","0","0","0"]);let u=new l;u.addPattern(a,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),u.addPattern(a,["0","0","0","0","0","0","0"]),u.addPattern(a,["G2","C3","E3","G3","C4","E4","G4","C5","E5"]),u.addPattern(a,["0","0","0","0","0","0","0"]);let h=new l;h.addPattern(a,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),h.addPattern(a,["0","0","0","0","0","0","0"]),h.addPattern(a,["F2","A2","C3","F3","A3","C4","E4","A4","C5"]),h.addPattern(a,["0","0","0","0","0","0","0"]);let c=new l;c.addPattern(a,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),c.addPattern(a,["0","0","0","0","0","0","0"]),c.addPattern(a,["E2","G#2","B2","E3","G#3","B3","E4","G#4","B4"]),c.addPattern(a,["0","0","0","0","0","0","0"]);let p=new l;p.addPattern(d),p.addPattern(u),p.addPattern(h),p.addPattern(c),t.addPattern(r),t.addPattern(r),t.addPattern(r),t.addPattern(r),t.addPattern(r),t.addPattern(p),t.addPattern(p),t.addPattern(p),t.addPattern(p),t.addPattern(p)})();(()=>{let t=this.trigon.triangle({env:{attack:.01,decay:.005,hold:.1,release:.3},delay:{delayTime:.4,wet:.4,feedback:.5},volume:.4}),a=this.trigon.triangle({env:{attack:.01,decay:.005,hold:.1,release:.5},delay:{delayTime:.4,wet:.25,feedback:.25},volume:.2});var n=new l;n.addPattern(t,["0/16","0/16","0/16","A4","B4","C5","D5"]),n.addNote(t,"E5",14),n.addNote(t,"D5"),n.addNote(t,"C5",14),n.addNote(t,"B4"),n.addNote(t,"A4",15),n.addPattern(t,["0/16","0/16","0/16","A4","B4","C5","D5"]),n.addNote(t,"E5",14),n.addNote(t,"D5"),n.addNote(t,"C5",14),n.addNote(t,"A4"),n.addNote(t,"G#4",15);let i=new l,s=new l;s.addNote(a,"A3",1),s.addNote(a,"G#4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"G#4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"A4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"A4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"B4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"B4+E4",1),s.addNote(a,"A3",1),s.addNote(a,"C5+E4",1),s.addNote(a,"A3",1),s.addNote(a,"C5+E4",1);let o=new l;o.addNote(a,"G3",1),o.addNote(a,"G#4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"G#4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"A4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"A4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"B4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"B4+E4",1),o.addNote(a,"G3",1),o.addNote(a,"C5+E4",1),o.addNote(a,"G3",1),o.addNote(a,"C5+E4",1);let r=new l;r.addNote(a,"G3",1),r.addNote(a,"G4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"G4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"A4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"A4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"B4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"B4+E4",1),r.addNote(a,"G3",1),r.addNote(a,"C5+E4",1),r.addNote(a,"G3",1),r.addNote(a,"C5+E4",1);let d=new l;d.addNote(a,"F3",1),d.addNote(a,"G#4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"G#4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"A4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"A4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"B4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"B4+E4",1),d.addNote(a,"F3",1),d.addNote(a,"C5+E4",1),d.addNote(a,"F3",1),d.addNote(a,"C5+E4",1);let u=new l;u.addNote(a,"E3",1),u.addNote(a,"G#4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"G#4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"A4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"A4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"B4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"B4+E4",1),u.addNote(a,"E3",1),u.addNote(a,"C5+E4",1),u.addNote(a,"E3",1),u.addNote(a,"C5+E4",1),i.addPattern(s),i.addPattern(o),i.addPattern(d),i.addPattern(u),i.addPattern(s),i.addPattern(r),i.addPattern(d),i.addPattern(u),e.addPattern(null,[],64),e.addPattern(null,[],32),e.addPattern(null,[],16),e.addPattern(n),e.addPattern(n),e.addPattern(null,[],16),e.addPattern(i)})();(()=>{let t=this.trigon.triangle({env:{attack:.01,decay:.005,hold:.1,release:.5},volume:.5}),e=this.trigon.sawtooth({filter:{type:"lowpass",frequency:9500,q:1},env:{attack:.01,decay:.005,hold:.1,release:.5},volume:.2}),n=this.trigon.groupSource([t,e],{delay:{delayTime:.4,wet:.25,feedback:.25}});a.addPattern(null,[],128),a.addPattern(null,[],128),a.addPattern(null,[],128),a.addPattern(null,[],128),a.addPattern(null,[],126),a.addPattern(n,["A4/8"]),a.addPattern(n,["E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","A4/8","E5/8","0/8","0/8","0/8","0/8","0/8","0/8","0/4","D5/2","C5/2","B4/8","0/8","0/8","0/8","0/8","A4/8","B4/8","0/4","C5","E4/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8","0/8"]);let i=n,s=new l,o=new l;o.addNote(i,"A3",1),o.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),o.addNote(i,"A3",1),o.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1);let r=new l;r.addNote(i,"G3",1),r.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),r.addNote(i,"G3",1),r.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1);let d=new l;d.addNote(i,"G3",1),d.addNote(i,"G4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"G4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),d.addNote(i,"G3",1),d.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1);let u=new l;u.addNote(i,"F3",1),u.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),u.addNote(i,"F3",1),u.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1);let h=new l;h.addNote(i,"E3",1),h.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"G#4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"A4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"B4[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),h.addNote(i,"E3",1),h.addNote(i,"C5[panning=.5]+E4[panning=-.5]",1),s.addPattern(o),s.addPattern(r),s.addPattern(u),s.addPattern(h),s.addPattern(o),s.addPattern(d),s.addPattern(u),s.addPattern(h),a.addPattern(s),a.addPattern(o),a.addPattern(d),a.addPattern(u),a.addPattern(h)})();(()=>{n.stopOnNext=!0;let t=this.trigon.triangle({env:{attack:.01,decay:.03,hold:2,release:.01},volume:.3}),e=new l;e.addNote(t,"A1",7),e.addNote(t,"A1",7),e.addNote(t,"A1",7),e.addNote(t,"A1",7),e.addNote(t,"G1",7),e.addNote(t,"G1",7),e.addNote(t,"G1",7),e.addNote(t,"G1",7),e.addNote(t,"F1",7),e.addNote(t,"F1",7),e.addNote(t,"F1",7),e.addNote(t,"F1",7),e.addNote(t,"E1",7),e.addNote(t,"E1",7),e.addNote(t,"E1",7),e.addNote(t,"E1",7),n.addPattern(null,[],128),n.addPattern(null,[],128),n.addPattern(e),n.addPattern(e),n.addPattern(null,[],128),n.addPattern(null,[],128),n.addPattern(e),n.addPattern(e),n.addPattern(e)})();(()=>{i.stopOnNext=!0;let t={attack:.01,decay:.03,hold:2,release:0},e=this.trigon.sawtooth({env:t,volume:.1,panning:.5}),a=this.trigon.sawtooth({env:t,volume:.1,detune:30,panning:-.5}),n=this.trigon.groupSource([e,a],{volume:1,filter:{type:"lowpass",frequency:2e3,q:1}}),s=new l;s.addNote(n,"A2",7),s.addNote(n,"A2",7),s.addNote(n,"A2",7),s.addNote(n,"A2",7),s.addNote(n,"G2",7),s.addNote(n,"G2",7),s.addNote(n,"G2",7),s.addNote(n,"G2",7),s.addNote(n,"F2",7),s.addNote(n,"F2",7),s.addNote(n,"F2",7),s.addNote(n,"F2",7),s.addNote(n,"E2",7),s.addNote(n,"E2",7),s.addNote(n,"E2",7),s.addNote(n,"E2",7),i.addPattern(null,[],768),i.addPattern(s),i.addPattern(s),i.addPattern(s)})();(()=>{let t=this.trigon.baseDrum({volume:.8}),e=new l;e.addNote(t,"kick+ohh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3"),e.addNote(t,"snare+chh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3"),e.addNote(t,"kick+chh3"),e.addNote(t,"chh3"),e.addNote(t,"kick+chh3"),e.addNote(t,"chh3"),e.addNote(t,"snare+chh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3"),e.addNote(t,"chh3");let a=new l;a.addNote(t,"kick+chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"snare+chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"chh3"),a.addNote(t,"kick"),a.addNote(t,"snare+chh3"),a.addNote(t,"chh3"),a.addNote(t,"kick+chh3"),a.addNote(t,"chh3");let n=new l;n.addNote(t,"kick+ohh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"snare+chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"kick+chh3"),n.addNote(t,"chh3"),n.addNote(t,"snare+chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3"),n.addNote(t,"chh3");let i=new l;i.addPattern(e),i.addPattern(a),i.addPattern(n),i.addPattern(e),s.addPattern(null,[],128),s.addPattern(null,[],128),s.addPattern(null,[],128),s.addPattern(null,[],128),s.addPattern(null,[],128),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i),s.addPattern(i)})(),this.trigon.setCreate(()=>{this.trigon.addTrack(t),this.trigon.addTrack(e),this.trigon.addTrack(a),this.trigon.addTrack(n),this.trigon.addTrack(i),this.trigon.addTrack(s)})}customDom(t){var e=document.createElement("img");e.setAttribute("src","./images/resserections.jpg"),e.setAttribute("width","350px"),t.appendChild(e)}}},{name:"黎月BGM - HoyoMix",song:class{constructor(){this.trigon=new d,this.trigon.speed=1,this.trigon.setBpm(100),this.track1=new l("track1",4),this.track2=new l("track2",4),this.track3=new l("track3",4)}setTrack1(){let t=this.trigon.triangle({env:{attack:0,decay:.01,hold:.2,release:.3},delay:{delayTime:.8,wet:.25,feedback:.2},volume:.5}),e=this.trigon.triangle({env:{attack:.1,decay:.01,hold:.5,release:.5},delay:{delayTime:.8,wet:.15,feedback:.05},volume:.4}),a=new l;a.addPattern(t,["F5","G5","A5","C6"]),a.addEvent(t=>{this.trigon.setBpm(98)}),a.addPattern(t,["F5[volume=.25]/1","A5[volume=.3]/1","D6[volume=.4]/6","D6/8","D6/8","D6","E6","D6"]),a.addPattern(null,[],2),a.addNote(t,"0/2"),a.addPattern(t,["D6/1[volume=.25]","E6/1[volume=.25]","D6[volume=.25]","C6","C6","A5","C6/8","C6/8","C6/8","C6","D6","A5","0","0","0/2","A5/1","G5/1","F5","G5","A5","C6","A5","G5","G5","0","F5","G5","A5","C6","A5","G5","0","0","F5","C#5","F5","A5","A5","0","0","0","0","0","0","0","0","0","0","0"]),this.track1.addPattern(a);let n=new l;n.stopOnNext=!0,n.addPattern(e,["F5","G5","A5","C6"]),n.addPattern(e,["F5[volume=.25]/1","A5[volume=.3]/1","D6[volume=.4]/6","D6/8","D6/8","D6","E6","D6"]),n.addPattern(null,[],2),n.addNote(e,"0/2"),n.addPattern(e,["D6/1[volume=.25]","E6/1[volume=.25]","D6[volume=.25]","C6","C6","A5","C6/8","C6/8","C6/8","C6","D6","A5","0","0","0/2","A5/1","G5/1","F5","G5","A5","C6","A5","G5","G5","0","F5","G5","A5","C6","A5","G5","0","0","F5","C#5","F5","G5","F5","0","0","0","0","0","0","0","0","0","0","0"]),this.track1.addPattern(n)}setTrack2(){let t={delayTime:.8,wet:.25,feedback:.2},e=this.trigon.triangle({env:{attack:0,decay:.01,hold:.5,release:1},delay:t,volume:.5}),a=this.trigon.triangle({env:{attack:0,decay:.01,hold:.3,release:.8},delay:t,volume:.3}),n=new l;n.addPattern(e,["0","0","0","0"]),n.addPattern(e,["A#3/32","A#3/32","A3/32","D4/16","C4/16","B3/32","B3/32"]),n.addPattern(a,["F3","C4","F4+D4","0","0","0","0","0"]),n.addPattern(a,["C3","G3","G4+D4","0","0","0","0","0"]),n.addPattern(e,["A#3/32","A#3/32","A3/32","D4/16","C4/16","B3/32","B3/32"]),n.addPattern(a,["F3","C4","F4+D4","0","0","0","0","0"]),n.addPattern(a,["F3","C4","F4+D4","0","0","0","0","0"]),this.track2.addPattern(n)}setTrack3(){let t=this.trigon.square({filter:{type:"lowpass",frequency:9500,q:1},env:{attack:0,decay:.01,hold:.2,release:.3},delay:{delayTime:.8,wet:.15,feedback:.2},volume:.1}),e=new l,a=new l;a.addPattern(t,["D5[panning]/2","A4/2","G4/2","F4/2","D4/2","F4/2","G4/2","A4/2"]),a.addPattern(t,["D5/2","A4/2","G4/2","F4/2","D4/2","F4/2","G4/2","A4/2"]),a.addPattern(t,["D5/2","A4/2","G4/2","F4/2","D4/2","E4/2","G4/2","A4/2"]),a.addPattern(t,["D5/2","A4/2","G4/2","E4/2","C5/2","A4/2","G4/2","E4/2"]),a.addPattern(t,["C5/2","A4/2","G4/2","E4/2","C4/2","E4/2","G4/2","A4/2"]),a.addPattern(t,["C5/2","A4/2","G4/2","E4/2","C4/2","E4/2","G4/2","A4/2"]),a.addPattern(t,["C4/2","E4/2","G4/2","F5/2","A5/2","D6/2","F6/2","A6/2","D7","0","0","0"]),e.addPattern(a),this.track3.addPattern(e,null,68)}create(){this.setTrack1(),this.setTrack2(),this.setTrack3(),this.trigon.setCreate(()=>{this.trigon.addTrack(this.track1),this.trigon.addTrack(this.track2),this.trigon.addTrack(this.track3)})}}},{name:"黎月BGM2 - HoyoMix",song:class{constructor(){this.trigon=new d,this.trigon.speed=1,this.trigon.setBpm(165),this.track1=new l("track1",4),this.track2=new l("track2",4),this.track3=new l("track3",4),this.track4=new l("track4",4),this.track_drum=new l("track_drum",4)}setTrack1(){let t={attack:0,decay:.01,hold:.1,release:.2},e={delayTime:.4,wet:.1,feedback:.2},a=this.trigon.square({filter:{type:"lowpass",frequency:5e3,q:1},env:t,delay:e,volume:.2,panning:.8}),n=this.trigon.square({filter:{type:"lowpass",frequency:5e3,q:1},env:t,delay:e,volume:.2,detune:20,panning:-.8}),i=this.trigon.groupSource([a,n],{volume:.5}),s=new l("s1",2);s.addPattern(i,["G3","0","A3","G4","0","E4","D4","0","C4","0","0","A3","G3","0","A3","G4","0","E4","0","0","0","0","0","0"]);let o=new l("c1",2);o.addPattern(i,["G3","0","A3","G4","0","E4","D4","0","C4","0","0","A3","G3","0","A3","G4","0","E4","D4","0","0","C4","0","0"]),s.addPattern(o),s.addPattern(o),s.addPattern(o),s.addPattern(o),this.track1.addPattern(s);let r=new l("c1",2);r.addPattern(i,["A3","0","D4","E4","0","G4","E4","0","D4","0","0","0","A3","0","D4","E4","0","G4","E4","0","D4","0","0","0","G#3","C4","D4","E4","0","G4","E4","0","D4","0","0","0","G#3","C4","D4","E4","0","G4","E4","0","D4","0","0","0","G3","C4","D4","E4","0","G4","E4","0","D4","0","0","0","G3","C4","D4","E4","0","G4","E4","0","D4","0","0","0","F#3","A3","D4","E4","0","G4","E4","0","D4","0","0","0","F#3","A3","D4","E4","0","G4","E4","0","D4","0","0","0"]);let d=new l("s1",2);d.addPattern(r);let u=new l("c3",2);u.addPattern(i,["E4","0","F#4","G#4","0","B4","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","B4","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","B4","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","D#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","D#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","C#5","G#4","0","F#4","0","0","0","E4","0","F#4","G#4","0","D#5","G#4","0","F#4","0","0","0"]),d.addPattern(u),this.track1.addPattern(d)}setTrack2(){this.track2.stopOnNext=!0;let t=this.trigon.triangle({env:{attack:.01,decay:.03,hold:2,release:.01},volume:.2}),e=new l("bass_1",2);e.addNote(t,"0",23),e.addPattern(t,["C2","0","C2","0","C2","0","C2","0","0","C2","0","0","C2","0","C2","0","C2","0","C2","0","0","C2","0","0"]),e.addPattern(t,["D2","0","D2","0","D2","0","D2","0","0","D2","0","0","D2","0","D2","0","D2","0","D2","0","0","D2","0","0"]),e.addPattern(t,["E2","0","E2","0","E2","0","E2","0","0","E2","0","0","E2","0","E2","0","E2","0","E2","0","0","E2","0","0"]),e.addPattern(t,["F2","0","F2","0","F2","0","F2","0","0","F2","0","0","F2","0","F2","0","F2","0","F2","0","0","F2","0","0"]);let a=new l("bass_1",2);a.addPattern(t,["A2","0","M","A2","0","M","A2","0","M","A2","0","M","A2","0","M","A2","0","M","A2","0","M","A2","0","M"]),a.addPattern(t,["G#2","0","M","G#2","0","M","G#2","0","M","G#2","0","M","G#2","0","M","G#2","0","M","G#2","0","M","G#2","0","M"]),a.addPattern(t,["G2","0","M","G2","0","M","G2","0","M","G2","0","M","G2","0","M","G2","0","M","G2","0","M","G2","0","M"]),a.addPattern(t,["F#2","0","M","F#2","0","M","F#2","0","M","F#2","0","M","F#2","0","M","F#2","0","M","F#2","0","M","F#2","0","M"]),a.addPattern(t,["E2","0","0","0","0","0","E2","0","0","0","0","0","E2","0","0","0","0","0","B2","0","0","0","0","0","G#2","0","0","0","0","0","G#2","0","0","0","0","0","G#2","0","0","0","0","0","C#3","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","B2","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","B2","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","E3","0","0","0","0","0","B2","0","0","0","0","0"]),this.track2.addPattern(e),this.track2.addPattern(a)}setTrack3(){this.track3.stopOnNext=!0;let t=this.trigon.triangle({env:{attack:0,decay:.01,hold:.1,release:.2},delay:{delayTime:.4,wet:.1,feedback:.2},volume:.2}),e=new l("s1",2);e.addNote(t,"0",23),e.addPattern(t,this.getRythm1("C4")),e.addPattern(t,this.getRythm1("D4")),e.addPattern(t,this.getRythm1("E4")),e.addPattern(t,this.getRythm1("F4")),e.addPattern(t,this.getRythm1("-")),e.addPattern(t,this.getRythm1("-")),e.addPattern(t,this.getRythm1("-")),e.addPattern(t,this.getRythm1("-"));let a=new l("s2",2);a.addPattern(t,["E3","0","0","0","0","0","F#3","0","0","0","0","0","G#3","0","0","0","0","0","B3","0","0","0","0","0"]),a.addPattern(t,["E3","0","0","0","0","0","F#3","0","0","0","0","0","G#3","0","0","0","0","0","B3","0","0","0","0","0"]),a.addPattern(t,["E3","0","0","0","0","0","F#3","0","0","0","0","0","G#3","0","0","0","0","0","B3","0","0","0","0","0"]),a.addPattern(t,["E3","0","0","0","0","0","F#3","0","0","0","0","0","G#3","0","0","0","0","0","B3","0","0","0","0","0"]),a.addPattern(t,["E4","0","0","0","0","0","F#4","0","0","0","0","0","G#4","0","0","0","0","0","B4","0","0","0","0","0"]),a.addPattern(t,["E4","0","0","0","0","0","F#4","0","0","0","0","0","G#4","0","0","0","0","0","B4","0","0","0","0","0"]),this.track3.addPattern(e),this.track3.addPattern(a)}setTrack4(){this.track4.stopOnNext=!0;let t=this.trigon.triangle({env:{attack:.01,decay:.01,hold:.5,release:.2},delay:{delayTime:.8,wet:.15,feedback:.05},volume:.4}),e=this.trigon.square({env:{attack:.01,decay:.01,hold:.5,release:.2},delay:{delayTime:.8,wet:.15,feedback:.05},volume:.2}),a=this.trigon.groupSource([t,e],{volume:.5}),n=new l("s1",2);n.addNote(a,"0",23),n.addPattern(a,["0","0","0","0","0","0","0","0","E5","G5","0","M","0","0","0","0","0","0","0","0","D5","E5","0","0"]),n.addPattern(a,["0","0","0","0","0","0","0","0","E5","G5","0","M","0","0","0","0","0","0","0","0","D5","E5","C5","A5"]),n.addPattern(a,["G5","0","0","0","0","0","0","0","G4/1","E5/1","G5","0","M","0","0","0","0","0","0","D6","B5","A5","G5","E5","A5"]),n.addPattern(a,["G5","0","0","G5","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0","0"]);let i=new l("s1",2);i.addPattern(a,["E6","0","0","0","0","0","E6","0","0","0","D6","C6","B5","C6","E5","A5","C5","E5","B4","C5","E4","0","0","A5","G5","0","0","G5","0","0","G#4","0","0","G#4","0","0","G#4","0","0","G#4","0","0","0","0","0","0","0","0","0","0","0","B6","0","0","C7","0","0","E7","0","0","B7","0","A7","0","C7","0","E7","0","0","E4","D4","C4","A3","0","0","E4","D5","E5","A5","0","0","0","0","E4","A4","0","0","A4","0","0","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","E5","0","0","0","0","0","F#5","0","0","0","0","0","G#5","0","0","0","0","0","B5","0","0","0","0","0","E5","0","0","0","0","0","F#5","0","0","0","0","0","G#5","0","0","0","0","0","B5","0","0","0","0","0","E5","0","0","0","0","0","F#5","0","0","0","0","0","G#5","0","0","0","0","0","B5","0","0","0","0","0","E5","0","0","0","0","0","F#5","0","0","0","0","0","G#5","0","0","0","0","0","B5","0","0","0","0","0"]),this.track4.addPattern(n),this.track4.addPattern(i)}set_track_drum(){let t=this.trigon.baseDrum({volume:.8}),e=new l("dr",2);e.addPattern(t,["-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","-","kick","kick","-","-"]);let a=new l("dr",2);a.addPattern(t,["kick+ohh3","chh3","chh3","chh3","chh3","kick+chh3","snare+chh3","chh3","chh3","snare+chh3","chh3","chh3","kick+chh3","chh3","chh3","chh3","chh3","kick+chh3","snare+chh3","chh3","chh3","chh3","chh3","snare+chh3"]);let n=new l("dr",2);n.addPattern(t,["kick+ohh3","chh3","chh3","chh3","chh3","kick+chh3","snare+chh3","chh3","chh3","snare+chh3","chh3","chh3","kick+chh3","chh3","chh3","chh3","chh3","kick+chh3","snare+chh3","chh3","chh3","snare+chh3","snare+chh3","snare+chh3"]);let i=new l;i.addPattern(e),i.addPattern(a),i.addPattern(a),i.addPattern(a),i.addPattern(n);let s=new l("dr",2),o=new l("dr",2);o.addPattern(t,["kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","chh3","kick+chh3","chh3","ohh3"]),s.addPattern(o),s.addPattern(o),s.addPattern(o),s.addPattern(o),this.track_drum.addPattern(i),this.track_drum.addPattern(s)}getRythm1(t){return[t,"0",t,t,"0",t,t,"0",t,t,"0",t,t,"0",t,t,"0",t,t,"0","0",t,"0","0"]}create(){this.setTrack1(),this.setTrack2(),this.setTrack3(),this.setTrack4(),this.set_track_drum(),this.trigon.setCreate(()=>{this.trigon.addTrack(this.track1),this.trigon.addTrack(this.track2),this.trigon.addTrack(this.track3),this.trigon.addTrack(this.track4),this.trigon.addTrack(this.track_drum)})}}}],b=document.querySelector("#list");b.innerHTML="";for(let t=0;t<g.length;t++){let e=document.createElement("a");e.setAttribute("name","song"),e.setAttribute("href","javascript:void(0);");let a=t;e.onclick=()=>{document.querySelector("#control").innerHTML="",document.querySelector("h3").innerText=g[a].name;var t=new g[a].song;t.create(),y=t.trigon,t.customDom&&t.customDom(document.querySelector("#control"))},e.innerHTML=g[t].name;let n=document.createElement("li");n.appendChild(e),b.appendChild(n)}let k=function(t){for(var e=window.location.search.substring(1).split("&"),a=0;a<e.length;a++){var n=e[a].split("=");if(n[0]==t)return n[1]}return!1}("id");k&&document.querySelectorAll("a[name='song']")[parseInt(k)-1].click()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,