!function(e){var t={};function a(n){if(t[n])return t[n].exports;var i=t[n]={i:n,l:!1,exports:{}};return e[n].call(i.exports,i,i.exports,a),i.l=!0,i.exports}a.m=e,a.c=t,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var i in e)a.d(n,i,function(t){return e[t]}.bind(null,i));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="",a(a.s=10)}([function(e,t,a){"use strict";a.d(t,"o",(function(){return l})),a.d(t,"n",(function(){return c})),a.d(t,"i",(function(){return r})),a.d(t,"p",(function(){return f})),a.d(t,"m",(function(){return v})),a.d(t,"F",(function(){return A})),a.d(t,"c",(function(){return m})),a.d(t,"d",(function(){return y})),a.d(t,"u",(function(){return b})),a.d(t,"h",(function(){return g})),a.d(t,"g",(function(){return w})),a.d(t,"f",(function(){return k})),a.d(t,"e",(function(){return P})),a.d(t,"b",(function(){return N})),a.d(t,"a",(function(){return I})),a.d(t,"l",(function(){return _})),a.d(t,"q",(function(){return T})),a.d(t,"y",(function(){return G})),a.d(t,"A",(function(){return S})),a.d(t,"E",(function(){return j})),a.d(t,"C",(function(){return B})),a.d(t,"v",(function(){return R})),a.d(t,"D",(function(){return Y})),a.d(t,"s",(function(){return O})),a.d(t,"t",(function(){return C})),a.d(t,"w",(function(){return D})),a.d(t,"x",(function(){return F})),a.d(t,"B",(function(){return L})),a.d(t,"k",(function(){return E})),a.d(t,"r",(function(){return x})),a.d(t,"z",(function(){return q})),a.d(t,"j",(function(){return M}));var n=a(3),i=a.n(n),s=a(5),o=a(1);let r,u=window.AudioContext||window.webkitAudioContext,l={verbosity:0,suppressedLogs:0},c=function(e,t){t=t||1,l.verbosity>=t?console.log(e):l.suppressedLogs++},d=document.querySelector("a-scene");d&&d.audioListener&&d.audioListener.context?(r=d.audioListener.context,c("An A-Frame scene has been detected.")):r=new u;let h=function(){c("unlock",2),"suspended"===r.state?(c("suspended",2),r.resume()):"running"===r.state&&(c("The audio context is running.",2),c(r,2),window.removeEventListener("mousemove",h),window.removeEventListener("touchstart",h),window.removeEventListener("touchend",h))};window.addEventListener("mousemove",h),window.addEventListener("touchstart",h),window.addEventListener("touchend",h);let p=function(e){if(e.navigator.mediaDevices&&e.navigator.mediaDevices.getUserMedia)return e.navigator.mediaDevices.getUserMedia.bind(e.navigator.mediaDevices);let t=e.navigator.getUserMedia||e.navigator.webkitGetUserMedia||e.navigator.mozGetUserMedia;return t?function(a){return new Promise((function(n,i){t.call(e.navigator,a,n,i)}))}:function(){throw"getUserMedia is unsupported"}}(window);c(p?"Your browser supports getUserMedia.":"Your browser does not support getUserMedia.");let f=function(){Math.seed=6,Math.seededRandom=function(e,t){return e=e||1,t=t||0,Math.seed=(9301*Math.seed+49297)%233280,t+Math.seed/233280*(e-t)};for(var e=2*r.sampleRate,t=r.createBuffer(1,e,r.sampleRate),a=t.getChannelData(0),n=0;n<e;n++)a[n]=2*Math.seededRandom()-1;return t}(),v=function(e){return"[object Array]"===Object.prototype.toString.call(e)},A=function(e,t){return null==e?t:e},m=function(e,t){e.env={attack:t.env?A(t.env.attack,0):0,decay:t.env?A(t.env.decay,0):0,sustain:t.env?A(t.env.sustain,1):1,hold:t.env?A(t.env.hold,3.14159):3.14159,release:t.env?A(t.env.release,0):0},e.defaultEnv={attack:t.env?A(t.env.attack,0):0,decay:t.env?A(t.env.decay,0):0,sustain:t.env?A(t.env.sustain,1):1,hold:t.env?A(t.env.hold,3.14159):3.14159,release:t.env?A(t.env.release,0):0},e.userSetHold=!(!t.env||!t.env.hold)},y=function(e,t){t.filter?v(t.filter)?e.filter=t.filter.map((function(e){return{type:e.type||"lowpass",frequency:e.frequency||600,q:e.q||1,env:e.env||null}})):e.filter=[{type:t.filter.type||"lowpass",frequency:t.filter.frequency||600,q:t.filter.q||1,env:t.filter.env||null}]:t.filter=null},b=function(e,t){var a=new XMLHttpRequest;a.open("GET",e.source,!0),a.responseType="arraybuffer",e.playable--,a.onload=function(){r.decodeAudioData(a.response,(function(a){e.decodedBuffer=a,3.14159===e.env.hold&&(e.defaultEnv.hold=e.decodedBuffer.duration*(1/e.rate),e.env.hold=e.decodedBuffer.duration*(1/e.rate)),e.duration=1e3*e.env.hold,t&&t(e),e.playable++,e.playOnLoad&&e.play(e.playOnLoadArg)}))},a.send()},g=function(e,t){t.vibrato?e.vibrato={shape:A(t.vibrato.shape,"sine"),speed:A(t.vibrato.speed,1),magnitude:A(t.vibrato.magnitude,5),attack:A(t.vibrato.attack,0)}:e.vibrato=null},w=function(e,t){t.tremolo?e.tremolo={shape:A(t.tremolo.shape,"sine"),speed:A(t.tremolo.speed,1),magnitude:A(t.tremolo.magnitude,5),attack:A(t.tremolo.attack,1)}:e.tremolo=null},k=function(e,t){if(t.reverb){e.reverb={wet:A(t.reverb.wet,1)};var a=t.reverb.impulse||"https://frivolous.biz/audio/widehall.wav",n=new XMLHttpRequest;n.open("GET",a,!0),n.responseType="arraybuffer",e.playable--,n.onload=function(){r.decodeAudioData(n.response,(function(a){e.reverb.buffer=a,e.playable++,e.playOnLoad&&e.play(e.playOnLoadArg),e instanceof s.a&&e.setUp(t),"mic"===e.source&&e.reverb&&e.reverb.buffer&&e.reverb.node&&!e.reverb.node.buffer&&(e.reverb.node.convolver.buffer=e.reverb.buffer)}))},n.send()}else e.reverb=null},P=function(e,t){"panning"in t?(e.panning={location:t.panning},"number"==typeof t.panning?e.panning.type="stereo":(e.panning.type="3d",e.panning.panningModel=t.panningModel||"equalpower",e.panning.distanceModel=t.distanceModel,e.panning.maxDistance=t.maxDistance,e.panning.rolloffFactor=t.rolloffFactor,e.panning.refDistance=t.refDistance,e.panning.coneInnerAngle=t.coneInnerAngle,e.panning.coneOuterAngle=t.coneOuterAngle,e.panning.coneOuterGain=t.coneOuterGain)):e.panning={location:0,type:"stereo"},"stereo"!==e.panning.type||r.createStereoPanner||(c("Your browser does not support stereo panning. Falling back to 3D panning."),e.panning={location:[0,0,0],type:"3d",panningModel:"equalpower"})},N=function(e,t){t.delay?e.delay={delayTime:A(t.delay.delayTime,.5),maxDelayTime:A(t.delay.maxDelayTime,2),feedback:A(t.delay.feedback,.25),wet:A(t.delay.wet,.25)}:e.delay=null},T={micConsent:!1},_=function(e,t){return e.nodes=[],e.mediaStreamSource=null,e.gain=null,p({audio:!0,video:!1}).then((function(a){return e.mediaStreamSource=r.createMediaStreamSource(a),T.micConsent=!0,G(e,t),e})).catch((function(e){c("Error setting up microphone input: ",e)}))},G=function(e,t){e.nodes=[],e.gain=r.createGain(),e.gain.gain.value=A(t.volume,e.volume),e.nodes.push(e.mediaStreamSource),e.nodes.push(e.gain),(e.filter||t.filter)&&M(e,t),(e.reverb||t.reverb)&&L(e,t),P(e,t),S(e,t),(e.delay||t.delay)&&R(e,t),Y(e,t),e.setUpExternalFxOnPlay(t,r)},E=function(e,t){e.filter.forEach((function(e,a){e.node.frequency.linearRampToValueAtTime(e.frequency,t.exactTime),e.node.frequency.linearRampToValueAtTime(e.env.frequency,t.exactTime+e.env.attack)}))},x=function(e,t){let a,n=t.loop||t.loop;a=-1!==e.env.hold&&(!n||e.userSetHold||t.env&&t.env.hold)?e.env.hold:999,e.gain[0].gain.linearRampToValueAtTime(1e-4,t.exactTime),e.gain[0].gain.linearRampToValueAtTime(e.volume,t.exactTime+e.env.attack+1e-5),e.gain[0].gain.linearRampToValueAtTime(e.volume*e.env.sustain,t.exactTime+e.env.attack+e.env.decay+2e-5),e.gain[0].gain.linearRampToValueAtTime(e.volume*e.env.sustain,t.exactTime+e.env.attack+e.env.decay+a+3e-5),e.gain[0].gain.linearRampToValueAtTime(1e-4,t.exactTime+e.env.attack+e.env.decay+a+e.env.release+4e-5),e.soundSource.start(t.exactTime,t.offset),e.soundSource.playbackRate||e.soundSource.stop(t.exactTime+e.env.attack+e.env.decay+a+e.env.release+5e-5)},O=function(e,t){let a,n=t&&t.destination||e.destination;for(let t=1;t<e.nodes.length;t++){let a,n;a="custom"===e.nodes[t-1].interface?e.nodes[t-1].output:e.nodes[t-1],n="custom"===e.nodes[t].interface?e.nodes[t].input:e.nodes[t],a.connect(n)}a="custom"===e.nodes[e.nodes.length-1].interface?e.nodes[e.nodes.length-1].output:e.nodes[e.nodes.length-1],a.connect(n)},C=function(e,t){let a;for(let t=1;t<e.length;t++){let a,n;a="custom"===e[t-1].interface?e[t-1].output:e[t-1],n="custom"===e[t].interface?e[t].input:e[t],a.disconnect(n)}a="custom"===e[e.length-1].interface?e[e.length-1].output:e[e.length-1],a.disconnect(t)},q=function(e,t){t=t||{},e.soundSource=r.createOscillator(),e.soundSource.type=e.source,t.pitch?t.pitch in o.a?e.soundSource.frequency.value=o.a[t.pitch]:e.soundSource.frequency.value=t.pitch:e.soundSource.frequency.value=e.pitch},D=function(e,t){t&&t.env?(e.env.attack=A(t.env.attack,e.defaultEnv.attack),e.env.decay=A(t.env.decay,e.defaultEnv.decay),e.env.sustain=A(t.env.sustain,e.defaultEnv.sustain),e.env.hold=A(t.env.hold,e.defaultEnv.hold),e.env.release=A(t.env.release,e.defaultEnv.release)):e.env={attack:e.defaultEnv.attack,decay:e.defaultEnv.decay,sustain:e.defaultEnv.sustain,hold:e.defaultEnv.hold,release:e.defaultEnv.release}},M=function(e,t){t.filter&&!v(t.filter)&&(t.filter=[t.filter]),e.filter.forEach((function(a,n){a.node=r.createBiquadFilter(),a.node.type=a.type,a.node.frequency.value=t.filter&&t.filter[n]&&t.filter[n].frequency||a.frequency,a.node.Q.value=t.filter&&t.filter[n]&&t.filter[n].q||a.q,(t.filter&&t.filter[n].env||e.filter[n].env)&&"mic"!==e.source&&(a.env={attack:t.filter&&t.filter[n].env&&t.filter[n].env.attack||e.filter[n].env.attack,frequency:t.filter&&t.filter[n].env&&t.filter[n].env.frequency||e.filter[n].env.frequency}),e.nodes.push(a.node)}))},F=function(e,t){t&&t.filter&&e.filter?(v(t.filter)||(t.filter=[t.filter]),M(e,t)):e.filter&&M(e,e)},L=function(e,t){var a={interface:"custom",input:r.createGain(),convolver:r.createConvolver(),wet:r.createGain(),output:r.createGain()};a.convolver.buffer=e.reverb.buffer,a.wet.gain.value=e.reverb.wet,a.input.connect(a.convolver),a.input.connect(a.output),a.convolver.connect(a.wet),a.wet.connect(a.output),e.reverb.node=a,e.nodes.push(e.reverb.node)},S=function(e,t){var a=t&&t.panning;void 0===a&&(a=e.panning.location),"number"==typeof a&&r.createStereoPanner?(e.panning.node=r.createStereoPanner(),e.panning.node.pan.value=a,e.panning.type="stereo"):(e.panning.node=r.createPanner(),"number"==typeof a?e.panning.node.setPosition(a,0,0):e.panning.node.setPosition(a[0],a[1],a[2]),e.panning.node.panningModel=t.panningModel||e.panningModel||"equalpower",e.panning.type="3d",e.panning.node.distanceModel=t.distanceModel||e.distanceModel||e.panning.node.distanceModel,e.panning.node.maxDistance=t.maxDistance||e.maxDistance||e.panning.node.maxDistance,e.panning.node.rolloffFactor=t.rolloffFactor||e.rolloffFactor||e.panning.node.rolloffFactor,e.panning.node.refDistance=t.refDistance||e.refDistance||e.panning.node.refDistance,e.panning.node.coneInnerAngle=t.coneInnerAngle||e.coneInnerAngle||e.panning.node.coneInnerAngle,e.panning.node.coneOuterAngle=t.coneOuterAngle||e.coneOuterAngle||e.panning.node.coneOuterAngle,e.panning.node.coneOuterGain=t.coneOuterGain||e.coneOuterGain||e.panning.node.coneOuterGain),e.nodes.push(e.panning.node)},j=function(e,t,a){e.vibrato.wad=new a({source:e.vibrato.shape,pitch:e.vibrato.speed,volume:e.vibrato.magnitude,env:{attack:e.vibrato.attack},destination:e.soundSource.frequency}),e.vibrato.wad.play()},B=function(e,t,a){e.tremolo.wad=new a({source:e.tremolo.shape,pitch:e.tremolo.speed,volume:e.tremolo.magnitude,env:{attack:e.tremolo.attack,hold:10},destination:e.gain[0].gain}),e.tremolo.wad.play()},R=function(e,t){if(e.delay){t.delay||(t.delay={});var a={interface:"custom",input:r.createGain(),output:r.createGain(),delayNode:r.createDelay(e.delay.maxDelayTime),feedbackNode:r.createGain(),wetNode:r.createGain()};a.delayNode.delayTime.value=A(t.delay.delayTime,e.delay.delayTime),a.feedbackNode.gain.value=A(t.delay.feedback,e.delay.feedback),a.wetNode.gain.value=A(t.delay.wet,e.delay.wet),a.input.connect(a.delayNode),a.input.connect(a.output),a.delayNode.connect(a.feedbackNode),a.delayNode.connect(a.wetNode),a.feedbackNode.connect(a.delayNode),a.wetNode.connect(a.output),e.delay.delayNode=a,e.nodes.push(a)}},I=function(e,t){e.compressor=r.createDynamicsCompressor(),e.compressor.attack.value=A(t.compressor.attack,e.compressor.attack.value),e.compressor.knee.value=A(t.compressor.knee,e.compressor.knee.value),e.compressor.ratio.value=A(t.compressor.ratio,e.compressor.ratio.value),e.compressor.release.value=A(t.compressor.release,e.compressor.release.value),e.compressor.threshold.value=A(t.compressor.threshold,e.compressor.threshold.value),e.nodes.push(e.compressor)},V=new i.a(r),Y=function(e,t){if(!e.tuna&&!t.tuna)return;let a={};if(e.tuna)for(let t in e.tuna)a[t]=e.tuna[t];if(t.tuna)for(let e in t.tuna)a[e]=t.tuna[e];for(let t in a){let n=new V[t](a[t]);e.nodes.push(n)}}},function(e,t,a){"use strict";a.d(t,"a",(function(){return n})),a.d(t,"b",(function(){return i}));let n={A0:27.5,"A#0":29.1352,Bb0:29.1352,B0:30.8677,"B#0":32.7032,Cb1:30.8677,C1:32.7032,"C#1":34.6478,Db1:34.6478,D1:36.7081,"D#1":38.8909,Eb1:38.8909,E1:41.2034,Fb1:41.2034,"E#1":43.6535,F1:43.6535,"F#1":46.2493,Gb1:46.2493,G1:48.9994,"G#1":51.9131,Ab1:51.9131,A1:55,"A#1":58.2705,Bb1:58.2705,B1:61.7354,Cb2:61.7354,"B#1":65.4064,C2:65.4064,"C#2":69.2957,Db2:69.2957,D2:73.4162,"D#2":77.7817,Eb2:77.7817,E2:82.4069,Fb2:82.4069,"E#2":87.3071,F2:87.3071,"F#2":92.4986,Gb2:92.4986,G2:97.9989,"G#2":103.826,Ab2:103.826,A2:110,"A#2":116.541,Bb2:116.541,B2:123.471,Cb3:123.471,"B#2":130.813,C3:130.813,"C#3":138.591,Db3:138.591,D3:146.832,"D#3":155.563,Eb3:155.563,E3:164.814,Fb3:164.814,"E#3":174.614,F3:174.614,"F#3":184.997,Gb3:184.997,G3:195.998,"G#3":207.652,Ab3:207.652,A3:220,"A#3":233.082,Bb3:233.082,B3:246.942,Cb4:246.942,"B#3":261.626,C4:261.626,"C#4":277.183,Db4:277.183,D4:293.665,"D#4":311.127,Eb4:311.127,E4:329.628,Fb4:329.628,"E#4":349.228,F4:349.228,"F#4":369.994,Gb4:369.994,G4:391.995,"G#4":415.305,Ab4:415.305,A4:440,"A#4":466.164,Bb4:466.164,B4:493.883,Cb5:493.883,"B#4":523.251,C5:523.251,"C#5":554.365,Db5:554.365,D5:587.33,"D#5":622.254,Eb5:622.254,E5:659.255,Fb5:659.255,"E#5":698.456,F5:698.456,"F#5":739.989,Gb5:739.989,G5:783.991,"G#5":830.609,Ab5:830.609,A5:880,"A#5":932.328,Bb5:932.328,B5:987.767,Cb6:987.767,"B#5":1046.5,C6:1046.5,"C#6":1108.73,Db6:1108.73,D6:1174.66,"D#6":1244.51,Eb6:1244.51,Fb6:1318.51,E6:1318.51,"E#6":1396.91,F6:1396.91,"F#6":1479.98,Gb6:1479.98,G6:1567.98,"G#6":1661.22,Ab6:1661.22,A6:1760,"A#6":1864.66,Bb6:1864.66,B6:1975.53,Cb7:1975.53,"B#6":2093,C7:2093,"C#7":2217.46,Db7:2217.46,D7:2349.32,"D#7":2489.02,Eb7:2489.02,E7:2637.02,Fb7:2637.02,"E#7":2793.83,F7:2793.83,"F#7":2959.96,Gb7:2959.96,G7:3135.96,"G#7":3322.44,Ab7:3322.44,A7:3520,"A#7":3729.31,Bb7:3729.31,B7:3951.07,Cb8:3951.07,"B#7":4186.01,C8:4186.01},i=["C0","C#0","D0","D#0","E0","F0","F#0","G0","G#0","A0","A#0","B0","C1","C#1","D1","D#1","E1","F1","F#1","G1","G#1","A1","A#1","B1","C2","C#2","D2","D#2","E2","F2","F#2","G2","G#2","A2","A#2","B2","C3","C#3","D3","D#3","E3","F3","F#3","G3","G#3","A3","A#3","B3","C4","C#4","D4","D#4","E4","F4","F#4","G4","G#4","A4","A#4","B4","C5","C#5","D5","D#5","E5","F5","F#5","G5","G#5","A5","A#5","B5","C6","C#6","D6","D#6","E6","F6","F#6","G6","G#6","A6","A#6","B6","C7","C#7","D7","D#7","E7","F7","F#7","G7","G#7","A7","A#7","B7","C8"]},function(e,t,a){"use strict";(function(e){var n=a(6),i=a(5),s=a(7),o=a(1),r=a(4),u=a(8),l=a(0);let c=u.a;c.Poly=i.a,c.SoundIterator=function(e){return new n.a(e,c)},c.pitches=o.a,c.pitchesArray=o.b,c.midiMap=r.d,c.assignMidiMap=r.a,c.midiInstrument=r.c,c.midiInputs=r.b,c.presets=s.a,c.logs=l.o,e.exports&&(e.exports=c),t.a=c}).call(this,a(9)(e))},function(e,t,a){!function(){var t,a,n=function(e,t){e.value=t},i=Object.create(null,{activate:{writable:!0,value:function(e){e?(this.input.disconnect(),this.input.connect(this.activateNode),this.activateCallback&&this.activateCallback(e)):(this.input.disconnect(),this.input.connect(this.output))}},bypass:{get:function(){return this._bypass},set:function(e){this._lastBypassValue!==e&&(this._bypass=e,this.activate(!e),this._lastBypassValue=e)}},connect:{value:function(e){this.output.connect(e)}},disconnect:{value:function(e){this.output.disconnect(e)}},connectInOrder:{value:function(e){for(var t=e.length-1;t--;){if(!e[t].connect)return console.error("AudioNode.connectInOrder: TypeError: Not an AudioNode.",e[t]);e[t+1].input?e[t].connect(e[t+1].input):e[t].connect(e[t+1])}}},getDefaults:{value:function(){var e={};for(var t in this.defaults)e[t]=this.defaults[t].value;return e}},automate:{value:function(e,a,n,i){var s,o=i?~~(i/1e3):t.currentTime,r=n?~~(n/1e3):0,u=this.defaults[e],l=this[e];l?u.automatable?(n?(s="linearRampToValueAtTime",l.cancelScheduledValues(o),l.setValueAtTime(l.value,o)):s="setValueAtTime",l[s](a,r+o)):l=a:console.error("Invalid Property for "+this.name)}}}),s="float",o="boolean",r="int";function u(e){if(!(this instanceof u))return new u(e);var n="undefined"==typeof window?{}:window;if(n.AudioContext||(n.AudioContext=n.webkitAudioContext),e||(console.log("tuna.js: Missing audio context! Creating a new context for you."),e=n.AudioContext&&new n.AudioContext),!e)throw new Error("Tuna cannot initialize because this environment does not support web audio.");!function(e){if(!0===e.__connectified__)return;var t=e.createGain(),a=Object.getPrototypeOf(Object.getPrototypeOf(t)),n=a.connect;a.connect=function(){var e=arguments[0];return arguments[0]=i.isPrototypeOf?i.isPrototypeOf(e)?e.input:e:e.input||e,n.apply(this,arguments),e},e.__connectified__=!0}(e),t=e,a=this}function l(e){return Math.max(0,Math.round(100*Math.pow(2,e/6))/100)}function c(e,t){var a,n,i,s=0,o=0,r=0;return a=e.toExponential().match(/^.\.?(.*)e(.+)$/),s=parseInt(a[2],10)-(a[1]+"").length,a=t.toExponential().match(/^.\.?(.*)e(.+)$/),(i=parseInt(a[2],10)-(a[1]+"").length)>s&&(s=i),n=e%t,s<-100||s>20?(o=Math.round(Math.log(n)/Math.log(10)),(n/(r=Math.pow(10,o))).toFixed(o-s)*r):parseFloat(n.toFixed(-s))}function d(e){return 0===e?1:Math.abs(e)/e}function h(e){return(Math.exp(e)-Math.exp(-e))/(Math.exp(e)+Math.exp(-e))}function p(e,t){return void 0===e?t:e}e.exports?e.exports=u:window.define("Tuna",(function(){return u})),u.prototype.Bitcrusher=function(e){e||(e=this.getDefaults()),this.bufferSize=e.bufferSize||this.defaults.bufferSize.value,this.input=t.createGain(),this.activateNode=t.createGain(),this.processor=t.createScriptProcessor(this.bufferSize,1,1),this.output=t.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output);var a,n,i,s,o,r=0,u=0;this.processor.onaudioprocess=function(e){for(a=e.inputBuffer.getChannelData(0),n=e.outputBuffer.getChannelData(0),i=Math.pow(.5,this.bits),o=a.length,s=0;s<o;s++)(r+=this.normfreq)>=1&&(r-=1,u=i*Math.floor(a[s]/i+.5)),n[s]=u},this.bits=e.bits||this.defaults.bits.value,this.normfreq=p(e.normfreq,this.defaults.normfreq.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Bitcrusher.prototype=Object.create(i,{name:{value:"Bitcrusher"},defaults:{writable:!0,value:{bits:{value:4,min:1,max:16,automatable:!1,type:r},bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},normfreq:{value:.1,min:1e-4,max:1,automatable:!1,type:s}}},bits:{enumerable:!0,get:function(){return this.processor.bits},set:function(e){this.processor.bits=e}},normfreq:{enumerable:!0,get:function(){return this.processor.normfreq},set:function(e){this.processor.normfreq=e}}}),u.prototype.Cabinet=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.convolver=this.newConvolver(e.impulsePath||"../impulses/impulse_guitar.wav"),this.makeupNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.convolver.input),this.convolver.output.connect(this.makeupNode),this.makeupNode.connect(this.output),this.makeupNode.gain.value=p(e.makeupGain,this.defaults.makeupGain.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Cabinet.prototype=Object.create(i,{name:{value:"Cabinet"},defaults:{writable:!0,value:{makeupGain:{value:1,min:0,max:20,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(e){this.makeupNode.gain.setTargetAtTime(e,t.currentTime,.01)}},newConvolver:{value:function(e){return new a.Convolver({impulse:e,dryLevel:0,wetLevel:1})}}}),u.prototype.Chorus=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.attenuator=this.activateNode=t.createGain(),this.splitter=t.createChannelSplitter(2),this.delayL=t.createDelay(),this.delayR=t.createDelay(),this.feedbackGainNodeLR=t.createGain(),this.feedbackGainNodeRL=t.createGain(),this.merger=t.createChannelMerger(2),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.delayL.delayTime,callback:n}),this.lfoR=new a.LFO({target:this.delayR.delayTime,callback:n}),this.input.connect(this.attenuator),this.attenuator.connect(this.output),this.attenuator.connect(this.splitter),this.splitter.connect(this.delayL,0),this.splitter.connect(this.delayR,1),this.delayL.connect(this.feedbackGainNodeLR),this.delayR.connect(this.feedbackGainNodeRL),this.feedbackGainNodeLR.connect(this.delayR),this.feedbackGainNodeRL.connect(this.delayL),this.delayL.connect(this.merger,0,0),this.delayR.connect(this.merger,0,1),this.merger.connect(this.output),this.feedback=p(e.feedback,this.defaults.feedback.value),this.rate=p(e.rate,this.defaults.rate.value),this.delay=p(e.delay,this.defaults.delay.value),this.depth=p(e.depth,this.defaults.depth.value),this.lfoR.phase=Math.PI/2,this.attenuator.gain.value=.6934,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Chorus.prototype=Object.create(i,{name:{value:"Chorus"},defaults:{writable:!0,value:{feedback:{value:.4,min:0,max:.95,automatable:!1,type:s},delay:{value:.0045,min:0,max:1,automatable:!1,type:s},depth:{value:.7,min:0,max:1,automatable:!1,type:s},rate:{value:1.5,min:0,max:8,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},delay:{enumerable:!0,get:function(){return this._delay},set:function(e){this._delay=2*Math.pow(10,e)*2e-4,this.lfoL.offset=this._delay,this.lfoR.offset=this._delay,this._depth=this._depth}},depth:{enumerable:!0,get:function(){return this._depth},set:function(e){this._depth=e,this.lfoL.oscillation=this._depth*this._delay,this.lfoR.oscillation=this._depth*this._delay}},feedback:{enumerable:!0,get:function(){return this._feedback},set:function(e){this._feedback=e,this.feedbackGainNodeLR.gain.setTargetAtTime(this._feedback,t.currentTime,.01),this.feedbackGainNodeRL.gain.setTargetAtTime(this._feedback,t.currentTime,.01)}},rate:{enumerable:!0,get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}}}),u.prototype.Compressor=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.compNode=this.activateNode=t.createDynamicsCompressor(),this.makeupNode=t.createGain(),this.output=t.createGain(),this.compNode.connect(this.makeupNode),this.makeupNode.connect(this.output),this.automakeup=p(e.automakeup,this.defaults.automakeup.value),this.automakeup?this.makeupNode.gain.value=l(this.computeMakeup()):this.makeupNode.gain.value=l(p(e.makeupGain,this.defaults.makeupGain.value)),this.threshold=p(e.threshold,this.defaults.threshold.value),this.release=p(e.release,this.defaults.release.value),this.attack=p(e.attack,this.defaults.attack.value),this.ratio=e.ratio||this.defaults.ratio.value,this.knee=p(e.knee,this.defaults.knee.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Compressor.prototype=Object.create(i,{name:{value:"Compressor"},defaults:{writable:!0,value:{threshold:{value:-20,min:-60,max:0,automatable:!0,type:s},release:{value:250,min:10,max:2e3,automatable:!0,type:s},makeupGain:{value:1,min:1,max:100,automatable:!0,type:s},attack:{value:1,min:0,max:1e3,automatable:!0,type:s},ratio:{value:4,min:1,max:50,automatable:!0,type:s},knee:{value:5,min:0,max:40,automatable:!0,type:s},automakeup:{value:!1,automatable:!1,type:o},bypass:{value:!1,automatable:!1,type:o}}},computeMakeup:{value:function(){var e=this.compNode;return-(e.threshold.value-e.threshold.value/e.ratio.value)/4}},automakeup:{enumerable:!0,get:function(){return this._automakeup},set:function(e){this._automakeup=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},threshold:{enumerable:!0,get:function(){return this.compNode.threshold},set:function(e){this.compNode.threshold.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},ratio:{enumerable:!0,get:function(){return this.compNode.ratio},set:function(e){this.compNode.ratio.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},knee:{enumerable:!0,get:function(){return this.compNode.knee},set:function(e){this.compNode.knee.value=e,this._automakeup&&(this.makeupGain=this.computeMakeup())}},attack:{enumerable:!0,get:function(){return this.compNode.attack},set:function(e){this.compNode.attack.value=e/1e3}},release:{enumerable:!0,get:function(){return this.compNode.release},set:function(e){this.compNode.release.value=e/1e3}},makeupGain:{enumerable:!0,get:function(){return this.makeupNode.gain},set:function(e){this.makeupNode.gain.setTargetAtTime(l(e),t.currentTime,.01)}}}),u.prototype.Convolver=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.convolver=t.createConvolver(),this.dry=t.createGain(),this.filterLow=t.createBiquadFilter(),this.filterHigh=t.createBiquadFilter(),this.wet=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.filterLow),this.activateNode.connect(this.dry),this.filterLow.connect(this.filterHigh),this.filterHigh.connect(this.convolver),this.convolver.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.dry.gain.value=p(e.dryLevel,this.defaults.dryLevel.value),this.wet.gain.value=p(e.wetLevel,this.defaults.wetLevel.value),this.filterHigh.frequency.value=e.highCut||this.defaults.highCut.value,this.filterLow.frequency.value=e.lowCut||this.defaults.lowCut.value,this.output.gain.value=p(e.level,this.defaults.level.value),this.filterHigh.type="lowpass",this.filterLow.type="highpass",this.buffer=e.impulse||"../impulses/ir_rev_short.wav",this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Convolver.prototype=Object.create(i,{name:{value:"Convolver"},defaults:{writable:!0,value:{highCut:{value:22050,min:20,max:22050,automatable:!0,type:s},lowCut:{value:20,min:20,max:22050,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},wetLevel:{value:1,min:0,max:1,automatable:!0,type:s},level:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},lowCut:{get:function(){return this.filterLow.frequency},set:function(e){this.filterLow.frequency.setTargetAtTime(e,t.currentTime,.01)}},highCut:{get:function(){return this.filterHigh.frequency},set:function(e){this.filterHigh.frequency.setTargetAtTime(e,t.currentTime,.01)}},level:{get:function(){return this.output.gain},set:function(e){this.output.gain.setTargetAtTime(e,t.currentTime,.01)}},dryLevel:{get:function(){return this.dry.gain},set:function(e){this.dry.gain.setTargetAtTime(e,t.currentTime,.01)}},wetLevel:{get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},buffer:{enumerable:!1,get:function(){return this.convolver.buffer},set:function(e){var a=this.convolver,n=new XMLHttpRequest;e?(n.open("GET",e,!0),n.responseType="arraybuffer",n.onreadystatechange=function(){4===n.readyState&&(n.status<300&&n.status>199||302===n.status)&&t.decodeAudioData(n.response,(function(e){a.buffer=e}),(function(e){e&&console.log("Tuna.Convolver.setBuffer: Error decoding data"+e)}))},n.send(null)):console.log("Tuna.Convolver.setBuffer: Missing impulse path!")}}}),u.prototype.Delay=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.dry=t.createGain(),this.wet=t.createGain(),this.filter=t.createBiquadFilter(),this.delay=t.createDelay(10),this.feedbackNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.delay),this.activateNode.connect(this.dry),this.delay.connect(this.filter),this.filter.connect(this.feedbackNode),this.feedbackNode.connect(this.delay),this.feedbackNode.connect(this.wet),this.wet.connect(this.output),this.dry.connect(this.output),this.delayTime=e.delayTime||this.defaults.delayTime.value,this.feedbackNode.gain.value=p(e.feedback,this.defaults.feedback.value),this.wet.gain.value=p(e.wetLevel,this.defaults.wetLevel.value),this.dry.gain.value=p(e.dryLevel,this.defaults.dryLevel.value),this.filter.frequency.value=e.cutoff||this.defaults.cutoff.value,this.filter.type="lowpass",this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Delay.prototype=Object.create(i,{name:{value:"Delay"},defaults:{writable:!0,value:{delayTime:{value:100,min:20,max:1e3,automatable:!1,type:s},feedback:{value:.45,min:0,max:.9,automatable:!0,type:s},cutoff:{value:2e4,min:20,max:2e4,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},dryLevel:{value:1,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}},delayTime:{enumerable:!0,get:function(){return this.delay.delayTime},set:function(e){this.delay.delayTime.value=e/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},dryLevel:{enumerable:!0,get:function(){return this.dry.gain},set:function(e){this.dry.gain.setTargetAtTime(e,t.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackNode.gain},set:function(e){this.feedbackNode.gain.setTargetAtTime(e,t.currentTime,.01)}},cutoff:{enumerable:!0,get:function(){return this.filter.frequency},set:function(e){this.filter.frequency.setTargetAtTime(e,t.currentTime,.01)}}}),u.prototype.Filter=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.filter=t.createBiquadFilter(),this.output=t.createGain(),this.activateNode.connect(this.filter),this.filter.connect(this.output),this.filter.frequency.value=e.frequency||this.defaults.frequency.value,this.Q=e.resonance||this.defaults.Q.value,this.filterType=p(e.filterType,this.defaults.filterType.value),this.filter.gain.value=p(e.gain,this.defaults.gain.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Filter.prototype=Object.create(i,{name:{value:"Filter"},defaults:{writable:!0,value:{frequency:{value:800,min:20,max:22050,automatable:!0,type:s},Q:{value:1,min:.001,max:100,automatable:!0,type:s},gain:{value:0,min:-40,max:40,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o},filterType:{value:"lowpass",automatable:!1,type:"string"}}},filterType:{enumerable:!0,get:function(){return this.filter.type},set:function(e){this.filter.type=e}},Q:{enumerable:!0,get:function(){return this.filter.Q},set:function(e){this.filter.Q.value=e}},gain:{enumerable:!0,get:function(){return this.filter.gain},set:function(e){this.filter.gain.setTargetAtTime(e,t.currentTime,.01)}},frequency:{enumerable:!0,get:function(){return this.filter.frequency},set:function(e){this.filter.frequency.setTargetAtTime(e,t.currentTime,.01)}}}),u.prototype.Gain=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.gainNode=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.gainNode),this.gainNode.connect(this.output),this.gainNode.gain.value=p(e.gain,this.defaults.gain.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Gain.prototype=Object.create(i,{name:{value:"Gain"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},gain:{value:1,automatable:!0,type:s}}},gain:{enumerable:!0,get:function(){return this.gainNode.gain},set:function(e){this.gainNode.gain.setTargetAtTime(e,t.currentTime,.01)}}}),u.prototype.MoogFilter=function(e){var a,n,i,s,o,r,u,l,c,d,h,f,v,A,m;e||(e=this.getDefaults()),this.bufferSize=e.bufferSize||this.defaults.bufferSize.value,this.input=t.createGain(),this.activateNode=t.createGain(),this.processor=t.createScriptProcessor(this.bufferSize,1,1),this.output=t.createGain(),this.activateNode.connect(this.processor),this.processor.connect(this.output),a=n=i=s=o=r=u=l=0,this.processor.onaudioprocess=function(e){for(c=e.inputBuffer.getChannelData(0),d=e.outputBuffer.getChannelData(0),h=1.16*this.cutoff,m=h*h*.35013*(h*h),f=this.resonance*(1-.15*h*h),A=c.length,v=0;v<A;v++)c[v]-=l*f,c[v]*=m,o=c[v]+.3*a+(1-h)*o,a=c[v],r=o+.3*n+(1-h)*r,n=o,u=r+.3*i+(1-h)*u,i=r,l=u+.3*s+(1-h)*l,s=u,d[v]=l},this.cutoff=p(e.cutoff,this.defaults.cutoff.value),this.resonance=p(e.resonance,this.defaults.resonance.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.MoogFilter.prototype=Object.create(i,{name:{value:"MoogFilter"},defaults:{writable:!0,value:{bufferSize:{value:4096,min:256,max:16384,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o},cutoff:{value:.065,min:1e-4,max:1,automatable:!1,type:s},resonance:{value:3.5,min:0,max:4,automatable:!1,type:s}}},cutoff:{enumerable:!0,get:function(){return this.processor.cutoff},set:function(e){this.processor.cutoff=e}},resonance:{enumerable:!0,get:function(){return this.processor.resonance},set:function(e){this.processor.resonance=e}}}),u.prototype.Overdrive=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.inputDrive=t.createGain(),this.waveshaper=t.createWaveShaper(),this.outputDrive=t.createGain(),this.output=t.createGain(),this.activateNode.connect(this.inputDrive),this.inputDrive.connect(this.waveshaper),this.waveshaper.connect(this.outputDrive),this.outputDrive.connect(this.output),this.ws_table=new Float32Array(this.k_nSamples),this.drive=p(e.drive,this.defaults.drive.value),this.outputGain=p(e.outputGain,this.defaults.outputGain.value),this.curveAmount=p(e.curveAmount,this.defaults.curveAmount.value),this.algorithmIndex=p(e.algorithmIndex,this.defaults.algorithmIndex.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Overdrive.prototype=Object.create(i,{name:{value:"Overdrive"},defaults:{writable:!0,value:{drive:{value:1,min:0,max:1,automatable:!0,type:s,scaled:!0},outputGain:{value:0,min:-46,max:0,automatable:!0,type:s,scaled:!0},curveAmount:{value:.725,min:0,max:1,automatable:!1,type:s},algorithmIndex:{value:0,min:0,max:5,automatable:!1,type:r},bypass:{value:!1,automatable:!1,type:o}}},k_nSamples:{value:8192},drive:{get:function(){return this.inputDrive.gain},set:function(e){this._drive=e}},curveAmount:{get:function(){return this._curveAmount},set:function(e){this._curveAmount=e,void 0===this._algorithmIndex&&(this._algorithmIndex=0),this.waveshaperAlgorithms[this._algorithmIndex](this._curveAmount,this.k_nSamples,this.ws_table),this.waveshaper.curve=this.ws_table}},outputGain:{get:function(){return this.outputDrive.gain},set:function(e){this._outputGain=l(e),this.outputDrive.gain.setValueAtTime(this._outputGain,t.currentTime,.01)}},algorithmIndex:{get:function(){return this._algorithmIndex},set:function(e){this._algorithmIndex=e,this.curveAmount=this._curveAmount}},waveshaperAlgorithms:{value:[function(e,t,a){var n,i,s=2*(e=Math.min(e,.9999))/(1-e);for(n=0;n<t;n++)i=2*n/t-1,a[n]=(1+s)*i/(1+s*Math.abs(i))},function(e,t,a){var n,i,s;for(n=0;n<t;n++)i=2*n/t-1,s=(.5*Math.pow(i+1.4,2)-1)*s>=0?5.8:1.2,a[n]=h(s)},function(e,t,a){var n,i,s,o=1-e;for(n=0;n<t;n++)s=(i=2*n/t-1)<0?-Math.pow(Math.abs(i),o+.04):Math.pow(i,o),a[n]=h(2*s)},function(e,t,a){var n,i,s,o,r=1-e>.99?.99:1-e;for(n=0;n<t;n++)i=2*n/t-1,(o=Math.abs(i))<r?s=o:o>r?s=r+(o-r)/(1+Math.pow((o-r)/(1-r),2)):o>1&&(s=o),a[n]=d(i)*s*(1/((r+1)/2))},function(e,t,a){var n,i;for(n=0;n<t;n++)i=2*n/t-1,a[n]=i<-.08905?-3/4*(1-Math.pow(1-(Math.abs(i)-.032857),12)+1/3*(Math.abs(i)-.032847))+.01:i>=-.08905&&i<.320018?i*i*-6.153+3.9375*i:.630035},function(e,t,a){var n,i,s=2+Math.round(14*e),o=Math.round(Math.pow(2,s-1));for(n=0;n<t;n++)i=2*n/t-1,a[n]=Math.round(i*o)/o}]}}),u.prototype.Panner=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.panner=t.createStereoPanner(),this.output=t.createGain(),this.activateNode.connect(this.panner),this.panner.connect(this.output),this.pan=p(e.pan,this.defaults.pan.value),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Panner.prototype=Object.create(i,{name:{value:"Panner"},defaults:{writable:!0,value:{bypass:{value:!1,automatable:!1,type:o},pan:{value:0,min:-1,max:1,automatable:!0,type:s}}},pan:{enumerable:!0,get:function(){return this.panner.pan},set:function(e){this.panner.pan.value=e}}}),u.prototype.Phaser=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.splitter=this.activateNode=t.createChannelSplitter(2),this.filtersL=[],this.filtersR=[],this.feedbackGainNodeL=t.createGain(),this.feedbackGainNodeR=t.createGain(),this.merger=t.createChannelMerger(2),this.filteredSignal=t.createGain(),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.filtersL,callback:this.callback}),this.lfoR=new a.LFO({target:this.filtersR,callback:this.callback});for(var n=this.stage;n--;)this.filtersL[n]=t.createBiquadFilter(),this.filtersR[n]=t.createBiquadFilter(),this.filtersL[n].type="allpass",this.filtersR[n].type="allpass";this.input.connect(this.splitter),this.input.connect(this.output),this.splitter.connect(this.filtersL[0],0,0),this.splitter.connect(this.filtersR[0],1,0),this.connectInOrder(this.filtersL),this.connectInOrder(this.filtersR),this.filtersL[this.stage-1].connect(this.feedbackGainNodeL),this.filtersL[this.stage-1].connect(this.merger,0,0),this.filtersR[this.stage-1].connect(this.feedbackGainNodeR),this.filtersR[this.stage-1].connect(this.merger,0,1),this.feedbackGainNodeL.connect(this.filtersL[0]),this.feedbackGainNodeR.connect(this.filtersR[0]),this.merger.connect(this.output),this.rate=p(e.rate,this.defaults.rate.value),this.baseModulationFrequency=e.baseModulationFrequency||this.defaults.baseModulationFrequency.value,this.depth=p(e.depth,this.defaults.depth.value),this.feedback=p(e.feedback,this.defaults.feedback.value),this.stereoPhase=p(e.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Phaser.prototype=Object.create(i,{name:{value:"Phaser"},stage:{value:4},defaults:{writable:!0,value:{rate:{value:.1,min:0,max:8,automatable:!1,type:s},depth:{value:.6,min:0,max:1,automatable:!1,type:s},feedback:{value:.7,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:40,min:0,max:180,automatable:!1,type:s},baseModulationFrequency:{value:700,min:500,max:1500,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},callback:{value:function(e,t){for(var a=0;a<4;a++)e[a].frequency.value=t}},depth:{get:function(){return this._depth},set:function(e){this._depth=e,this.lfoL.oscillation=this._baseModulationFrequency*this._depth,this.lfoR.oscillation=this._baseModulationFrequency*this._depth}},rate:{get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},baseModulationFrequency:{enumerable:!0,get:function(){return this._baseModulationFrequency},set:function(e){this._baseModulationFrequency=e,this.lfoL.offset=this._baseModulationFrequency,this.lfoR.offset=this._baseModulationFrequency,this.depth=this._depth}},feedback:{get:function(){return this._feedback},set:function(e){this._feedback=e,this.feedbackGainNodeL.gain.setTargetAtTime(this._feedback,t.currentTime,.01),this.feedbackGainNodeR.gain.setTargetAtTime(this._feedback,t.currentTime,.01)}},stereoPhase:{get:function(){return this._stereoPhase},set:function(e){this._stereoPhase=e;var t=this.lfoL._phase+this._stereoPhase*Math.PI/180;t=c(t,2*Math.PI),this.lfoR._phase=t}}}),u.prototype.PingPongDelay=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.wet=t.createGain(),this.stereoToMonoMix=t.createGain(),this.feedbackLevel=t.createGain(),this.output=t.createGain(),this.delayLeft=t.createDelay(10),this.delayRight=t.createDelay(10),this.activateNode=t.createGain(),this.splitter=t.createChannelSplitter(2),this.merger=t.createChannelMerger(2),this.activateNode.connect(this.splitter),this.splitter.connect(this.stereoToMonoMix,0,0),this.splitter.connect(this.stereoToMonoMix,1,0),this.stereoToMonoMix.gain.value=.5,this.stereoToMonoMix.connect(this.wet),this.wet.connect(this.delayLeft),this.feedbackLevel.connect(this.wet),this.delayLeft.connect(this.delayRight),this.delayRight.connect(this.feedbackLevel),this.delayLeft.connect(this.merger,0,0),this.delayRight.connect(this.merger,0,1),this.merger.connect(this.output),this.activateNode.connect(this.output),this.delayTimeLeft=void 0!==e.delayTimeLeft?e.delayTimeLeft:this.defaults.delayTimeLeft.value,this.delayTimeRight=void 0!==e.delayTimeRight?e.delayTimeRight:this.defaults.delayTimeRight.value,this.feedbackLevel.gain.value=void 0!==e.feedback?e.feedback:this.defaults.feedback.value,this.wet.gain.value=void 0!==e.wetLevel?e.wetLevel:this.defaults.wetLevel.value,this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.PingPongDelay.prototype=Object.create(i,{name:{value:"PingPongDelay"},delayTimeLeft:{enumerable:!0,get:function(){return this._delayTimeLeft},set:function(e){this._delayTimeLeft=e,this.delayLeft.delayTime.value=e/1e3}},delayTimeRight:{enumerable:!0,get:function(){return this._delayTimeRight},set:function(e){this._delayTimeRight=e,this.delayRight.delayTime.value=e/1e3}},wetLevel:{enumerable:!0,get:function(){return this.wet.gain},set:function(e){this.wet.gain.setTargetAtTime(e,t.currentTime,.01)}},feedback:{enumerable:!0,get:function(){return this.feedbackLevel.gain},set:function(e){this.feedbackLevel.gain.setTargetAtTime(e,t.currentTime,.01)}},defaults:{writable:!0,value:{delayTimeLeft:{value:200,min:1,max:1e4,automatable:!1,type:r},delayTimeRight:{value:400,min:1,max:1e4,automatable:!1,type:r},feedback:{value:.3,min:0,max:1,automatable:!0,type:s},wetLevel:{value:.5,min:0,max:1,automatable:!0,type:s},bypass:{value:!1,automatable:!1,type:o}}}}),u.prototype.Tremolo=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.splitter=this.activateNode=t.createChannelSplitter(2),this.amplitudeL=t.createGain(),this.amplitudeR=t.createGain(),this.merger=t.createChannelMerger(2),this.output=t.createGain(),this.lfoL=new a.LFO({target:this.amplitudeL.gain,callback:n}),this.lfoR=new a.LFO({target:this.amplitudeR.gain,callback:n}),this.input.connect(this.splitter),this.splitter.connect(this.amplitudeL,0),this.splitter.connect(this.amplitudeR,1),this.amplitudeL.connect(this.merger,0,0),this.amplitudeR.connect(this.merger,0,1),this.merger.connect(this.output),this.rate=e.rate||this.defaults.rate.value,this.intensity=p(e.intensity,this.defaults.intensity.value),this.stereoPhase=p(e.stereoPhase,this.defaults.stereoPhase.value),this.lfoL.offset=1-this.intensity/2,this.lfoR.offset=1-this.intensity/2,this.lfoL.phase=this.stereoPhase*Math.PI/180,this.lfoL.activate(!0),this.lfoR.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.Tremolo.prototype=Object.create(i,{name:{value:"Tremolo"},defaults:{writable:!0,value:{intensity:{value:.3,min:0,max:1,automatable:!1,type:s},stereoPhase:{value:0,min:0,max:180,automatable:!1,type:s},rate:{value:5,min:.1,max:11,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},intensity:{enumerable:!0,get:function(){return this._intensity},set:function(e){this._intensity=e,this.lfoL.offset=1-this._intensity/2,this.lfoR.offset=1-this._intensity/2,this.lfoL.oscillation=this._intensity,this.lfoR.oscillation=this._intensity}},rate:{enumerable:!0,get:function(){return this._rate},set:function(e){this._rate=e,this.lfoL.frequency=this._rate,this.lfoR.frequency=this._rate}},stereoPhase:{enumerable:!0,get:function(){return this._stereoPhase},set:function(e){this._stereoPhase=e;var t=this.lfoL._phase+this._stereoPhase*Math.PI/180;t=c(t,2*Math.PI),this.lfoR.phase=t}}}),u.prototype.WahWah=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.activateNode=t.createGain(),this.envelopeFollower=new a.EnvelopeFollower({target:this,callback:function(e,t){e.sweep=t}}),this.filterBp=t.createBiquadFilter(),this.filterPeaking=t.createBiquadFilter(),this.output=t.createGain(),this.activateNode.connect(this.filterBp),this.filterBp.connect(this.filterPeaking),this.filterPeaking.connect(this.output),this.init(),this.automode=p(e.automode,this.defaults.automode.value),this.resonance=e.resonance||this.defaults.resonance.value,this.sensitivity=p(e.sensitivity,this.defaults.sensitivity.value),this.baseFrequency=p(e.baseFrequency,this.defaults.baseFrequency.value),this.excursionOctaves=e.excursionOctaves||this.defaults.excursionOctaves.value,this.sweep=p(e.sweep,this.defaults.sweep.value),this.activateNode.gain.value=2,this.envelopeFollower.activate(!0),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.WahWah.prototype=Object.create(i,{name:{value:"WahWah"},defaults:{writable:!0,value:{automode:{value:!0,automatable:!1,type:o},baseFrequency:{value:.5,min:0,max:1,automatable:!1,type:s},excursionOctaves:{value:2,min:1,max:6,automatable:!1,type:s},sweep:{value:.2,min:0,max:1,automatable:!1,type:s},resonance:{value:10,min:1,max:100,automatable:!1,type:s},sensitivity:{value:.5,min:-1,max:1,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},automode:{get:function(){return this._automode},set:function(e){this._automode=e,e?(this.activateNode.connect(this.envelopeFollower.input),this.envelopeFollower.activate(!0)):(this.envelopeFollower.activate(!1),this.activateNode.disconnect(),this.activateNode.connect(this.filterBp))}},filterFreqTimeout:{value:0},setFilterFreq:{value:function(){try{this.filterBp.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep),this.filterPeaking.frequency.value=Math.min(22050,this._baseFrequency+this._excursionFrequency*this._sweep)}catch(e){clearTimeout(this.filterFreqTimeout),this.filterFreqTimeout=setTimeout(function(){this.setFilterFreq()}.bind(this),0)}}},sweep:{enumerable:!0,get:function(){return this._sweep},set:function(e){this._sweep=Math.pow(e>1?1:e<0?0:e,this._sensitivity),this.setFilterFreq()}},baseFrequency:{enumerable:!0,get:function(){return this._baseFrequency},set:function(e){this._baseFrequency=50*Math.pow(10,2*e),this._excursionFrequency=Math.min(t.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},excursionOctaves:{enumerable:!0,get:function(){return this._excursionOctaves},set:function(e){this._excursionOctaves=e,this._excursionFrequency=Math.min(t.sampleRate/2,this.baseFrequency*Math.pow(2,this._excursionOctaves)),this.setFilterFreq()}},sensitivity:{enumerable:!0,get:function(){return this._sensitivity},set:function(e){this._sensitivity=Math.pow(10,e)}},resonance:{enumerable:!0,get:function(){return this._resonance},set:function(e){this._resonance=e,this.filterPeaking.Q=this._resonance}},init:{value:function(){this.output.gain.value=1,this.filterPeaking.type="peaking",this.filterBp.type="bandpass",this.filterPeaking.frequency.value=100,this.filterPeaking.gain.value=20,this.filterPeaking.Q.value=5,this.filterBp.frequency.value=100,this.filterBp.Q.value=1}}}),u.prototype.EnvelopeFollower=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.jsNode=this.output=t.createScriptProcessor(this.buffersize,1,1),this.input.connect(this.output),this.attackTime=p(e.attackTime,this.defaults.attackTime.value),this.releaseTime=p(e.releaseTime,this.defaults.releaseTime.value),this._envelope=0,this.target=e.target||{},this.callback=e.callback||function(){},this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.EnvelopeFollower.prototype=Object.create(i,{name:{value:"EnvelopeFollower"},defaults:{value:{attackTime:{value:.003,min:0,max:.5,automatable:!1,type:s},releaseTime:{value:.5,min:0,max:.5,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},buffersize:{value:256},envelope:{value:0},sampleRate:{value:44100},attackTime:{enumerable:!0,get:function(){return this._attackTime},set:function(e){this._attackTime=e,this._attackC=Math.exp(-1/this._attackTime*this.sampleRate/this.buffersize)}},releaseTime:{enumerable:!0,get:function(){return this._releaseTime},set:function(e){this._releaseTime=e,this._releaseC=Math.exp(-1/this._releaseTime*this.sampleRate/this.buffersize)}},callback:{get:function(){return this._callback},set:function(e){"function"==typeof e?this._callback=e:console.error("tuna.js: "+this.name+": Callback must be a function!")}},target:{get:function(){return this._target},set:function(e){this._target=e}},activate:{value:function(e){this.activated=e,e?(this.jsNode.connect(t.destination),this.jsNode.onaudioprocess=this.returnCompute(this)):(this.jsNode.disconnect(),this.jsNode.onaudioprocess=null),this.activateCallback&&this.activateCallback(e)}},returnCompute:{value:function(e){return function(t){e.compute(t)}}},compute:{value:function(e){var t,a,n,i,s=e.inputBuffer.getChannelData(0).length,o=e.inputBuffer.numberOfChannels;if(a=n=i=0,o>1)for(i=0;i<s;++i)for(;a<o;++a)n+=(t=e.inputBuffer.getChannelData(a)[i])*t/o;else for(i=0;i<s;++i)n+=(t=e.inputBuffer.getChannelData(0)[i])*t;n=Math.sqrt(n),this._envelope<n?(this._envelope*=this._attackC,this._envelope+=(1-this._attackC)*n):(this._envelope*=this._releaseC,this._envelope+=(1-this._releaseC)*n),this._callback(this._target,this._envelope)}}}),u.prototype.LFO=function(e){e||(e=this.getDefaults()),this.input=t.createGain(),this.output=t.createScriptProcessor(256,1,1),this.activateNode=t.destination,this.frequency=p(e.frequency,this.defaults.frequency.value),this.offset=p(e.offset,this.defaults.offset.value),this.oscillation=p(e.oscillation,this.defaults.oscillation.value),this.phase=p(e.phase,this.defaults.phase.value),this.target=e.target||{},this.output.onaudioprocess=this.callback(e.callback||function(){}),this.bypass=e.bypass||this.defaults.bypass.value},u.prototype.LFO.prototype=Object.create(i,{name:{value:"LFO"},bufferSize:{value:256},sampleRate:{value:44100},defaults:{value:{frequency:{value:1,min:0,max:20,automatable:!1,type:s},offset:{value:.85,min:0,max:22049,automatable:!1,type:s},oscillation:{value:.3,min:-22050,max:22050,automatable:!1,type:s},phase:{value:0,min:0,max:2*Math.PI,automatable:!1,type:s},bypass:{value:!1,automatable:!1,type:o}}},frequency:{get:function(){return this._frequency},set:function(e){this._frequency=e,this._phaseInc=2*Math.PI*this._frequency*this.bufferSize/this.sampleRate}},offset:{get:function(){return this._offset},set:function(e){this._offset=e}},oscillation:{get:function(){return this._oscillation},set:function(e){this._oscillation=e}},phase:{get:function(){return this._phase},set:function(e){this._phase=e}},target:{get:function(){return this._target},set:function(e){this._target=e}},activate:{value:function(e){e?(this.output.connect(t.destination),this.activateCallback&&this.activateCallback(e)):this.output.disconnect()}},callback:{value:function(e){var t=this;return function(){t._phase+=t._phaseInc,t._phase>2*Math.PI&&(t._phase=0),e(t._target,t._offset+t._oscillation*Math.sin(t._phase))}}}}),u.toString=u.prototype.toString=function(){return"Please visit https://github.com/Theodeus/tuna/wiki for instructions on how to use Tuna.js"}}()},function(e,t,a){"use strict";a.d(t,"d",(function(){return u})),a.d(t,"a",(function(){return s})),a.d(t,"c",(function(){return o})),a.d(t,"b",(function(){return r}));var n=a(0),i=a(1);let s=function(e,t,a,n){t=t||0,navigator.requestMIDIAccess().then((function(){r[t]?(r[t].onmidimessage=e,"function"==typeof a&&a()):"function"==typeof n&&n()}))},o={play:function(){Object(n.n)("playing midi")},stop:function(){Object(n.n)("stopping midi")}},r=[],u=function(e){Object(n.n)(e.receivedTime,e.data,2),144===e.data[0]?0===e.data[2]?(Object(n.n)("Playing note: ",2),Object(n.n)(i.b[e.data[1]-12],2),o.stop(i.b[e.data[1]-12])):e.data[2]>0&&(Object(n.n)("Stopping note: ",2),Object(n.n)(i.b[e.data[1]-12],2),o.play({pitch:i.b[e.data[1]-12],label:i.b[e.data[1]-12]})):176===e.data[0]?(Object(n.n)("controller"),46==e.data[1]&&(127==e.data[2]?o.pedalMod=!0:0==e.data[2]&&(o.pedalMod=!1))):224===e.data[0]&&Object(n.n)("pitch bend")},l=function(e){r=[];for(var t=e.inputs.values(),a=t.next();!a.done;a=t.next())r.push(a.value);Object(n.n)("MIDI inputs: "),Object(n.n)(r);for(var i=0;i<r.length;i++)r[i].onmidimessage=u},c=function(e){Object(n.n)("Failed to get MIDI access",e)};if(navigator&&navigator.requestMIDIAccess)try{navigator.requestMIDIAccess().then(l,c)}catch(e){Object(n.n)("Failed to get MIDI access",e)}},function(e,t,a){"use strict";var n=a(0),i=a(1),s=new Uint8Array(2048);function o(e){for(var t,a=e.inputBuffer.getChannelData(0),n=a.length,i=0,s=0;s<n;s++)t=a[s],Math.abs(t)>=this.clipLevel&&(this.clipping=!0,this.lastClip=window.performance.now()),i+=t*t;var o=Math.sqrt(i/n);this.volume=Math.max(o,this.volume*this.averaging)}const r=function(e){e||(e={}),this.isSetUp=!1,this.playable=1,e.reverb?Object(n.f)(this,e):this.setUp(e)};r.prototype.setUp=function(e){var t,a,i,s,r;this.wads=[],this.input=n.i.createAnalyser(),this.input.fftSize=2048,this.nodes=[this.input],this.destination=e.destination||n.i.destination,this.volume=e.volume||1,this.gain=n.i.createGain(),this.gain.gain.value=this.volume,this.output=n.i.createAnalyser(),this.tuna=e.tuna||null,this.audioMeter=null,e.audioMeter&&(this.audioMeter=(t=n.i,a=e.audioMeter.clipLevel,i=e.audioMeter.averaging,s=e.audioMeter.clipLag,(r=t.createScriptProcessor(512)).onaudioprocess=o,r.clipping=!1,r.lastClip=0,r.volume=0,r.clipLevel=a||.98,r.averaging=i||.95,r.clipLag=s||750,r.connect(t.destination),r.checkClipping=function(){return!!this.clipping&&(this.lastClip+this.clipLag<window.performance.now()&&(this.clipping=!1),this.clipping)},r.shutdown=function(){this.disconnect(),this.onaudioprocess=null},r),this.output.connect(this.audioMeter)),Object(n.d)(this,e),this.filter&&Object(n.j)(this,e),this.reverb&&Object(n.B)(this,e),this.constructExternalFx(e,n.i),Object(n.e)(this,e),Object(n.A)(this,e),e.compressor&&Object(n.a)(this,e),Object(n.b)(this,e),Object(n.v)(this,e),Object(n.D)(this,e),this.nodes.push(this.gain),this.nodes.push(this.output),Object(n.s)(this,e),this.isSetUp=!0,e.callback&&e.callback(this)},r.prototype.updatePitch=function(e){this.input.getByteTimeDomainData(s);var t,a,o=function(e,t){var a=-1,n=0,i=0,s=!1;if(e.length<1996)return-1;for(let t=0;t<1e3;t++){var o=(e[t]-128)/128;i+=o*o}if((i=Math.sqrt(i/1e3))<.01)return-1;for(var r=1,u=4;u<=1e3;u++){var l=0;for(let t=0;t<1e3;t++)l+=Math.abs((e[t]-128)/128-(e[t+u]-128)/128);if((l=1-l/1e3)>.9&&l>r)s=!0;else if(s)return t/a;r=l,l>n&&(n=l,a=u)}return n>.01?t/a:-1}(s,n.i.sampleRate);if(-1!==o&&11025!==o&&12e3!==o){var r=o;this.pitch=Math.floor(r);var u=(t=r,a=Math.log(t/440)/Math.log(2)*12,Math.round(a)+69);this.noteName=i.b[u-12]}var l=this;l.rafID=window.requestAnimationFrame((function(){l.updatePitch()}))},r.prototype.stopUpdatingPitch=function(){cancelAnimationFrame(this.rafID)},r.prototype.setVolume=function(e){return this.isSetUp?this.gain.gain.value=e:Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.setPitch=function(e){this.wads.forEach((function(t){return e in i.a?(t.soundSource&&(t.soundSource.frequency.value=i.a[e]),t.pitch=i.a[e]):(t.soundSource&&(t.soundSource.frequency.value=e),t.pitch=e),this}))},r.prototype.play=function(e){if(this.isSetUp)if(this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=e;else{e&&e.volume&&(this.gain.gain.value=e.volume,e.volume=void 0);for(var t=0;t<this.wads.length;t++)this.wads[t].play(e)}else Object(n.n)("This PolyWad is not set up yet.");return this},r.prototype.stop=function(e){if(this.isSetUp)for(var t=0;t<this.wads.length;t++)this.wads[t].stop(e)},r.prototype.add=function(e){return this.isSetUp?(e.destination=this.input,this.wads.push(e),e instanceof r&&(e.output.disconnect(0),e.output.connect(this.input))):Object(n.n)("This PolyWad is not set up yet."),this},r.prototype.remove=function(e){if(this.isSetUp)for(var t=0;t<this.wads.length;t++)this.wads[t]===e&&(this.wads[t].destination=n.i.destination,this.wads.splice(t,1),e instanceof r&&(e.output.disconnect(0),e.output.connect(n.i.destination)));return this},r.prototype.constructExternalFx=function(e,t){},t.a=r},function(e,t,a){"use strict";function n(e,t){if(a=e,!(null!=(n=t)&&"undefined"!=typeof Symbol&&n[Symbol.hasInstance]?n[Symbol.hasInstance](a):a instanceof n))throw new TypeError("Cannot call a class as a function");var a,n}function i(e,t){for(var a=0;a<t.length;a++){var n=t[a];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s,o,r,u=function(){function e(t,a){n(this,e),this.Wad=a,t=Object.assign({},e.defaultArgs,t),this.files=t.files,this.sounds=this.files.map((function(e){return e.play?e:new a({source:e})})),this.randomSounds=this.sounds.slice(),this.random=t.random,this.randomPlaysBeforeRepeat=this.sounds.length>3&&t.randomPlaysBeforeRepeat<this.sounds.length-1?t.randomPlaysBeforeRepeat:0,this.index=0,this.waitingSounds=[]}var t,a,s;return t=e,(a=[{key:"play",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(!this.sounds.length)return 0;if(this.random){var a=Math.floor(Math.random()*this.randomSounds.length),n=this.randomSounds[a];return this.index=this.sounds.indexOf(n),this.waitingSounds=this.waitingSounds.filter((function(t){return t.plays-=1,!(t.plays<1)||(e.randomSounds.push(t.sound),null)})),this.randomPlaysBeforeRepeat&&(this.randomSounds.splice(a,1),this.waitingSounds.push({plays:this.randomPlaysBeforeRepeat,sound:n})),n.play(t)}var i=this.sounds[this.index]?this.sounds[this.index].play(t):void 0;return this.index+=1,this.index>=this.sounds.length&&(this.index=0),i}},{key:"add",value:function(e){return e.play||(e=new this.Wad({source:e})),this.sounds.push(e),this.randomSounds.push(e),this}},{key:"remove",value:function(e){var t=this.sounds.indexOf(e);if(-1===t)throw new Error("That sound does not exist: ".concat(e));this.sounds.splice(t,1);var a=this.randomSounds.indexOf(e);return-1===a?this.waitingSounds=this.waitingSounds.filter((function(t){return t.sound!==e})):this.randomSounds.splice(a,1),this}}])&&i(t.prototype,a),s&&i(t,s),e}();r={files:[],random:!1,randomPlaysBeforeRepeat:0},(o="defaultArgs")in(s=u)?Object.defineProperty(s,o,{value:r,enumerable:!0,configurable:!0,writable:!0}):s[o]=r,t.a=u},function(e,t,a){"use strict";t.a={hiHatClosed:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.03,release:.01},filter:{type:"highpass",frequency:400,q:1}},snare:{source:"noise",env:{attack:.001,decay:.01,sustain:.2,hold:.03,release:.02},filter:{type:"bandpass",frequency:300,q:.18}},hiHatOpen:{source:"noise",env:{attack:.001,decay:.008,sustain:.2,hold:.43,release:.01},filter:{type:"highpass",frequency:100,q:.2}},ghost:{source:"square",volume:.3,env:{attack:.01,decay:.002,sustain:.5,hold:2.5,release:.3},filter:{type:"lowpass",frequency:600,q:7,env:{attack:.7,frequency:1600}},vibrato:{attack:8,speed:8,magnitude:100}},piano:{source:"square",volume:1.4,env:{attack:.01,decay:.005,sustain:.2,hold:.015,release:.3},filter:{type:"lowpass",frequency:1200,q:8.5,env:{attack:.2,frequency:600}}}}},function(e,t,a){"use strict";var n=a(3),i=a.n(n);class s{constructor(e,t){this._setFunc=t,this.AudioParamautomationRate="a-rate",this.defaultValue=e,this.maxValue=34028234663852886e22,this.minValue=-34028234663852886e22,this._value=this.defaultValue}get value(){return this._value}set value(e){this._setFunc(e),this._value=e}}var o=a(0);let r=function(e){if(this.source=e.source,this.destination=e.destination||o.i.destination,this.volume=Object(o.F)(e.volume,1),this.defaultVolume=this.volume,this.playable=1,this.pitch=r.pitches[e.pitch]||e.pitch||440,this.gain=[],this.detune=e.detune||0,this.offset=e.offset||0,this.loop=e.loop||!1,this.tuna=e.tuna||null,this.rate=e.rate||1,this.sprite=e.sprite||null,Object(o.c)(this,e),Object(o.d)(this,e),Object(o.h)(this,e),Object(o.g)(this,e),Object(o.f)(this,e),this.constructExternalFx(e,o.i),Object(o.e)(this,e),Object(o.b)(this,e),this.duration=(this.env.attack+this.env.decay+this.env.hold+this.env.release)*(1/this.rate)*1e3,"noise"===this.source)this.decodedBuffer=o.p;else if("mic"===this.source)Object(o.l)(this,e);else if(this.source in{sine:0,sawtooth:0,square:0,triangle:0})e.callback&&e.callback(this);else if(Object(o.u)(this,e.callback),this.sprite){var t=this;for(var a in this.sprite)this[a]={sprite:this.sprite[a],play:function(e){return(e=e||{}).env=e.env||{},e.env.hold=this.sprite[1]-this.sprite[0],e.offset=this.sprite[0],t.play(e)}}}r.allWads.push(this)};r.allWads=[],r.audioContext=o.i,r.listener=new class{constructor(e){this._listener=e.listener,window.listener=this._listener,this.positionX=this._listener.positionX||new s(0,e=>this._listener.setPosition(e,this.positionY.value,this.positionZ.value)),this.positionY=this._listener.positionY||new s(0,e=>this._listener.setPosition(this.positionX.value,e,this.positionZ.value)),this.positionZ=this._listener.positionZ||new s(0,e=>this._listener.setPosition(this.positionX.value,this.positionY.value,e)),this.forwardX=this._listener.forwardX||new s(0,e=>this._listener.setOrientation(e,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardY=this._listener.ForwardY||new s(0,e=>this._listener.setOrientation(this.forwardX.value,e,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value)),this.forwardZ=this._listener.forwardZ||new s(-1,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,e,this.upX.value,this.upY.value,this.upZ.value)),this.upX=this._listener.upZ||new s(0,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,e,this.upY.value,this.upZ.value)),this.upY=this._listener.upY||new s(1,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,e,this.upZ.value)),this.upZ=this._listener.upZ||new s(0,e=>this._listener.setOrientation(this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,e))}setPosition(e,t,a){this.positionX.value=e,this.positionY.value=t,this.positionZ.value=a}getPosition(){return[this.positionX.value,this.positionY.value,this.positionZ.value]}setOrientation(e,t,a,n,i,s){this.forwardX.value=e,this.forwardY.value=t,this.forwardZ.value=a,this.upX.value=n,this.upY.value=i,this.upZ.value=s}getOrientation(){return[this.forwardX.value,this.forwardY.value,this.forwardZ.value,this.upX.value,this.upY.value,this.upZ.value]}}(o.i),null!=typeof i.a&&(r.tuna=new i.a(r.audioContext)),r.prototype.constructExternalFx=function(e,t){},r.prototype.setUpExternalFxOnPlay=function(e,t){},r.prototype.play=function(e){if(e=e||{arg:null},this.playable<1)this.playOnLoad=!0,this.playOnLoadArg=e;else if("mic"===this.source)o.q.micConsent?(null===e.arg||(Object(o.d)(this,e),Object(o.h)(this,e),Object(o.g)(this,e),Object(o.f)(this,e),this.constructExternalFx(e,o.i),Object(o.e)(this,e),Object(o.b)(this,e),Object(o.y)(this,e)),Object(o.s)(this,e)):(Object(o.n)("You have not given your browser permission to use your microphone."),Object(o.l)(this,e).then(()=>{this.play(e)}));else{this.nodes=[],e.wait||(e.wait=0),e.volume?this.volume=e.volume:this.volume=this.defaultVolume,e.offset=e.offset||this.offset||0,this.source in{sine:0,sawtooth:0,square:0,triangle:0}?Object(o.z)(this,e):(this.soundSource=o.i.createBufferSource(),this.soundSource.buffer=this.decodedBuffer,("noise"===this.source||this.loop||e.loop)&&(this.soundSource.loop=!0)),this.soundSource.detune&&(this.soundSource.detune.value=e.detune||this.detune),void 0===e.wait&&(e.wait=0),void 0===e.exactTime&&(e.exactTime=o.i.currentTime+e.wait),this.lastPlayedTime=e.exactTime-e.offset,this.nodes.push(this.soundSource),Object(o.w)(this,e),this.soundSource.playbackRate&&(this.soundSource.playbackRate.value=e.rate||this.rate,this.env.hold=this.env.hold*(1/this.soundSource.playbackRate.value)),Object(o.x)(this,e),Object(o.D)(this,e),this.setUpExternalFxOnPlay(e,o.i),this.gain.unshift(o.i.createGain()),this.gain[0].label=e.label,this.gain[0].soundSource=this.soundSource,this.nodes.push(this.gain[0]),this.gain.length>15&&(this.gain.length=15),this.reverb&&Object(o.B)(this,e),Object(o.A)(this,e),Object(o.v)(this,e),Object(o.s)(this,e),this.filter&&this.filter[0].env&&Object(o.k)(this,e),Object(o.r)(this,e),this.vibrato&&Object(o.E)(this,e,r),this.tremolo&&Object(o.C)(this,e,r);var t=this;this.soundSource.linkNode=[],this.nodes.forEach(e=>{this.soundSource.linkNode.push(e)});let a=this.destination;if(this.soundSource.onended=function(e){t.playPromiseResolve(t);let n=e.target;n.linkNode&&setTimeout(()=>{Object(o.t)(n.linkNode,a)},2e3)},!e.unpause)return this.playPromise=new Promise((function(e,a){t.playPromiseResolve=e})),this.playPromise}e.callback&&e.callback(this)},r.prototype.setVolume=function(e,t,a){if(t=t||.01,a){if(this.gain.length>0)for(let t=0;t<this.gain.length;t++)this.gain[t].label===a&&this.gain[t].gain.setValueAtTime(e,o.i.currentTime)}else this.defaultVolume=e,this.gain.length>0&&this.gain[0].gain.setValueAtTime(e,o.i.currentTime);return this},r.prototype.setRate=function(e){var t;return t=e&&e>0?e:0,this.soundSource?this.soundSource.playbackRate.value=t:Object(o.n)("Sorry, but the wad does not contain a soundSource!"),this},r.prototype.setPitch=function(e,t,a){if(t=t||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&(e in r.pitches?this.gain[n].soundSource.frequency.setTargetAtTime(r.pitches[e],o.i.currentTime,t):this.soundSource.frequency.settargetAtTime(e,o.i.currentTime,t));else e in r.pitches?(this.soundSource&&(this.soundSource.frequency.value=r.pitches[e]),this.pitch=r.pitches[e]):(this.soundSource&&(this.soundSource.frequency.value=e),this.pitch=e);return this},r.prototype.setDetune=function(e,t,a){if(t=t||.01,a)for(let n=0;n<this.gain.length;n++)this.gain[n].label===a&&this.gain[n].soundSource.detune.setTargetAtTime(e,o.i.currentTime,t);else this.soundSource.detune.setTargetAtTime(e,o.i.currentTime,t);return this},r.prototype.setPanning=function(e,t,a){return t=t||.01,"number"!=typeof e||o.i.createStereoPanner||(e=[e,0,0]),this.panning.location=e,Object(o.m)(e)&&"3d"===this.panning.type&&this.panning.node?this.panning.node.setPosition(e[0],e[1],e[2]):"number"==typeof e&&"stereo"===this.panning.type&&this.panning.node&&this.panning.node.pan.setTargetAtTime(e,o.i.currentTime,t),Object(o.m)(e)?this.panning.type="3d":"number"==typeof e&&(this.panning.type="stereo"),this},r.prototype.setReverb=function(e){var t;return t=e&&e>0&&e<1?e:e>=1?1:0,this.reverb?(this.reverb.wet=t,this.reverb.node&&(this.reverb.node.wet.gain.value=t)):Object(o.n)("Sorry, but the wad does not contain Reverb!"),this},r.prototype.setDelay=function(e,t,a){var n,i,s;return n=e&&e>0?e:0,i=t&&t>0&&t<1?t:t>=1?1:0,s=a&&a>0&&a<1?a:a>=1?1:0,this.delay?(this.delay.delayTime=n,this.delay.wet=i,this.delay.feedback=s,this.delay.delayNode&&(this.delay.delayNode.delayNode.delayTime.value=n,this.delay.delayNode.wetNode.gain.value=i,this.delay.delayNode.feedbackNode.gain.value=s)):Object(o.n)("Sorry, but the wad does not contain delay!",2),this},r.prototype.pause=function(e){this.pauseTime=o.i.currentTime,this.soundSource.onended=null,this.stop(e)},r.prototype.unpause=function(e){(e=e||{}).unpause=!0,this.pauseTime&&null!=this.lastPlayedTime?e.offset=this.pauseTime-this.lastPlayedTime:Object(o.n)("You tried to unpause a wad that was not played and paused, so it just played normally instead.",2),this.play(e)},r.prototype.stop=function(e){if("mic"!==this.source){if(!this.gain||!this.gain.length)return Object(o.n)("You tried to stop a Wad that never played. ",2),void Object(o.n)(this,2);if(e)for(var t=0;t<this.gain.length;t++)this.gain[t].label===e&&(this.gain[t].gain.cancelScheduledValues(o.i.currentTime),this.gain[t].gain.setValueAtTime(this.gain[t].gain.value,o.i.currentTime),this.gain[t].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release));else if(!e){this.gain[0].gain.cancelScheduledValues(o.i.currentTime),this.gain[0].gain.setValueAtTime(this.gain[0].gain.value,o.i.currentTime),this.gain[0].gain.linearRampToValueAtTime(1e-4,o.i.currentTime+this.env.release);try{this.soundSource.stop(o.i.currentTime+this.env.release)}catch(e){Object(o.n)(e,2);var a=this;setTimeout((function(){a.soundSource.dispatchEvent(new Event("ended")),a.soundSource.onended=null}),1e3*this.env.release)}}}else o.q.micConsent?this.mediaStreamSource.disconnect(0):Object(o.n)("You have not given your browser permission to use your microphone.");this.tremolo&&this.tremolo.wad.stop()},r.stopAll=function(e){for(var t=0;t<r.allWads.length;t++)r.allWads[t].stop(e)},r.setVolume=function(e){for(var t=0;t<r.allWads.length;t++)r.allWads[t].setVolume(e)};t.a=r},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t,a){"use strict";a.r(t);var n=a(2),i=0,s=1,o=2,r=3,u=class{constructor(){this.tracks=[],this.interval=null,this.step=0,this.bpm=60,this.state=i,this._frameCount=0,this._skipFrame=60,this._stopMark=!1,this._name="trigon",this._create=null}sine(e){return new n.a({source:"sine",...e})}sawtooth(e){return new n.a({source:"sawtooth",...e})}square(e){return new n.a({source:"square",...e})}triangle(e){return new n.a({source:"triangle",...e})}baseDrum(e){var t=new class{constructor(){this._name="",this._type="trigon_instrument",this.map={}}setMap(e){this.map=e}_play(e,t){var a=this.map[e];a&&(a.onTrigger?a.onTrigger(t):a.play(t))}play(e){var t=e.pitch;e.label;t&&(this.onTrigger?this.onTrigger(e):this._play(t,e))}stop(e){}},a={kick:new n.a({source:"./samples/drum/kick.wav",...e}),snare:new n.a({source:"./samples/drum/snare.wav",...e}),ohh:new n.a({source:"./samples/drum/openhh.wav",...e}),chh:new n.a({source:"./samples/drum/closehh.wav",...e})};return t.setMap(a),t.onTrigger=e=>{e.pitch.split("+").forEach(a=>{t._play(a,e)})},t}addTrack(e){this.tracks.push(e)}setBpm(e){this.bpm=e,this._skipFrame=Math.round(3600/e/10),console.log(this._skipFrame)}setCreate(e){this._create=e}play(){this.state==i&&this.stop(),this.state!=s&&(this.tracks=[],this._create&&this._create(),console.log("track-count:"+this.tracks.length),this._stopMark=!1,this.state=s,requestAnimationFrame(()=>{this._onFrame()}))}_onFrame(){if(this._stopMark)return;if(requestAnimationFrame(()=>{this._onFrame()}),this._frameCount+=1,this._frameCount%(1+this._skipFrame)!=0)return;let e=!0;this.tracks.forEach(t=>{t.play(this.step)&&(e=!1)}),this.step+=1,e&&this.stop()}pause(){this._stopMark=!0,this.state=o}stop(){this._frameCount=0,this.step=0,this._stopMark=!0,this.state=r}},l=class{constructor(e=null){this.data=[],this._name="trigon_pattern",this._lastSynth=null,this.name=e,this.stopOnNext=!1}addPattern(e,t=null,a=0){if(a>0)for(var n=0;n<a;n++)this.addNote(null,"0");"trigon_pattern"==e._name?this.data=this.data.concat(e.data):t.forEach(t=>{this.addNote(e,t)})}addNote(e,t,a,n,i=null){if(n>0)for(var s=0;s<n;s++)this._addNote(null,"0");if(this._addNote(e,t,i),a>0)for(s=0;s<a;s++)this._addNote(null,"0")}_addNote(e,t,a=null){let n=t.split("/");var i=4;n.length>1&&(t=n[0],i=parseInt(n[1])),this.data.push({synth:e,note:t,args:a});for(let e=1;e<i;e++)this.data.push({synth:null,note:"-",args:null})}play(e){var t=this.data[e];if(!t)return!1;let a=t.synth,n=t.note,i=t.args;return"0"!=n&&"-"!=n&&(this.stopOnNext&&this._lastSynth&&this._lastSynth.stop(),i?a.play({pitch:n,label:n,...i}):a.play({pitch:n,label:n}),this._lastSynth=a,console.log("track:"+this.name+" play:"+n)),!0}},c=new u;c.setBpm(120);var d=null,h=null,p=null,f=null;c.setCreate(()=>{!function(){let e=c.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),t=["A3","C4","E4","A3","C4","E4","A3","C4","E4","0","0","0","0","0","0","0"],a=new l;a.addPattern(e,t),t=["G3","C4","E4","G3","C4","E4","G3","C4","E4","0","0","0","0","0","0","0"];let n=new l;n.addPattern(e,t),t=["F3","C4","E4","F3","C4","E4","F3","C4","E4","0","0","0","0","0","0","0"];let i=new l;i.addPattern(e,t),t=["G#3","C4","E4","G#3","C4","E4","G#3","C4","E4","0","0","0","0","0","0","0"];let s=new l;s.addPattern(e,t);let o=new l;o.addPattern(a),o.addPattern(a),o.addPattern(n),o.addPattern(n),o.addPattern(i),o.addPattern(i),o.addPattern(n),o.addPattern(s),(d=new l("tr1")).addPattern(o),d.addPattern(o),d.addPattern(o),d.addPattern(o),c.addTrack(d)}(),function(){let e=c.sawtooth({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.3}),t=new l;t.addNote(e,"A4",7),t.addNote(e,"E4",7),t.addNote(e,"A3",15),t.addNote(e,"G4",7),t.addNote(e,"D4",7),t.addNote(e,"B3",15),t.addNote(e,"F4",7),t.addNote(e,"C4",7),t.addNote(e,"A3",15),t.addNote(e,"F#4",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),(h=new l("tr2")).addPattern(t,null,128),h.addPattern(t),h.addPattern(t),h.addPattern(t),h.addPattern(t),c.addTrack(h)}(),function(){let e=c.triangle({env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.25,wet:.7,feedback:.8},volume:.4}),t=new l;t.addNote(e,"C4",7),t.addNote(e,"A3",7),t.addNote(e,"E3",15),t.addNote(e,"B3",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),t.addNote(e,"C4",7),t.addNote(e,"A3",7),t.addNote(e,"E3",15),t.addNote(e,"B3",7),t.addNote(e,"C4",7),t.addNote(e,"E4",15),(p=new l("tr3")).addPattern(t,null,256),p.addPattern(t),c.addTrack(p)}(),function(){let e=c.baseDrum({volume:.8,delay:{delayTime:.3,wet:.25,feedback:.25}}),t=["kick","0","0","0","0","0","0","0","snare","0","0","0","0","0","0","0","kick","0","0","0","0","kick","0","0","snare","0","0","0","0","0","0","0"],a=new l;a.addPattern(e,t),a.addPattern(e,t),a.addPattern(e,t),a.addPattern(e,t),(f=new l("tr4")).addPattern(a,null,256),f.addPattern(a),f.addPattern(a),c.addTrack(f)}()});var v=c,A=new u;A.setBpm(76);let m={attack:.01,decay:.03,hold:.2,release:.3},y={delayTime:.5,wet:.25,feedback:.25},b=A.square({filter:{type:"lowpass",frequency:1500,q:1},env:m,delay:y,volume:.15}),g=A.square({filter:{type:"lowpass",frequency:1500,q:1},env:m,delay:y,volume:.3});var w=new l("tr1"),k=new l("tr2"),P=new l("tr_drum"),N=new l("tr_bass"),T=new l("tr_synth");!function(){let e=new l;e.addPattern(b,["F3","C4","E4","C4","F3","C4","E4","C4"]);let t=new l;t.addPattern(b,["G3","B3","D4","B3","G3","B3","D4","B3"]);let a=new l;a.addPattern(b,["A3","C4","E4","C4","A3","C4","E4","C4"]);let n=new l;n.addPattern(e),n.addPattern(t),n.addPattern(a),n.addPattern(a),w.addPattern(n,null,2),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n),w.addPattern(n)}(),function(){var e=new l;e.addNote(g,"G4",1);var t=new l;t.addNote(g,"A4"),t.addNote(g,"E5"),t.addNote(g,"A4"),t.addNote(g,"G4"),t.addNote(g,"A4",6),t.addNote(g,"G4"),t.addNote(g,"A4"),t.addNote(g,"E5"),t.addNote(g,"A4"),t.addNote(g,"G4"),t.addNote(g,"A4"),t.addNote(g,"E5"),t.addNote(g,"A4"),t.addNote(g,"G4"),t.addNote(g,"A4",2),t.addNote(g,"E4"),t.addNote(g,"G4",2),t.addNote(g,"D4"),t.addNote(g,"E4"),t.addNote(g,"G4"),t.addNote(g,"A4"),t.addNote(g,"B4"),t.addNote(g,"A4"),t.addNote(g,"E5"),t.addNote(g,"A4"),t.addNote(g,"G4"),t.addNote(g,"A4",6);var a=new l;a.addNote(g,"G4"),a.addNote(g,"A4"),a.addNote(g,"E5"),a.addNote(g,"B4"),a.addNote(g,"C5"),a.addNote(g,"B4"),a.addNote(g,"C5"),a.addNote(g,"D5"),a.addNote(g,"E5"),a.addNote(g,"A4",7),a.addNote(g,"A4",1),a.addNote(g,"G4",1);var n=new l;n.addNote(g,"G4"),n.addNote(g,"A4"),n.addNote(g,"E5"),n.addNote(g,"B4"),n.addNote(g,"C5"),n.addNote(g,"B4"),n.addNote(g,"C5"),n.addNote(g,"B4"),n.addNote(g,"A4"),n.addNote(g,"E4",6),n.addNote(g,"D4"),n.addNote(g,"E4"),n.addNote(g,"G4"),n.addNote(g,"A4"),n.addNote(g,"B4");var i=new l;i.addNote(g,"G4"),i.addNote(g,"A4"),i.addNote(g,"E5"),i.addNote(g,"B4"),i.addNote(g,"C5"),i.addNote(g,"B4"),i.addNote(g,"C5"),i.addNote(g,"D5"),i.addNote(g,"E5"),i.addNote(g,"A4",5),i.addNote(g,"A4",1),i.addNote(g,"B4",1),i.addNote(g,"G5",1);var s=new l;s.addPattern(g,["D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","C6","E5","B5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","A5","E5","D5","E5","B5","E5","D5","E5","A5","E5","D5","E5","C6","B5","A5"]);let o=new l;o.addPattern(t),o.addPattern(a),o.addPattern(t),o.addPattern(n),o.addPattern(t),o.addPattern(i),o.addPattern(s),k.addPattern(e),k.addPattern(o)}(),function(){let e=A.baseDrum({volume:.8}),t=new l;t.addNote(e,"kick+ohh"),t.addNote(e,"chh"),t.addNote(e,"snare+chh"),t.addNote(e,"chh"),t.addNote(e,"kick+chh"),t.addNote(e,"kick+chh"),t.addNote(e,"snare+chh"),t.addNote(e,"chh");let a=new l;a.addNote(e,"kick+chh"),a.addNote(e,"chh"),a.addNote(e,"snare+chh"),a.addNote(e,"chh"),a.addNote(e,"chh"),a.addNote(e,"chh/2"),a.addNote(e,"kick/2"),a.addNote(e,"snare+chh"),a.addNote(e,"kick+chh");let n=new l;n.addNote(e,"kick+ohh"),n.addNote(e,"chh"),n.addNote(e,"snare+chh"),n.addNote(e,"chh"),n.addNote(e,"chh"),n.addNote(e,"kick+chh"),n.addNote(e,"snare+chh"),n.addNote(e,"chh");let i=new l;i.addPattern(t),i.addPattern(a),i.addPattern(n),i.addPattern(t);let s=new l;s.addNote(e,"snare",1),P.addPattern(s,null,64),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i),P.addPattern(i)}(),function(){let e=A.sawtooth({env:{attack:.01,decay:.03,hold:.05,release:.5},volume:.05,panning:0}),t=new l;t.addNote(e,"A6",null,null,{panning:-.5}),t.addNote(e,"A6",null,null,{panning:.5,volume:.03}),t.addNote(e,"E6",null,null,{panning:-.5}),t.addNote(e,"E6",null,null,{panning:.5,volume:.03});let a=new l;a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),a.addPattern(t),T.addPattern(a,null,2),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a),T.addPattern(a)}(),function(){let e=A.triangle({env:{attack:.01,decay:.03,hold:2,release:.5},volume:.3});var t=new l;t.addNote(e,"F2",6),t.addNote(e,"F2"),t.addNote(e,"G2",6),t.addNote(e,"G2"),t.addNote(e,"A2",6),t.addNote(e,"A2"),t.addNote(e,"A2",7),N.stopOnNext=!0,N.addPattern(t,null,66),N.addPattern(t),N.addPattern(t),N.addPattern(t),N.addPattern(t),N.addPattern(t),N.addPattern(t),N.addPattern(t)}(),A.setCreate(()=>{A.addTrack(w),A.addTrack(k),A.addTrack(P),A.addTrack(N),A.addTrack(T)});var _=A,G=new u;G.setBpm(180);let E=G.square({filter:{type:"lowpass",frequency:1500,q:1},env:{attack:.01,decay:.03,hold:.2,release:.3},delay:{delayTime:.5,wet:.25,feedback:.25},volume:.15});G.setCreate(()=>{let e=new l;e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]),e.addPattern(E,["A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4","A4"]);var t=new l;t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),t.addPattern(e),G.addTrack(t)});var x=G,O=null;document.getElementById("bt").onclick=function(){null!=O?O.play():alert("Please select songs")},document.getElementById("btStop").onclick=function(){null!=O?O.stop():alert("Please select songs")},document.getElementById("btPause").onclick=function(){null!=O?O.pause():alert("Please select songs")};var C=[{name:"demo1",song:v},{name:"潮鸣り",song:_},{name:"performance-test",song:x}],q=document.querySelector("#list");q.innerHTML="";for(let e=0;e<C.length;e++){let t=document.createElement("a");t.setAttribute("href","javascript:void(0);");let a=e;t.onclick=()=>{document.querySelector("h3").innerText=C[a].name,O=C[a].song},t.innerHTML=C[e].name;let n=document.createElement("li");n.appendChild(t),q.appendChild(n)}document.querySelector("h3").innerText=C[1].name,O=C[1].song}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvd2FkL2NvbW1vbi5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29yZS93YWQvcGl0Y2hlcy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29yZS93YWQvbWFpbi5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvdHVuYWpzL3R1bmEuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvd2FkL21pZGkuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvd2FkL3BvbHl3YWQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvd2FkL3NvdW5kX2l0ZXJhdG9yLmpzIiwid2VicGFjazovLy8uL3NyYy9jb3JlL3dhZC9wcmVzZXRzLmpzIiwid2VicGFjazovLy8uL3NyYy9jb3JlL3dhZC9hdWRpb19saXN0ZW5lci5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29yZS93YWQvd2FkLmpzIiwid2VicGFjazovLy8od2VicGFjaykvYnVpbGRpbi9oYXJtb255LW1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvY29yZS90cmlnb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvdHJpZ29uX2luc3RydW1lbnQuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2NvcmUvdHJpZ29uX3BhdHRlcm4uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NvbmdzL2RlbW8xLmpzIiwid2VicGFjazovLy8uL3NyYy9zb25ncy9jbGFubmFkLmpzIiwid2VicGFjazovLy8uL3NyYy9zb25ncy9wZXJmb3JtYW5jZV90ZXN0LmpzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJpbnN0YWxsZWRNb2R1bGVzIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiZXhwb3J0cyIsIm1vZHVsZSIsImkiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJwIiwicyIsImNvbnRleHQiLCJhdWRpb0NvbnRleHQiLCJ3aW5kb3ciLCJBdWRpb0NvbnRleHQiLCJ3ZWJraXRBdWRpb0NvbnRleHQiLCJsb2dTdHVmZiIsInZlcmJvc2l0eSIsInN1cHByZXNzZWRMb2dzIiwibG9nTWVzc2FnZSIsIm1lc3NhZ2UiLCJsb2dMZXZlbCIsImNvbnNvbGUiLCJsb2ciLCJhU2NlbmUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJhdWRpb0xpc3RlbmVyIiwidW5sb2NrIiwic3RhdGUiLCJyZXN1bWUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsImdldFVzZXJNZWRpYSIsIm5hdmlnYXRvciIsIm1lZGlhRGV2aWNlcyIsIm5hdmlnYXRvckdldFVzZXJNZWRpYSIsIndlYmtpdEdldFVzZXJNZWRpYSIsIm1vekdldFVzZXJNZWRpYSIsImNvbnN0cmFpbnRzIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJub2lzZUJ1ZmZlciIsIk1hdGgiLCJzZWVkIiwic2VlZGVkUmFuZG9tIiwibWF4IiwibWluIiwiYnVmZmVyU2l6ZSIsInNhbXBsZVJhdGUiLCJjcmVhdGVCdWZmZXIiLCJvdXRwdXQiLCJnZXRDaGFubmVsRGF0YSIsImlzQXJyYXkiLCJ0b1N0cmluZyIsInZhbHVlT3JEZWZhdWx0IiwiZGVmIiwiY29uc3RydWN0RW52IiwidGhhdCIsImFyZyIsImVudiIsImF0dGFjayIsImRlY2F5Iiwic3VzdGFpbiIsImhvbGQiLCJyZWxlYXNlIiwiZGVmYXVsdEVudiIsInVzZXJTZXRIb2xkIiwiY29uc3RydWN0RmlsdGVyIiwiZmlsdGVyIiwibWFwIiwiZmlsdGVyQXJnIiwidHlwZSIsImZyZXF1ZW5jeSIsInEiLCJyZXF1ZXN0QXVkaW9GaWxlIiwiY2FsbGJhY2siLCJyZXF1ZXN0IiwiWE1MSHR0cFJlcXVlc3QiLCJvcGVuIiwic291cmNlIiwicmVzcG9uc2VUeXBlIiwicGxheWFibGUiLCJvbmxvYWQiLCJkZWNvZGVBdWRpb0RhdGEiLCJyZXNwb25zZSIsImRlY29kZWRCdWZmZXIiLCJkdXJhdGlvbiIsInJhdGUiLCJwbGF5T25Mb2FkIiwicGxheSIsInBsYXlPbkxvYWRBcmciLCJzZW5kIiwiY29uc3RydWN0VmlicmF0byIsInZpYnJhdG8iLCJzaGFwZSIsInNwZWVkIiwibWFnbml0dWRlIiwiY29uc3RydWN0VHJlbW9sbyIsInRyZW1vbG8iLCJjb25zdHJ1Y3RSZXZlcmIiLCJyZXZlcmIiLCJ3ZXQiLCJpbXB1bHNlVVJMIiwiaW1wdWxzZSIsImJ1ZmZlciIsInNldFVwIiwibm9kZSIsImNvbnZvbHZlciIsImNvbnN0cnVjdFBhbm5pbmciLCJwYW5uaW5nIiwibG9jYXRpb24iLCJwYW5uaW5nTW9kZWwiLCJkaXN0YW5jZU1vZGVsIiwibWF4RGlzdGFuY2UiLCJyb2xsb2ZmRmFjdG9yIiwicmVmRGlzdGFuY2UiLCJjb25lSW5uZXJBbmdsZSIsImNvbmVPdXRlckFuZ2xlIiwiY29uZU91dGVyR2FpbiIsImNyZWF0ZVN0ZXJlb1Bhbm5lciIsImNvbnN0cnVjdERlbGF5IiwiZGVsYXkiLCJkZWxheVRpbWUiLCJtYXhEZWxheVRpbWUiLCJmZWVkYmFjayIsInBlcm1pc3Npb25zR3JhbnRlZCIsIm1pY0NvbnNlbnQiLCJnZXRDb25zZW50Iiwibm9kZXMiLCJtZWRpYVN0cmVhbVNvdXJjZSIsImdhaW4iLCJhdWRpbyIsInZpZGVvIiwidGhlbiIsInN0cmVhbSIsImNyZWF0ZU1lZGlhU3RyZWFtU291cmNlIiwic2V0VXBNaWMiLCJjYXRjaCIsImVycm9yIiwiY3JlYXRlR2FpbiIsInZvbHVtZSIsInB1c2giLCJjcmVhdGVGaWx0ZXJzIiwic2V0VXBSZXZlcmJPblBsYXkiLCJzZXRVcFBhbm5pbmdPblBsYXkiLCJzZXRVcERlbGF5T25QbGF5Iiwic2V0VXBUdW5hT25QbGF5Iiwic2V0VXBFeHRlcm5hbEZ4T25QbGF5IiwiZmlsdGVyRW52Iiwid2FkIiwiZm9yRWFjaCIsImluZGV4IiwibGluZWFyUmFtcFRvVmFsdWVBdFRpbWUiLCJleGFjdFRpbWUiLCJwbGF5RW52IiwibG9vcCIsInNvdW5kU291cmNlIiwic3RhcnQiLCJvZmZzZXQiLCJwbGF5YmFja1JhdGUiLCJzdG9wIiwicGx1Z0VtSW4iLCJsYXN0U3RvcCIsImRlc3RpbmF0aW9uIiwibGVuZ3RoIiwiZnJvbSIsInRvIiwiaW50ZXJmYWNlIiwiaW5wdXQiLCJjb25uZWN0IiwicGx1Z0VtT3V0IiwiZGlzY29ubmVjdCIsInNldFVwT3NjaWxsYXRvciIsImNyZWF0ZU9zY2lsbGF0b3IiLCJwaXRjaCIsInNldFVwRW52T25QbGF5IiwiY3JlYXRlQmlxdWFkRmlsdGVyIiwiUSIsInNldFVwRmlsdGVyT25QbGF5IiwicmV2ZXJiTm9kZSIsImNyZWF0ZUNvbnZvbHZlciIsInBhbiIsImNyZWF0ZVBhbm5lciIsInNldFBvc2l0aW9uIiwic2V0VXBWaWJyYXRvT25QbGF5IiwiV2FkIiwic2V0VXBUcmVtb2xvT25QbGF5IiwiZGVsYXlOb2RlIiwiY3JlYXRlRGVsYXkiLCJmZWVkYmFja05vZGUiLCJ3ZXROb2RlIiwiY29uc3RydWN0Q29tcHJlc3NvciIsImNvbXByZXNzb3IiLCJjcmVhdGVEeW5hbWljc0NvbXByZXNzb3IiLCJrbmVlIiwicmF0aW8iLCJ0aHJlc2hvbGQiLCJ0dW5hIiwidHVuYUNvbmZpZyIsInR1bmFFZmZlY3QiLCJwaXRjaGVzIiwicGl0Y2hlc0FycmF5IiwiUG9seSIsIlNvdW5kSXRlcmF0b3IiLCJhcmdzIiwibWlkaU1hcCIsImFzc2lnbk1pZGlNYXAiLCJtaWRpSW5zdHJ1bWVudCIsIm1pZGlJbnB1dHMiLCJwcmVzZXRzIiwibG9ncyIsInVzZXJDb250ZXh0IiwidXNlckluc3RhbmNlIiwicGlwZSIsInBhcmFtIiwidmFsIiwiU3VwZXIiLCJhY3RpdmF0ZSIsIndyaXRhYmxlIiwiZG9BY3RpdmF0ZSIsInRoaXMiLCJhY3RpdmF0ZU5vZGUiLCJhY3RpdmF0ZUNhbGxiYWNrIiwiYnlwYXNzIiwiX2J5cGFzcyIsInNldCIsIl9sYXN0QnlwYXNzVmFsdWUiLCJ0YXJnZXQiLCJjb25uZWN0SW5PcmRlciIsIm5vZGVBcnJheSIsImdldERlZmF1bHRzIiwicmVzdWx0IiwiZGVmYXVsdHMiLCJhdXRvbWF0ZSIsInN0YXJ0VGltZSIsIm1ldGhvZCIsImN1cnJlbnRUaW1lIiwiZHVyIiwiX2lzIiwiYXV0b21hdGFibGUiLCJjYW5jZWxTY2hlZHVsZWRWYWx1ZXMiLCJzZXRWYWx1ZUF0VGltZSIsIkZMT0FUIiwiQk9PTEVBTiIsIklOVCIsIlR1bmEiLCJfd2luZG93IiwiRXJyb3IiLCJfX2Nvbm5lY3RpZmllZF9fIiwicHJvdG8iLCJnZXRQcm90b3R5cGVPZiIsIm9jb25uZWN0IiwiYXJndW1lbnRzIiwiaXNQcm90b3R5cGVPZiIsImFwcGx5IiwiY29ubmVjdGlmeSIsImRiVG9XQVZvbHVtZSIsImRiIiwicm91bmQiLCJwb3ciLCJmbW9kIiwieCIsInkiLCJ0bXAiLCJ0bXAyIiwicFkiLCJsMiIsInRvRXhwb25lbnRpYWwiLCJtYXRjaCIsInBhcnNlSW50IiwidG9GaXhlZCIsInBhcnNlRmxvYXQiLCJzaWduIiwiYWJzIiwidGFuaCIsImV4cCIsImluaXRWYWx1ZSIsInVzZXJWYWwiLCJkZWZhdWx0VmFsIiwidW5kZWZpbmVkIiwiZGVmaW5lIiwiQml0Y3J1c2hlciIsInByb3BlcnRpZXMiLCJwcm9jZXNzb3IiLCJjcmVhdGVTY3JpcHRQcm9jZXNzb3IiLCJzdGVwIiwicGhhc2VyIiwibGFzdCIsIm9uYXVkaW9wcm9jZXNzIiwiZSIsImlucHV0QnVmZmVyIiwib3V0cHV0QnVmZmVyIiwiYml0cyIsIm5vcm1mcmVxIiwiZmxvb3IiLCJDYWJpbmV0IiwibmV3Q29udm9sdmVyIiwiaW1wdWxzZVBhdGgiLCJtYWtldXBOb2RlIiwibWFrZXVwR2FpbiIsInNldFRhcmdldEF0VGltZSIsIkNvbnZvbHZlciIsImRyeUxldmVsIiwid2V0TGV2ZWwiLCJDaG9ydXMiLCJhdHRlbnVhdG9yIiwic3BsaXR0ZXIiLCJjcmVhdGVDaGFubmVsU3BsaXR0ZXIiLCJkZWxheUwiLCJkZWxheVIiLCJmZWVkYmFja0dhaW5Ob2RlTFIiLCJmZWVkYmFja0dhaW5Ob2RlUkwiLCJtZXJnZXIiLCJjcmVhdGVDaGFubmVsTWVyZ2VyIiwibGZvTCIsIkxGTyIsImxmb1IiLCJkZXB0aCIsInBoYXNlIiwiUEkiLCJfZGVsYXkiLCJfZGVwdGgiLCJvc2NpbGxhdGlvbiIsIl9mZWVkYmFjayIsIl9yYXRlIiwiQ29tcHJlc3NvciIsImNvbXBOb2RlIiwiYXV0b21ha2V1cCIsImNvbXB1dGVNYWtldXAiLCJfYXV0b21ha2V1cCIsImRyeSIsImZpbHRlckxvdyIsImZpbHRlckhpZ2giLCJoaWdoQ3V0IiwibG93Q3V0IiwibGV2ZWwiLCJ4aHIiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZWFkeVN0YXRlIiwic3RhdHVzIiwiRGVsYXkiLCJjdXRvZmYiLCJGaWx0ZXIiLCJyZXNvbmFuY2UiLCJmaWx0ZXJUeXBlIiwiR2FpbiIsImdhaW5Ob2RlIiwiTW9vZ0ZpbHRlciIsImluMSIsImluMiIsImluMyIsImluNCIsIm91dDEiLCJvdXQyIiwib3V0MyIsIm91dDQiLCJmIiwiZmIiLCJpbnB1dEZhY3RvciIsIk92ZXJkcml2ZSIsImlucHV0RHJpdmUiLCJ3YXZlc2hhcGVyIiwiY3JlYXRlV2F2ZVNoYXBlciIsIm91dHB1dERyaXZlIiwid3NfdGFibGUiLCJGbG9hdDMyQXJyYXkiLCJrX25TYW1wbGVzIiwiZHJpdmUiLCJvdXRwdXRHYWluIiwiY3VydmVBbW91bnQiLCJhbGdvcml0aG1JbmRleCIsInNjYWxlZCIsIl9kcml2ZSIsIl9jdXJ2ZUFtb3VudCIsIl9hbGdvcml0aG1JbmRleCIsIndhdmVzaGFwZXJBbGdvcml0aG1zIiwiY3VydmUiLCJfb3V0cHV0R2FpbiIsImFtb3VudCIsIm5fc2FtcGxlcyIsImsiLCJhIiwiYWJ4IiwiUGFubmVyIiwicGFubmVyIiwiUGhhc2VyIiwiZmlsdGVyc0wiLCJmaWx0ZXJzUiIsImZlZWRiYWNrR2Fpbk5vZGVMIiwiZmVlZGJhY2tHYWluTm9kZVIiLCJmaWx0ZXJlZFNpZ25hbCIsInN0YWdlIiwiYmFzZU1vZHVsYXRpb25GcmVxdWVuY3kiLCJzdGVyZW9QaGFzZSIsImZpbHRlcnMiLCJfYmFzZU1vZHVsYXRpb25GcmVxdWVuY3kiLCJfc3RlcmVvUGhhc2UiLCJuZXdQaGFzZSIsIl9waGFzZSIsIlBpbmdQb25nRGVsYXkiLCJzdGVyZW9Ub01vbm9NaXgiLCJmZWVkYmFja0xldmVsIiwiZGVsYXlMZWZ0IiwiZGVsYXlSaWdodCIsImRlbGF5VGltZUxlZnQiLCJkZWxheVRpbWVSaWdodCIsIl9kZWxheVRpbWVMZWZ0IiwiX2RlbGF5VGltZVJpZ2h0IiwiVHJlbW9sbyIsImFtcGxpdHVkZUwiLCJhbXBsaXR1ZGVSIiwiaW50ZW5zaXR5IiwiX2ludGVuc2l0eSIsIldhaFdhaCIsImVudmVsb3BlRm9sbG93ZXIiLCJFbnZlbG9wZUZvbGxvd2VyIiwic3dlZXAiLCJmaWx0ZXJCcCIsImZpbHRlclBlYWtpbmciLCJpbml0IiwiYXV0b21vZGUiLCJzZW5zaXRpdml0eSIsImJhc2VGcmVxdWVuY3kiLCJleGN1cnNpb25PY3RhdmVzIiwiX2F1dG9tb2RlIiwiZmlsdGVyRnJlcVRpbWVvdXQiLCJzZXRGaWx0ZXJGcmVxIiwiX2Jhc2VGcmVxdWVuY3kiLCJfZXhjdXJzaW9uRnJlcXVlbmN5IiwiX3N3ZWVwIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsIl9zZW5zaXRpdml0eSIsIl9leGN1cnNpb25PY3RhdmVzIiwiX3Jlc29uYW5jZSIsImpzTm9kZSIsImJ1ZmZlcnNpemUiLCJhdHRhY2tUaW1lIiwicmVsZWFzZVRpbWUiLCJfZW52ZWxvcGUiLCJlbnZlbG9wZSIsIl9hdHRhY2tUaW1lIiwiX2F0dGFja0MiLCJfcmVsZWFzZVRpbWUiLCJfcmVsZWFzZUMiLCJfY2FsbGJhY2siLCJfdGFyZ2V0IiwiYWN0aXZhdGVkIiwicmV0dXJuQ29tcHV0ZSIsImluc3RhbmNlIiwiZXZlbnQiLCJjb21wdXRlIiwiY3VycmVudCIsImNoYW4iLCJybXMiLCJjb3VudCIsImNoYW5uZWxzIiwibnVtYmVyT2ZDaGFubmVscyIsInNxcnQiLCJfZnJlcXVlbmN5IiwiX3BoYXNlSW5jIiwiX29mZnNldCIsIl9vc2NpbGxhdGlvbiIsInNpbiIsIndoaWNoIiwic3VjY2VzcyIsImZhaWx1cmUiLCJyZXF1ZXN0TUlESUFjY2VzcyIsIm9ubWlkaW1lc3NhZ2UiLCJyZWNlaXZlZFRpbWUiLCJkYXRhIiwibGFiZWwiLCJwZWRhbE1vZCIsIm9uU3VjY2Vzc0NhbGxiYWNrIiwibWlkaUFjY2VzcyIsImlucHV0cyIsInZhbHVlcyIsIm5leHQiLCJkb25lIiwib25FcnJvckNhbGxiYWNrIiwiZXJyIiwiYnVmIiwiVWludDhBcnJheSIsInZvbHVtZUF1ZGlvUHJvY2VzcyIsImJ1Zkxlbmd0aCIsInN1bSIsImNsaXBMZXZlbCIsImNsaXBwaW5nIiwibGFzdENsaXAiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImF2ZXJhZ2luZyIsIlBvbHl3YWQiLCJpc1NldFVwIiwiY2xpcExhZyIsIndhZHMiLCJjcmVhdGVBbmFseXNlciIsImZmdFNpemUiLCJhdWRpb01ldGVyIiwiY2hlY2tDbGlwcGluZyIsInNodXRkb3duIiwiY29uc3RydWN0RXh0ZXJuYWxGeCIsInVwZGF0ZVBpdGNoIiwidGltZSIsImdldEJ5dGVUaW1lRG9tYWluRGF0YSIsIm5vdGVOdW0iLCJhYyIsImJlc3Rfb2Zmc2V0IiwiYmVzdF9jb3JyZWxhdGlvbiIsImZvdW5kR29vZENvcnJlbGF0aW9uIiwibGFzdENvcnJlbGF0aW9uIiwiY29ycmVsYXRpb24iLCJhdXRvQ29ycmVsYXRlIiwibm90ZSIsIm5vdGVOYW1lIiwicmFmSUQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzdG9wVXBkYXRpbmdQaXRjaCIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwic2V0Vm9sdW1lIiwic2V0UGl0Y2giLCJhZGQiLCJyZW1vdmUiLCJzcGxpY2UiLCJfY2xhc3NDYWxsQ2hlY2siLCJDb25zdHJ1Y3RvciIsImxlZnQiLCJyaWdodCIsImhhc0luc3RhbmNlIiwiVHlwZUVycm9yIiwiX2RlZmluZVByb3BlcnRpZXMiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJjb25maWd1cmFibGUiLCJvYmoiLCJhc3NpZ24iLCJkZWZhdWx0QXJncyIsImZpbGVzIiwic291bmRzIiwicmFuZG9tU291bmRzIiwic2xpY2UiLCJyYW5kb20iLCJyYW5kb21QbGF5c0JlZm9yZVJlcGVhdCIsIndhaXRpbmdTb3VuZHMiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJfdGhpcyIsInNvdW5kSW5kZXgiLCJzb3VuZCIsImluZGV4T2YiLCJzb3VuZE9iaiIsInBsYXlzIiwicGxheWluZ1NvdW5kIiwiY29uY2F0IiwicmFuZG9tU291bmRJbmRleCIsImhpSGF0Q2xvc2VkIiwic25hcmUiLCJoaUhhdE9wZW4iLCJnaG9zdCIsInBpYW5vIiwiQXVkaW9QYXJhbSIsInNldEZ1bmMiLCJfc2V0RnVuYyIsIkF1ZGlvUGFyYW1hdXRvbWF0aW9uUmF0ZSIsImRlZmF1bHRWYWx1ZSIsIm1heFZhbHVlIiwibWluVmFsdWUiLCJfdmFsdWUiLCJ2IiwiZGVmYXVsdFZvbHVtZSIsImRldHVuZSIsInNwcml0ZSIsInRoYXRXYWQiLCJhbGxXYWRzIiwibGlzdGVuZXIiLCJfbGlzdGVuZXIiLCJwb3NpdGlvblgiLCJwb3NpdGlvblkiLCJwb3NpdGlvbloiLCJmb3J3YXJkWCIsInNldE9yaWVudGF0aW9uIiwiZm9yd2FyZFkiLCJmb3J3YXJkWiIsInVwWCIsInVwWSIsInVwWiIsIkZvcndhcmRZIiwieiIsIndhaXQiLCJjcmVhdGVCdWZmZXJTb3VyY2UiLCJsYXN0UGxheWVkVGltZSIsInVuc2hpZnQiLCJsaW5rTm9kZSIsIl9kZXN0aW5hdGlvbiIsIm9uZW5kZWQiLCJwbGF5UHJvbWlzZVJlc29sdmUiLCJzcyIsInVucGF1c2UiLCJwbGF5UHJvbWlzZSIsInRpbWVDb25zdGFudCIsInNldFJhdGUiLCJpbnB1dFNwZWVkIiwic2V0dGFyZ2V0QXRUaW1lIiwic2V0RGV0dW5lIiwic2V0UGFubmluZyIsInNldFJldmVyYiIsImlucHV0V2V0Iiwic2V0RGVsYXkiLCJpbnB1dFRpbWUiLCJpbnB1dEZlZWRiYWNrIiwicGF1c2UiLCJwYXVzZVRpbWUiLCJkaXNwYXRjaEV2ZW50IiwiRXZlbnQiLCJzdG9wQWxsIiwib3JpZ2luYWxNb2R1bGUiLCJ3ZWJwYWNrUG9seWZpbGwiLCJjaGlsZHJlbiIsIlNUQVRFIiwidHJhY2tzIiwiaW50ZXJ2YWwiLCJicG0iLCJfZnJhbWVDb3VudCIsIl9za2lwRnJhbWUiLCJfc3RvcE1hcmsiLCJfbmFtZSIsIl9jcmVhdGUiLCJpbnN0IiwiX3R5cGUiLCJfbWFwIiwic3ludGgiLCJvblRyaWdnZXIiLCJfcGxheSIsInNldE1hcCIsInNwbGl0IiwicGF0dGVybiIsImZ1bmMiLCJfb25GcmFtZSIsImlzU3RvcCIsInRyYWNrIiwiX2xhc3RTeW50aCIsInN0b3BPbk5leHQiLCJub3RlcyIsImFkZE5vdGUiLCJfYWRkTm90ZSIsIl90Iiwibm90ZV90IiwiX2RhdGEiLCJzZXRCcG0iLCJ0cmFjazEiLCJ0cmFjazIiLCJ0cmFjazMiLCJ0cmFjazQiLCJzZXRDcmVhdGUiLCJzcXVhcmUiLCJjaG9yZCIsImFkZFBhdHRlcm4iLCJjaG9yZDIiLCJjaG9yZDMiLCJjaG9yZDQiLCJzeW50aDFfcGF0dGVybiIsImFkZFRyYWNrIiwic2V0VHJhY2sxIiwic2F3dG9vdGgiLCJzZXRUcmFjazIiLCJ0cmlhbmdsZSIsInNldFRyYWNrMyIsImJhc2VEcnVtIiwic2V0VHJhY2s0IiwicGlhbm8yIiwidHJhY2s1IiwiY2hvcmQxIiwicnl0aG0xIiwicHJlU2VjdGlvbiIsInNlY3Rpb24xIiwic2VjdGlvbjIiLCJzZWN0aW9uMyIsInNlY3Rpb240Iiwic2VjdGlvbjUiLCJtYWluIiwiZHJ1bSIsInB0MSIsInB0MiIsInB0MyIsInNldERydW0iLCJwdCIsInNlY3Rpb24iLCJzZXRUcmFja1N5bnRoIiwiYmFzcyIsInNldFRyYWNrQmFzcyIsInRyIiwiZ2V0RWxlbWVudEJ5SWQiLCJvbmNsaWNrIiwiYWxlcnQiLCJsaXN0Iiwic29uZyIsImRlbW8xIiwiY2xhbm5hZCIsInBlcmZvcm1hbmNlX3Rlc3QiLCJkb21fbGlzdCIsImlubmVySFRNTCIsIm5ld19kb20iLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlIiwiX2luZGV4IiwiaW5uZXJUZXh0IiwibmV3X2xpIiwiYXBwZW5kQ2hpbGQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FDbkIsT0FBT0YsRUFBaUJFLEdBQVVDLFFBR25DLElBQUlDLEVBQVNKLEVBQWlCRSxHQUFZLENBQ3pDRyxFQUFHSCxFQUNISSxHQUFHLEVBQ0hILFFBQVMsSUFVVixPQU5BSSxFQUFRTCxHQUFVTSxLQUFLSixFQUFPRCxRQUFTQyxFQUFRQSxFQUFPRCxRQUFTRixHQUcvREcsRUFBT0UsR0FBSSxFQUdKRixFQUFPRCxRQUtmRixFQUFvQlEsRUFBSUYsRUFHeEJOLEVBQW9CUyxFQUFJVixFQUd4QkMsRUFBb0JVLEVBQUksU0FBU1IsRUFBU1MsRUFBTUMsR0FDM0NaLEVBQW9CYSxFQUFFWCxFQUFTUyxJQUNsQ0csT0FBT0MsZUFBZWIsRUFBU1MsRUFBTSxDQUFFSyxZQUFZLEVBQU1DLElBQUtMLEtBS2hFWixFQUFvQmtCLEVBQUksU0FBU2hCLEdBQ1gsb0JBQVhpQixRQUEwQkEsT0FBT0MsYUFDMUNOLE9BQU9DLGVBQWViLEVBQVNpQixPQUFPQyxZQUFhLENBQUVDLE1BQU8sV0FFN0RQLE9BQU9DLGVBQWViLEVBQVMsYUFBYyxDQUFFbUIsT0FBTyxLQVF2RHJCLEVBQW9Cc0IsRUFBSSxTQUFTRCxFQUFPRSxHQUV2QyxHQURVLEVB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Q0FDNUIsSUFBSUMsRUFBYSxJQUFJRixFQUFLck0sR0FBS3NNLEVBQVd0TSxJQUMxQ3lELEVBQUt1RSxNQUFNYSxLQUFLMEQsTSxpR0M1bkJsQixJQUFJQyxFQUFVLENBQ2IsR0FBUSxLQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxHQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxJQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxJQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxJQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxPQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxJQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLE9BQ1IsR0FBUSxPQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsSUFBUSxRQUNSLEdBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxLQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLEtBQ1IsR0FBUSxLQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxLQUNSLE1BQVEsUUFDUixJQUFRLFFBQ1IsR0FBUSxRQUNSLElBQVEsUUFDUixNQUFRLFFBQ1IsR0FBUSxTQUlMQyxFQUFlLENBQ2xCLEtBQ0EsTUFDQSxLQUNBLE1BQ0EsS0FDQSxLQUNBLE1BQ0EsS0FDQSxNQUNBLEtBQ0EsTUFDQSxLQUNBLEtBQ0EsTUFDQSxLQUNBLE1BQ0EsS0FDQSxLQUNBLE1BQ0EsS0FDQSxNQUNBLEtBQ0EsTUFDQSxLQUNBLEtBQ0EsTUFDQSxLQUNBLE1BQ0EsS0FDQSxLQUNB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SyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUNyRzhCLEVBQVE5QixXQUFXLEVBQU0sQ0FBQyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxLQUFLLEtBQUssS0FBSyxPQUdyRyxJQUFJa0MsRUFBRyxJQUFJLEVBQ1hBLEVBQUdsQyxXQUFXOEIsR0FDZEksRUFBR2xDLFdBQVc4QixHQUNkSSxFQUFHbEMsV0FBVzhCLEdBQ2RJLEVBQUdsQyxXQUFXOEIsR0FDZEksRUFBR2xDLFdBQVc4QixHQUNkSSxFQUFHbEMsV0FBVzhCLEdBQ2RJLEVBQUdsQyxXQUFXOEIsR0FDZEksRUFBR2xDLFdBQVc4QixHQUNkSSxFQUFHbEMsV0FBVzhCLEdBQ2QsRUFBT3pCLFNBQVM2QixLQUlMLFFDeEVYLEVBQU8sS0FDWDNwQixTQUFTNHBCLGVBQWUsTUFBTUMsUUFBVSxXQUN6QixNQUFSLEVBSUgsRUFBTzNsQixPQUhINGxCLE1BQU0sd0JBS2Q5cEIsU0FBUzRwQixlQUFlLFVBQVVDLFFBQVUsV0FDN0IsTUFBUixFQUlILEVBQU9waEIsT0FISHFoQixNQUFNLHdCQUtkOXBCLFNBQVM0cEIsZUFBZSxXQUFXQyxRQUFVLFdBQzlCLE1BQVIsRUFJSCxFQUFPbEYsUUFISG1GLE1BQU0sd0JBTWQsSUFBSUMsRUFBSyxDQUNMLENBQUN0c0IsS0FBSyxRQUFRdXNCLEtBQUtDLEdBQ25CLENBQUN4c0IsS0FBSyxNQUFNdXNCLEtBQUtFLEdBQ2pCLENBQUN6c0IsS0FBSyxtQkFBbUJ1c0IsS0FBS0csSUFJOUJDLEVBQVNwcUIsU0FBU0MsY0FBYyxTQUVwQ21xQixFQUFTQyxVQUFVLEdBRW5CLElBQUksSUFBSXJpQixFQUFNLEVBQUVBLEVBQU0raEIsRUFBS2xoQixPQUFPYixJQUFRLENBQ3RDLElBQUlzaUIsRUFBUXRxQixTQUFTdXFCLGNBQWMsS0FDbkNELEVBQVFFLGFBQWEsT0FBTyx1QkFDNUIsSUFBSUMsRUFBT3ppQixFQUNYc2lCLEVBQVFULFFBQVEsS0FDWjdwQixTQUFTQyxjQUFjLE1BQU15cUIsVUFBVVgsRUFBS1UsR0FBUWh0QixLQUNwRCxFQUFPc3NCLEVBQUtVLEdBQVFULE1BRXhCTSxFQUFRRCxVQUFVTixFQUFLL2hCLEdBQU92SyxLQUM5QixJQUFJa3RCLEVBQU8zcUIsU0FBU3VxQixjQUFjLE1BQ2xDSSxFQUFPQyxZQUFZTixHQUNuQkYsRUFBU1EsWUFBWUQsR0FHekIzcUIsU0FBU0MsY0FBYyxNQUFNeXFCLFVBQVVYLEVBQUssR0FBR3RzQixLQUMvQyxFQUFPc3NCLEVBQUssR0FBR0MiLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDEwKTtcbiIsImltcG9ydCBUdW5hIGZyb20gJ3R1bmFqcyc7XG5pbXBvcnQgUG9seXdhZCBmcm9tICcuL3BvbHl3YWQnO1xuaW1wb3J0IHsgcGl0Y2hlcyB9IGZyb20gJy4vcGl0Y2hlcyc7XG5cblxubGV0IGF1ZGlvQ29udGV4dCA9IHdpbmRvdy5BdWRpb0NvbnRleHQgfHwgd2luZG93LndlYmtpdEF1ZGlvQ29udGV4dDtcblxubGV0IGxvZ1N0dWZmID0ge1xuXHR2ZXJib3NpdHk6IDAsXG5cdHN1cHByZXNzZWRMb2dzOiAwXG59O1xuXG5sZXQgbG9nTWVzc2FnZSA9IGZ1bmN0aW9uKG1lc3NhZ2UsIGxvZ0xldmVsKXtcblx0bG9nTGV2ZWwgPSBsb2dMZXZlbCB8fCAxO1xuXHRpZiAoIGxvZ1N0dWZmLnZlcmJvc2l0eSA+PSBsb2dMZXZlbCApIHtcblx0XHRjb25zb2xlLmxvZyhtZXNzYWdlKTtcblx0fSBcblx0ZWxzZSB7IGxvZ1N0dWZmLnN1cHByZXNzZWRMb2dzKys7IH1cbn07XG4gICAgXG5sZXQgYVNjZW5lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignYS1zY2VuZScpO1xubGV0IGNvbnRleHQ7XG5pZiAoIGFTY2VuZSAmJiBhU2NlbmUuYXVkaW9MaXN0ZW5lciAmJiBhU2NlbmUuYXVkaW9MaXN0ZW5lci5jb250ZXh0KXtcblx0Y29udGV4dCA9IGFTY2VuZS5hdWRpb0xpc3RlbmVyLmNvbnRleHQ7XG5cdGxvZ01lc3NhZ2UoJ0FuIEEtRnJhbWUgc2NlbmUgaGFzIGJlZW4gZGV0ZWN0ZWQuJyk7XG59XG5lbHNlIHtcblx0Y29udGV4dCA9IG5ldyBhdWRpb0NvbnRleHQoKTtcbn1cblxubGV0IHVubG9jayA9IGZ1bmN0aW9uKCl7XG5cdGxvZ01lc3NhZ2UoJ3VubG9jaycsIDIpO1xuXHRpZiAoIGNvbnRleHQuc3RhdGUgPT09ICdzdXNwZW5kZWQnICkge1xuXHRcdGxvZ01lc3NhZ2UoJ3N1c3BlbmRlZCcsIDIpO1xuXHRcdGNvbnRleHQucmVzdW1lKCk7XG5cdH1cblx0ZWxzZSBpZiAoIGNvbnRleHQuc3RhdGUgPT09ICdydW5uaW5nJyApIHtcblx0XHRsb2dNZXNzYWdlKCdUaGUgYXVkaW8gY29udGV4dCBpcyBydW5uaW5nLicsIDIpO1xuXHRcdGxvZ01lc3NhZ2UoY29udGV4dCwgMik7XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbW92ZScsIHVubG9jayk7XG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoc3RhcnQnLCB1bmxvY2spO1xuXHRcdHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHVubG9jayk7XG5cdH1cbn07XG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgdW5sb2NrKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdW5sb2NrKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHVubG9jayk7XG4vLyBjcmVhdGUgYSB3cmFwcGVyIGZvciBvbGQgdmVyc2lvbnMgb2YgYGdldFVzZXJNZWRpYWBcbmxldCBnZXRVc2VyTWVkaWEgPSAoZnVuY3Rpb24od2luZG93KSB7XG5cdGlmICh3aW5kb3cubmF2aWdhdG9yLm1lZGlhRGV2aWNlcyAmJiB3aW5kb3cubmF2aWdhdG9yLm1lZGlhRGV2aWNlcy5nZXRVc2VyTWVkaWEpIHtcblx0XHQvLyBCcm93c2VyIHN1cHBvcnRzIHByb21pc2UgYmFzZWQgYGdldFVzZXJNZWRpYWBcblx0XHRyZXR1cm4gd2luZG93Lm5hdmlnYXRvci5tZWRpYURldmljZXMuZ2V0VXNlck1lZGlhLmJpbmQod2luZG93Lm5hdmlnYXRvci5tZWRpYURldmljZXMpO1xuXHR9XG5cdGxldCBuYXZpZ2F0b3JHZXRVc2VyTWVkaWEgPSB3aW5kb3cubmF2aWdhdG9yLmdldFVzZXJNZWRpYSB8fCB3aW5kb3cubmF2aWdhdG9yLndlYmtpdEdldFVzZXJNZWRpYSB8fCB3aW5kb3cubmF2aWdhdG9yLm1vekdldFVzZXJNZWRpYTtcblx0aWYgKG5hdmlnYXRvckdldFVzZXJNZWRpYSkge1xuXHRcdC8vIEJyb3dzZXIgc3VwcG9ydHMgb2xkIGBnZXRVc2VyTWVkaWFgIHdpdGggY2FsbGJhY2tzLlxuXHRcdHJldHVybiBmdW5jdGlvbihjb25zdHJhaW50cykge1xuXHRcdFx0cmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xuXHRcdFx0XHRuYXZpZ2F0b3JHZXRVc2VyTWVkaWEuY2FsbCh3aW5kb3cubmF2aWdhdG9yLCBjb25zdHJhaW50cywgcmVzb2x2ZSwgcmVqZWN0KTtcblx0XHRcdH0pO1xuXHRcdH07XG5cdH1cbiAgICBcblx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93ICdnZXRVc2VyTWVkaWEgaXMgdW5zdXBwb3J0ZWQnO1xuXHR9O1xufSh3aW5kb3cpKTtcbiAgICBcbmlmIChnZXRVc2VyTWVkaWEpIHsgbG9nTWVzc2FnZSgnWW91ciBicm93c2VyIHN1cHBvcnRzIGdldFVzZXJNZWRpYS4nKTsgfVxuZWxzZSB7IGxvZ01lc3NhZ2UoJ1lvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IGdldFVzZXJNZWRpYS4nKTsgfVxuXG5cbi8qKiBQcmUtcmVuZGVyIGEgbm9pc2UgYnVmZmVyIGluc3RlYWQgb2YgZ2VuZXJhdGluZyBub2lzZSBvbiB0aGUgZmx5LiAqKi9cbmxldCBub2lzZUJ1ZmZlciA9IChmdW5jdGlvbigpe1xuXHQvLyB0aGUgaW5pdGlhbCBzZWVkXG5cdE1hdGguc2VlZCA9IDY7XG5cdE1hdGguc2VlZGVkUmFuZG9tID0gZnVuY3Rpb24obWF4LCBtaW4pe1xuXHRcdG1heCA9IG1heCB8fCAxO1xuXHRcdG1pbiA9IG1pbiB8fCAwO1xuXHRcdE1hdGguc2VlZCA9ICggTWF0aC5zZWVkICogOTMwMSArIDQ5Mjk3ICkgJSAyMzMyODA7XG5cdFx0dmFyIHJuZCA9IE1hdGguc2VlZCAvIDIzMzI4MDtcblxuXHRcdHJldHVybiBtaW4gKyBybmQgKiAobWF4IC0gbWluKTtcblx0fTtcblx0dmFyIGJ1ZmZlclNpemUgPSAyICogY29udGV4dC5zYW1wbGVSYXRlO1xuXHR2YXIgbm9pc2VCdWZmZXIgPSBjb250ZXh0LmNyZWF0ZUJ1ZmZlcigxLCBidWZmZXJTaXplLCBjb250ZXh0LnNhbXBsZVJhdGUpO1xuXHR2YXIgb3V0cHV0ID0gbm9pc2VCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCk7XG5cdGZvciAoIHZhciBpID0gMDsgaSA8IGJ1ZmZlclNpemU7IGkrKyApIHtcblx0XHRvdXRwdXRbaV0gPSBNYXRoLnNlZWRlZFJhbmRvbSgpICogMiAtIDE7XG5cdH1cblx0cmV0dXJuIG5vaXNlQnVmZmVyO1xufSkoKTtcblxuXG4vKiogYSBsaWwgaGFjay4ganVzdCBiZSBnbGFkIGl0IGlzbid0IG9uIE9iamVjdC5wcm90b3R5cGUuICoqL1xubGV0IGlzQXJyYXkgPSBmdW5jdGlvbihvYmplY3Qpe1xuXHRyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG9iamVjdCkgPT09ICdbb2JqZWN0IEFycmF5XSc7XG59O1xubGV0IHZhbHVlT3JEZWZhdWx0ID0gZnVuY3Rpb24odmFsdWUsIGRlZikge1xuXHR2YXIgdmFsID0gKHZhbHVlID09IG51bGwpID8gZGVmIDogdmFsdWU7XG5cdHJldHVybiB2YWw7XG59O1xuXG4vKiogU2V0IHVwIHRoZSBkZWZhdWx0IEFEU1IgZW52ZWxvcGUuICoqL1xubGV0IGNvbnN0cnVjdEVudiA9IGZ1bmN0aW9uKHRoYXQsIGFyZyl7XG5cdHRoYXQuZW52ID0geyAvL2RlZmF1bHQgZW52ZWxvcGUsIGlmIG9uZSBpcyBub3Qgc3BlY2lmaWVkIG9uIHBsYXlcblx0XHRhdHRhY2sgIDogYXJnLmVudiA/IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYuYXR0YWNrLCAgMCkgOiAwLCAgICAvLyB0aW1lIGluIHNlY29uZHMgZnJvbSBvbnNldCB0byBwZWFrIHZvbHVtZVxuXHRcdGRlY2F5ICAgOiBhcmcuZW52ID8gdmFsdWVPckRlZmF1bHQoYXJnLmVudi5kZWNheSwgICAwKSA6IDAsICAgIC8vIHRpbWUgaW4gc2Vjb25kcyBmcm9tIHBlYWsgdm9sdW1lIHRvIHN1c3RhaW4gdm9sdW1lXG5cdFx0c3VzdGFpbiA6IGFyZy5lbnYgPyB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LnN1c3RhaW4sIDEpIDogMSwgICAgLy8gc3VzdGFpbiB2b2x1bWUgbGV2ZWwsIGFzIGEgcGVyY2VudCBvZiBwZWFrIHZvbHVtZS4gbWluOjAsIG1heDoxXG5cdFx0aG9sZCAgICA6IGFyZy5lbnYgPyB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LmhvbGQsIDMuMTQxNTkpIDogMy4xNDE1OSwgLy8gdGltZSBpbiBzZWNvbmRzIHRvIG1haW50YWluIHN1c3RhaW4gdm9sdW1lXG5cdFx0cmVsZWFzZSA6IGFyZy5lbnYgPyB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LnJlbGVhc2UsIDApIDogMCAgICAgLy8gdGltZSBpbiBzZWNvbmRzIGZyb20gc3VzdGFpbiB2b2x1bWUgdG8gemVybyB2b2x1bWVcblx0fTtcblx0dGhhdC5kZWZhdWx0RW52ID0ge1xuXHRcdGF0dGFjayAgOiBhcmcuZW52ID8gdmFsdWVPckRlZmF1bHQoYXJnLmVudi5hdHRhY2ssICAwKSA6IDAsICAgIC8vIHRpbWUgaW4gc2Vjb25kcyBmcm9tIG9uc2V0IHRvIHBlYWsgdm9sdW1lXG5cdFx0ZGVjYXkgICA6IGFyZy5lbnYgPyB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LmRlY2F5LCAgIDApIDogMCwgICAgLy8gdGltZSBpbiBzZWNvbmRzIGZyb20gcGVhayB2b2x1bWUgdG8gc3VzdGFpbiB2b2x1bWVcblx0XHRzdXN0YWluIDogYXJnLmVudiA/IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYuc3VzdGFpbiwgMSkgOiAxLCAgICAvLyBzdXN0YWluIHZvbHVtZSBsZXZlbCwgYXMgYSBwZXJjZW50IG9mIHBlYWsgdm9sdW1lLiBtaW46MCwgbWF4OjFcblx0XHRob2xkICAgIDogYXJnLmVudiA/IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYuaG9sZCwgMy4xNDE1OSkgOiAzLjE0MTU5LCAvLyB0aW1lIGluIHNlY29uZHMgdG8gbWFpbnRhaW4gc3VzdGFpbiB2b2x1bWVcblx0XHRyZWxlYXNlIDogYXJnLmVudiA/IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYucmVsZWFzZSwgMCkgOiAwICAgICAvLyB0aW1lIGluIHNlY29uZHMgZnJvbSBzdXN0YWluIHZvbHVtZSB0byB6ZXJvIHZvbHVtZVxuXHR9O1xuXHR0aGF0LnVzZXJTZXRIb2xkID0gISEoYXJnLmVudiAmJiBhcmcuZW52LmhvbGQpO1xufTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLyoqIFNldCB1cCB0aGUgZGVmYXVsdCBmaWx0ZXIgYW5kIGZpbHRlciBlbnZlbG9wZS4gKiovXG5sZXQgY29uc3RydWN0RmlsdGVyID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblxuXHRpZiAoICFhcmcuZmlsdGVyICkgeyBhcmcuZmlsdGVyID0gbnVsbDsgfVxuXG5cdGVsc2UgaWYgKCBpc0FycmF5KGFyZy5maWx0ZXIpICkge1xuXHRcdHRoYXQuZmlsdGVyID0gYXJnLmZpbHRlci5tYXAoZnVuY3Rpb24oZmlsdGVyQXJnKXtcblx0XHRcdHJldHVybiB7XG5cdFx0XHRcdHR5cGUgOiBmaWx0ZXJBcmcudHlwZSB8fCAnbG93cGFzcycsXG5cdFx0XHRcdGZyZXF1ZW5jeSA6IGZpbHRlckFyZy5mcmVxdWVuY3kgfHwgNjAwLFxuXHRcdFx0XHRxIDogZmlsdGVyQXJnLnEgfHwgMSxcblx0XHRcdFx0ZW52IDogZmlsdGVyQXJnLmVudiB8fCBudWxsLFxuXHRcdFx0fTtcblx0XHR9KTtcblx0fVxuXHRlbHNlIHtcblx0XHR0aGF0LmZpbHRlciAgPSBbe1xuXHRcdFx0dHlwZSA6IGFyZy5maWx0ZXIudHlwZSB8fCAnbG93cGFzcycsXG5cdFx0XHRmcmVxdWVuY3kgOiBhcmcuZmlsdGVyLmZyZXF1ZW5jeSB8fCA2MDAsXG5cdFx0XHRxIDogYXJnLmZpbHRlci5xIHx8IDEsXG5cdFx0XHRlbnYgOiBhcmcuZmlsdGVyLmVudiB8fG51bGwsXG5cdFx0fV07XG5cdH1cbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vKiogSWYgdGhlIFdhZCB1c2VzIGFuIGF1ZGlvIGZpbGUgYXMgdGhlIHNvdXJjZSwgcmVxdWVzdCBpdCBmcm9tIHRoZSBzZXJ2ZXIuXG5Eb24ndCBsZXQgdGhlIFdhZCBwbGF5IHVudGlsIGFsbCBuZWNlc3NhcnkgZmlsZXMgaGF2ZSBiZWVuIGRvd25sb2FkZWQuICoqL1xubGV0IHJlcXVlc3RBdWRpb0ZpbGUgPSBmdW5jdGlvbih0aGF0LCBjYWxsYmFjayl7XG5cdHZhciByZXF1ZXN0ID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7XG5cdHJlcXVlc3Qub3BlbignR0VUJywgdGhhdC5zb3VyY2UsIHRydWUpO1xuXHRyZXF1ZXN0LnJlc3BvbnNlVHlwZSA9ICdhcnJheWJ1ZmZlcic7XG5cdHRoYXQucGxheWFibGUtLTtcblx0cmVxdWVzdC5vbmxvYWQgPSBmdW5jdGlvbigpe1xuXHRcdGNvbnRleHQuZGVjb2RlQXVkaW9EYXRhKHJlcXVlc3QucmVzcG9uc2UsIGZ1bmN0aW9uIChkZWNvZGVkQnVmZmVyKXtcblx0XHRcdHRoYXQuZGVjb2RlZEJ1ZmZlciA9IGRlY29kZWRCdWZmZXI7XG5cdFx0XHRpZiAoIHRoYXQuZW52LmhvbGQgPT09IDMuMTQxNTkgKSB7IC8vIGF1ZGlvIGJ1ZmZlcnMgc2hvdWxkIG5vdCB1c2UgdGhlIGRlZmF1bHQgaG9sZFxuXHRcdFx0XHR0aGF0LmRlZmF1bHRFbnYuaG9sZCA9IHRoYXQuZGVjb2RlZEJ1ZmZlci5kdXJhdGlvbiAqICggMSAvIHRoYXQucmF0ZSApO1xuXHRcdFx0XHR0aGF0LmVudi5ob2xkID0gdGhhdC5kZWNvZGVkQnVmZmVyLmR1cmF0aW9uICogKCAxIC8gdGhhdC5yYXRlICk7XG5cdFx0XHR9XG5cdFx0XHR0aGF0LmR1cmF0aW9uID0gdGhhdC5lbnYuaG9sZCAqIDEwMDA7XG5cblx0XHRcdGlmICggY2FsbGJhY2sgKSB7IGNhbGxiYWNrKHRoYXQpOyB9XG5cdFx0XHR0aGF0LnBsYXlhYmxlKys7XG5cdFx0XHRpZiAoIHRoYXQucGxheU9uTG9hZCApIHsgdGhhdC5wbGF5KHRoYXQucGxheU9uTG9hZEFyZyk7IH1cblx0XHR9KTtcblx0fTtcblx0cmVxdWVzdC5zZW5kKCk7XG59O1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuLyoqIFNldCB1cCB0aGUgdmlicmF0byBMRk8gKiovXG5sZXQgY29uc3RydWN0VmlicmF0byA9IGZ1bmN0aW9uKHRoYXQsIGFyZyl7XG5cdGlmICggYXJnLnZpYnJhdG8gKSB7XG5cdFx0dGhhdC52aWJyYXRvID0ge1xuXHRcdFx0c2hhcGUgICAgIDogdmFsdWVPckRlZmF1bHQoYXJnLnZpYnJhdG8uc2hhcGUsICdzaW5lJyksXG5cdFx0XHRzcGVlZCAgICAgOiB2YWx1ZU9yRGVmYXVsdChhcmcudmlicmF0by5zcGVlZCwgMSksXG5cdFx0XHRtYWduaXR1ZGUgOiB2YWx1ZU9yRGVmYXVsdChhcmcudmlicmF0by5tYWduaXR1ZGUsIDUpLFxuXHRcdFx0YXR0YWNrICAgIDogdmFsdWVPckRlZmF1bHQoYXJnLnZpYnJhdG8uYXR0YWNrLCAwKVxuXHRcdH07XG5cdH1cblx0ZWxzZSB7IHRoYXQudmlicmF0byA9IG51bGw7IH1cbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vKiogU2V0IHVwIHRoZSB0cmVtb2xvIExGTyAqKi9cbmxldCBjb25zdHJ1Y3RUcmVtb2xvID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0aWYgKCBhcmcudHJlbW9sbyApIHtcblx0XHR0aGF0LnRyZW1vbG8gPSB7XG5cdFx0XHRzaGFwZSAgICAgOiB2YWx1ZU9yRGVmYXVsdChhcmcudHJlbW9sby5zaGFwZSwgJ3NpbmUnKSxcblx0XHRcdHNwZWVkICAgICA6IHZhbHVlT3JEZWZhdWx0KGFyZy50cmVtb2xvLnNwZWVkLCAxKSxcblx0XHRcdG1hZ25pdHVkZSA6IHZhbHVlT3JEZWZhdWx0KGFyZy50cmVtb2xvLm1hZ25pdHVkZSwgNSksXG5cdFx0XHRhdHRhY2sgICAgOiB2YWx1ZU9yRGVmYXVsdChhcmcudHJlbW9sby5hdHRhY2ssIDEpXG5cdFx0fTtcblx0fVxuXHRlbHNlIHsgdGhhdC50cmVtb2xvID0gbnVsbDsgfVxufTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG4vKiogR3JhYiB0aGUgcmV2ZXJiIGltcHVsc2UgcmVzcG9uc2UgZmlsZSBmcm9tIGEgc2VydmVyLlxuWW91IG1heSB3YW50IHRvIGNoYW5nZSBXYWQuZGVmYXVsdEltcHVsc2UgdG8gc2VydmUgZmlsZXMgZnJvbSB5b3VyIG93biBzZXJ2ZXIuXG5DaGVjayBvdXQgaHR0cDovL3d3dy52b3hlbmdvLmNvbS9pbXB1bHNlcy8gZm9yIGZyZWUgaW1wdWxzZSByZXNwb25zZXMuICoqL1xubGV0IGRlZmF1bHRJbXB1bHNlID0gJ2h0dHBzOi8vZnJpdm9sb3VzLmJpei9hdWRpby93aWRlaGFsbC53YXYnO1xuXG5sZXQgY29uc3RydWN0UmV2ZXJiID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0aWYgKCBhcmcucmV2ZXJiICkge1xuXHRcdHRoYXQucmV2ZXJiID0geyB3ZXQgOiB2YWx1ZU9yRGVmYXVsdChhcmcucmV2ZXJiLndldCwgMSkgfTtcblx0XHR2YXIgaW1wdWxzZVVSTCA9IGFyZy5yZXZlcmIuaW1wdWxzZSB8fCBkZWZhdWx0SW1wdWxzZTtcblx0XHR2YXIgcmVxdWVzdCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuXHRcdHJlcXVlc3Qub3BlbignR0VUJywgaW1wdWxzZVVSTCwgdHJ1ZSk7XG5cdFx0cmVxdWVzdC5yZXNwb25zZVR5cGUgPSAnYXJyYXlidWZmZXInO1xuXHRcdHRoYXQucGxheWFibGUtLTtcblx0XHRyZXF1ZXN0Lm9ubG9hZCA9IGZ1bmN0aW9uKCl7XG5cdFx0XHRjb250ZXh0LmRlY29kZUF1ZGlvRGF0YShyZXF1ZXN0LnJlc3BvbnNlLCBmdW5jdGlvbiAoZGVjb2RlZEJ1ZmZlcil7XG5cblx0XHRcdFx0dGhhdC5yZXZlcmIuYnVmZmVyID0gZGVjb2RlZEJ1ZmZlcjtcblx0XHRcdFx0dGhhdC5wbGF5YWJsZSsrO1xuXHRcdFx0XHRpZiAoIHRoYXQucGxheU9uTG9hZCApIHsgdGhhdC5wbGF5KHRoYXQucGxheU9uTG9hZEFyZyk7IH1cblx0XHRcdFx0aWYgKCB0aGF0IGluc3RhbmNlb2YgUG9seXdhZCApIHsgdGhhdC5zZXRVcChhcmcpOyB9XG5cdFx0XHRcdGlmICggdGhhdC5zb3VyY2UgPT09ICdtaWMnICYmIHRoYXQucmV2ZXJiICYmIHRoYXQucmV2ZXJiLmJ1ZmZlciAmJiB0aGF0LnJldmVyYi5ub2RlICYmICF0aGF0LnJldmVyYi5ub2RlLmJ1ZmZlciApIHsgLy8gSSB0aGluayB0aGlzIGlzIG9ubHkgcmVsZXZhbnQgd2hlbiBjYWxsaW5nIHBsYXkoKSB3aXRoIGFyZ3Mgb24gYSBtaWNcblx0XHRcdFx0XHR0aGF0LnJldmVyYi5ub2RlLmNvbnZvbHZlci5idWZmZXIgPSB0aGF0LnJldmVyYi5idWZmZXI7XG5cdFx0XHRcdH1cblxuXHRcdFx0fSk7XG5cdFx0fTtcblx0XHRyZXF1ZXN0LnNlbmQoKTtcblx0fVxuXHRlbHNlIHtcblx0XHR0aGF0LnJldmVyYiA9IG51bGw7XG5cdH1cbn07XG5cbmxldCBjb25zdHJ1Y3RQYW5uaW5nID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0aWYgKCAncGFubmluZycgaW4gYXJnICkge1xuXHRcdHRoYXQucGFubmluZyA9IHsgbG9jYXRpb24gOiBhcmcucGFubmluZyB9O1xuXHRcdGlmICggdHlwZW9mKGFyZy5wYW5uaW5nKSA9PT0gJ251bWJlcicgKSB7XG5cdFx0XHR0aGF0LnBhbm5pbmcudHlwZSA9ICdzdGVyZW8nO1xuXHRcdH1cblxuXHRcdGVsc2Uge1xuXHRcdFx0dGhhdC5wYW5uaW5nLnR5cGUgPSAnM2QnO1xuXHRcdFx0dGhhdC5wYW5uaW5nLnBhbm5pbmdNb2RlbCAgID0gYXJnLnBhbm5pbmdNb2RlbCB8fCAnZXF1YWxwb3dlcic7XG5cdFx0XHR0aGF0LnBhbm5pbmcuZGlzdGFuY2VNb2RlbCAgPSBhcmcuZGlzdGFuY2VNb2RlbDsgXG5cdFx0XHR0aGF0LnBhbm5pbmcubWF4RGlzdGFuY2UgICAgPSBhcmcubWF4RGlzdGFuY2U7IFxuXHRcdFx0dGhhdC5wYW5uaW5nLnJvbGxvZmZGYWN0b3IgID0gYXJnLnJvbGxvZmZGYWN0b3I7XG5cdFx0XHR0aGF0LnBhbm5pbmcucmVmRGlzdGFuY2UgICAgPSBhcmcucmVmRGlzdGFuY2U7XG5cdFx0XHR0aGF0LnBhbm5pbmcuY29uZUlubmVyQW5nbGUgPSBhcmcuY29uZUlubmVyQW5nbGU7XG5cdFx0XHR0aGF0LnBhbm5pbmcuY29uZU91dGVyQW5nbGUgPSBhcmcuY29uZU91dGVyQW5nbGU7XG5cdFx0XHR0aGF0LnBhbm5pbmcuY29uZU91dGVyR2FpbiAgPSBhcmcuY29uZU91dGVyR2Fpbjtcblx0XHR9XG5cdH1cblxuXHRlbHNlIHtcblx0XHR0aGF0LnBhbm5pbmcgPSB7XG5cdFx0XHRsb2NhdGlvbiA6IDAsXG5cdFx0XHR0eXBlICAgICA6ICdzdGVyZW8nLFxuXHRcdH07XG5cdH1cblx0aWYgKCB0aGF0LnBhbm5pbmcudHlwZSA9PT0gJ3N0ZXJlbycgJiYgIWNvbnRleHQuY3JlYXRlU3RlcmVvUGFubmVyICkge1xuXHRcdGxvZ01lc3NhZ2UoJ1lvdXIgYnJvd3NlciBkb2VzIG5vdCBzdXBwb3J0IHN0ZXJlbyBwYW5uaW5nLiBGYWxsaW5nIGJhY2sgdG8gM0QgcGFubmluZy4nKTtcblx0XHR0aGF0LnBhbm5pbmcgPSB7XG5cdFx0XHRsb2NhdGlvbiAgICAgOiBbMCwwLDBdLFxuXHRcdFx0dHlwZSAgICAgICAgIDogJzNkJyxcblx0XHRcdHBhbm5pbmdNb2RlbCA6ICdlcXVhbHBvd2VyJyxcblx0XHR9O1xuXHR9XG59O1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5sZXQgY29uc3RydWN0RGVsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoIGFyZy5kZWxheSApIHtcblx0XHR0aGF0LmRlbGF5ID0ge1xuXHRcdFx0ZGVsYXlUaW1lICAgIDogdmFsdWVPckRlZmF1bHQoYXJnLmRlbGF5LmRlbGF5VGltZSwgLjUpLFxuXHRcdFx0bWF4RGVsYXlUaW1lIDogdmFsdWVPckRlZmF1bHQoYXJnLmRlbGF5Lm1heERlbGF5VGltZSwgMiksXG5cdFx0XHRmZWVkYmFjayAgICAgOiB2YWx1ZU9yRGVmYXVsdChhcmcuZGVsYXkuZmVlZGJhY2ssIC4yNSksXG5cdFx0XHR3ZXQgICAgICAgICAgOiB2YWx1ZU9yRGVmYXVsdChhcmcuZGVsYXkud2V0LCAuMjUpXG5cdFx0fTtcblx0fVxuXHRlbHNlIHsgdGhhdC5kZWxheSA9IG51bGw7IH1cbn07XG5cbmxldCBwZXJtaXNzaW9uc0dyYW50ZWQgPSB7IG1pY0NvbnNlbnQ6IGZhbHNlIH07XG4vKiogU3BlY2lhbCBpbml0aWFsaXphdGlvbiBhbmQgY29uZmlndXJhdGlvbiBmb3IgbWljcm9waG9uZSBXYWRzICoqL1xubGV0IGdldENvbnNlbnQgPSBmdW5jdGlvbih0aGF0LCBhcmcpIHtcblx0dGhhdC5ub2RlcyAgICAgICAgICAgICA9IFtdO1xuXHR0aGF0Lm1lZGlhU3RyZWFtU291cmNlID0gbnVsbDtcblx0dGhhdC5nYWluICAgICAgICAgICAgICA9IG51bGw7XG5cdHJldHVybiBnZXRVc2VyTWVkaWEoe2F1ZGlvOiB0cnVlLCB2aWRlbzogZmFsc2V9KS50aGVuKGZ1bmN0aW9uKHN0cmVhbSkge1xuXHRcdHRoYXQubWVkaWFTdHJlYW1Tb3VyY2UgPSBjb250ZXh0LmNyZWF0ZU1lZGlhU3RyZWFtU291cmNlKHN0cmVhbSk7XG5cdFx0cGVybWlzc2lvbnNHcmFudGVkLm1pY0NvbnNlbnQgPSB0cnVlO1xuXHRcdHNldFVwTWljKHRoYXQsIGFyZyk7XG5cdFx0cmV0dXJuIHRoYXQ7XG5cdH0pLmNhdGNoKGZ1bmN0aW9uKGVycm9yKSB7IGxvZ01lc3NhZ2UoJ0Vycm9yIHNldHRpbmcgdXAgbWljcm9waG9uZSBpbnB1dDogJywgZXJyb3IpOyB9KTsgLy8gVGhpcyBpcyB0aGUgZXJyb3IgY2FsbGJhY2suXG59O1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxubGV0IHNldFVwTWljID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0dGhhdC5ub2RlcyAgICAgICAgICAgPSBbXTtcblx0dGhhdC5nYWluICAgICAgICAgICAgPSBjb250ZXh0LmNyZWF0ZUdhaW4oKTtcblx0dGhhdC5nYWluLmdhaW4udmFsdWUgPSB2YWx1ZU9yRGVmYXVsdChhcmcudm9sdW1lLHRoYXQudm9sdW1lKTtcblx0dGhhdC5ub2Rlcy5wdXNoKHRoYXQubWVkaWFTdHJlYW1Tb3VyY2UpO1xuXHR0aGF0Lm5vZGVzLnB1c2godGhhdC5nYWluKTtcbiAgXG5cblx0aWYgKCB0aGF0LmZpbHRlciB8fCBhcmcuZmlsdGVyICkgeyBjcmVhdGVGaWx0ZXJzKHRoYXQsIGFyZyk7IH1cblxuXHRpZiAoIHRoYXQucmV2ZXJiIHx8IGFyZy5yZXZlcmIgKSB7IHNldFVwUmV2ZXJiT25QbGF5KHRoYXQsIGFyZyk7IH1cblxuXHRjb25zdHJ1Y3RQYW5uaW5nKHRoYXQsIGFyZyk7XG5cdHNldFVwUGFubmluZ09uUGxheSh0aGF0LCBhcmcpO1xuXG5cdGlmICggdGhhdC5kZWxheSB8fCBhcmcuZGVsYXkgKSB7XG5cdFx0c2V0VXBEZWxheU9uUGxheSh0aGF0LCBhcmcpO1xuXHR9XG5cdHNldFVwVHVuYU9uUGxheSh0aGF0LCBhcmcpO1xuXHR0aGF0LnNldFVwRXh0ZXJuYWxGeE9uUGxheShhcmcsIGNvbnRleHQpO1xufTtcblxuXG4vKiogV2hlbiBhIG5vdGUgaXMgcGxheWVkLCB0aGVzZSB0d28gZnVuY3Rpb25zIHdpbGwgc2NoZWR1bGUgY2hhbmdlcyBpbiB2b2x1bWUgYW5kIGZpbHRlciBmcmVxdWVuY3ksXG5hcyBzcGVjaWZpZWQgYnkgdGhlIHZvbHVtZSBlbnZlbG9wZSBhbmQgZmlsdGVyIGVudmVsb3BlICoqL1xubGV0IGZpbHRlckVudiA9IGZ1bmN0aW9uKHdhZCwgYXJnKXtcblx0d2FkLmZpbHRlci5mb3JFYWNoKGZ1bmN0aW9uIChmaWx0ZXIsIGluZGV4KXtcblx0XHRmaWx0ZXIubm9kZS5mcmVxdWVuY3kubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoZmlsdGVyLmZyZXF1ZW5jeSwgYXJnLmV4YWN0VGltZSk7XG5cdFx0ZmlsdGVyLm5vZGUuZnJlcXVlbmN5LmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKGZpbHRlci5lbnYuZnJlcXVlbmN5LCBhcmcuZXhhY3RUaW1lICsgZmlsdGVyLmVudi5hdHRhY2spO1xuXHR9KTtcbn07XG5cbmxldCBwbGF5RW52ID0gZnVuY3Rpb24od2FkLCBhcmcpe1xuXHRsZXQgbG9vcCA9IGFyZy5sb29wIHx8IGFyZy5sb29wO1xuXHRsZXQgaG9sZDtcblx0aWYgKCB3YWQuZW52LmhvbGQgPT09IC0xIHx8IChsb29wICYmICF3YWQudXNlclNldEhvbGQgJiYgIShhcmcuZW52ICYmIGFyZy5lbnYuaG9sZCkgKSApe1xuXHRcdGhvbGQgPSA5OTk7XG5cdH1cblx0ZWxzZSB7IGhvbGQgPSB3YWQuZW52LmhvbGQ7IH1cblx0d2FkLmdhaW5bMF0uZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSgwLjAwMDEsIGFyZy5leGFjdFRpbWUpO1xuXHR3YWQuZ2FpblswXS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHdhZC52b2x1bWUsIGFyZy5leGFjdFRpbWUgKyB3YWQuZW52LmF0dGFjayArIDAuMDAwMDEpO1xuXHR3YWQuZ2FpblswXS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKHdhZC52b2x1bWUgKiB3YWQuZW52LnN1c3RhaW4sIGFyZy5leGFjdFRpbWUgKyB3YWQuZW52LmF0dGFjayArIHdhZC5lbnYuZGVjYXkgKyAwLjAwMDAyKTtcblx0d2FkLmdhaW5bMF0uZ2Fpbi5saW5lYXJSYW1wVG9WYWx1ZUF0VGltZSh3YWQudm9sdW1lICogd2FkLmVudi5zdXN0YWluLCBhcmcuZXhhY3RUaW1lICsgd2FkLmVudi5hdHRhY2sgKyB3YWQuZW52LmRlY2F5ICsgaG9sZCArIDAuMDAwMDMpO1xuXHR3YWQuZ2FpblswXS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKDAuMDAwMSwgYXJnLmV4YWN0VGltZSArIHdhZC5lbnYuYXR0YWNrICsgd2FkLmVudi5kZWNheSArIGhvbGQgKyB3YWQuZW52LnJlbGVhc2UgKyAwLjAwMDA0KTtcblx0Ly8gb2Zmc2V0IGlzIG9ubHkgdXNlZCBieSBCdWZmZXJTb3VyY2VOb2Rlcy4gT3NjaWxsYXRvck5vZGVzIHNob3VsZCBzYWZlbHkgaWdub3JlIHRoZSBvZmZzZXQuXG5cdHdhZC5zb3VuZFNvdXJjZS5zdGFydChhcmcuZXhhY3RUaW1lLCBhcmcub2Zmc2V0KTtcblx0aWYgKCAhd2FkLnNvdW5kU291cmNlLnBsYXliYWNrUmF0ZSApIHsgLy8gYXVkaW8gY2xpcHMgbmF0dXJhbGx5IHN0b3AgdGhlbXNlbHZlcyBhdCB0aGUgZW5kIG9mIHRoZSBidWZmZXIncyBkdXJhdGlvblxuXHRcdHdhZC5zb3VuZFNvdXJjZS5zdG9wKGFyZy5leGFjdFRpbWUgKyB3YWQuZW52LmF0dGFjayArIHdhZC5lbnYuZGVjYXkgKyBob2xkICsgd2FkLmVudi5yZWxlYXNlICsgMC4wMDAwNSk7XG5cdH1cbn07XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vKiogV2hlbiBhbGwgdGhlIG5vZGVzIGFyZSBzZXQgdXAgZm9yIHRoaXMgV2FkLCB0aGlzIGZ1bmN0aW9uIHBsdWdzIHRoZW0gaW50byBlYWNoIG90aGVyLFxud2l0aCBzcGVjaWFsIGhhbmRsaW5nIGZvciBub2RlcyB3aXRoIGN1c3RvbSBpbnRlcmZhY2VzIChlLmcuIHJldmVyYiwgZGVsYXkpLiAqKi9cbmxldCBwbHVnRW1JbiA9IGZ1bmN0aW9uKHRoYXQsIGFyZyl7XG5cdGxldCBkZXN0aW5hdGlvbiA9ICggYXJnICYmIGFyZy5kZXN0aW5hdGlvbiApIHx8IHRoYXQuZGVzdGluYXRpb247XG5cdGxldCBsYXN0U3RvcDtcblx0Zm9yICggbGV0IGkgPSAxOyBpIDwgdGhhdC5ub2Rlcy5sZW5ndGg7IGkrKyApIHtcblx0XHRsZXQgZnJvbTtcblx0XHRsZXQgdG87XG5cdFx0aWYgKCB0aGF0Lm5vZGVzW2ktMV0uaW50ZXJmYWNlID09PSAnY3VzdG9tJyApIHtcblx0XHRcdGZyb20gPSB0aGF0Lm5vZGVzW2ktMV0ub3V0cHV0O1xuXHRcdH1cblx0XHRlbHNlIHsgLy8gYXNzdW1lIG5hdGl2ZSBpbnRlcmZhY2Vcblx0XHRcdGZyb20gPSB0aGF0Lm5vZGVzW2ktMV07XG5cdFx0fVxuXHRcdGlmICggdGhhdC5ub2Rlc1tpXS5pbnRlcmZhY2UgPT09ICdjdXN0b20nICkge1xuXHRcdFx0dG8gPSB0aGF0Lm5vZGVzW2ldLmlucHV0O1xuXHRcdH1cblx0XHRlbHNlIHsgLy8gYXNzdW1lIG5hdGl2ZSBpbnRlcmZhY2Vcblx0XHRcdHRvID0gdGhhdC5ub2Rlc1tpXTtcblx0XHR9XG5cdFx0ZnJvbS5jb25uZWN0KHRvKTtcblx0fVxuXHRpZiAoIHRoYXQubm9kZXNbdGhhdC5ub2Rlcy5sZW5ndGgtMV0uaW50ZXJmYWNlID09PSAnY3VzdG9tJykge1xuXHRcdGxhc3RTdG9wID0gdGhhdC5ub2Rlc1t0aGF0Lm5vZGVzLmxlbmd0aC0xXS5vdXRwdXQ7XG5cdH1cblx0ZWxzZSB7IC8vIGFzc3VtZSBuYXRpdmUgaW50ZXJmYWNlXG5cdFx0bGFzdFN0b3AgPSB0aGF0Lm5vZGVzW3RoYXQubm9kZXMubGVuZ3RoLTFdO1xuXHR9XG5cdGxhc3RTdG9wLmNvbm5lY3QoZGVzdGluYXRpb24pO1xuXG59O1xubGV0IHBsdWdFbU91dD1mdW5jdGlvbihub2RlcyxkZXN0aW5hdGlvbil7XG5cdGxldCBsYXN0U3RvcDtcblx0Zm9yICggbGV0IGkgPSAxOyBpIDwgbm9kZXMubGVuZ3RoOyBpKysgKSB7XG5cdFx0bGV0IGZyb207XG5cdFx0bGV0IHRvO1xuXHRcdGlmICggbm9kZXNbaS0xXS5pbnRlcmZhY2UgPT09ICdjdXN0b20nICkge1xuXHRcdFx0ZnJvbSA9IG5vZGVzW2ktMV0ub3V0cHV0O1xuXHRcdH1cblx0XHRlbHNlIHsgLy8gYXNzdW1lIG5hdGl2ZSBpbnRlcmZhY2Vcblx0XHRcdGZyb20gPSBub2Rlc1tpLTFdO1xuXHRcdH1cblx0XHRpZiAoIG5vZGVzW2ldLmludGVyZmFjZSA9PT0gJ2N1c3RvbScgKSB7XG5cdFx0XHR0byA9IG5vZGVzW2ldLmlucHV0O1xuXHRcdH1cblx0XHRlbHNlIHsgLy8gYXNzdW1lIG5hdGl2ZSBpbnRlcmZhY2Vcblx0XHRcdHRvID0gbm9kZXNbaV07XG5cdFx0fVxuXHRcdGZyb20uZGlzY29ubmVjdCh0byk7XG5cdH1cblx0aWYgKCBub2Rlc1tub2Rlcy5sZW5ndGgtMV0uaW50ZXJmYWNlID09PSAnY3VzdG9tJykge1xuXHRcdGxhc3RTdG9wID0gbm9kZXNbbm9kZXMubGVuZ3RoLTFdLm91dHB1dDtcblx0fVxuXHRlbHNlIHsgLy8gYXNzdW1lIG5hdGl2ZSBpbnRlcmZhY2Vcblx0XHRsYXN0U3RvcCA9IG5vZGVzW25vZGVzLmxlbmd0aC0xXTtcblx0fVxuXHRsYXN0U3RvcC5kaXNjb25uZWN0KGRlc3RpbmF0aW9uKTtcbn1cblxuLyoqIEluaXRpYWxpemUgYW5kIGNvbmZpZ3VyZSBhbiBvc2NpbGxhdG9yIG5vZGUgKiovXG5sZXQgc2V0VXBPc2NpbGxhdG9yID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0YXJnID0gYXJnIHx8IHt9O1xuXHR0aGF0LnNvdW5kU291cmNlID0gY29udGV4dC5jcmVhdGVPc2NpbGxhdG9yKCk7XG5cdC8vdGhhdC5zb3VuZFNvdXJjZT1jcmVhdGVPc2NpbGxhdG9yKHRoYXQuc291cmNlKTtcblx0dGhhdC5zb3VuZFNvdXJjZS50eXBlID0gdGhhdC5zb3VyY2U7XG5cdGlmICggYXJnLnBpdGNoICkge1xuXHRcdGlmICggYXJnLnBpdGNoIGluIHBpdGNoZXMgKSB7XG5cdFx0XHR0aGF0LnNvdW5kU291cmNlLmZyZXF1ZW5jeS52YWx1ZSA9IHBpdGNoZXNbYXJnLnBpdGNoXTtcblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHR0aGF0LnNvdW5kU291cmNlLmZyZXF1ZW5jeS52YWx1ZSA9IGFyZy5waXRjaDtcblx0XHR9XG5cdH1cblx0ZWxzZSB7XG5cdFx0dGhhdC5zb3VuZFNvdXJjZS5mcmVxdWVuY3kudmFsdWUgPSB0aGF0LnBpdGNoO1xuXHR9XG59O1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKiBTZXQgdGhlIEFEU1Igdm9sdW1lIGVudmVsb3BlIGFjY29yZGluZyB0byBwbGF5KCkgYXJndW1lbnRzLCBvciByZXZlcnQgdG8gZGVmYXVsdHMgKiovXG5sZXQgc2V0VXBFbnZPblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoIGFyZyAmJiBhcmcuZW52ICkge1xuXHRcdHRoYXQuZW52LmF0dGFjayAgPSB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LmF0dGFjaywgdGhhdC5kZWZhdWx0RW52LmF0dGFjayk7XG5cdFx0dGhhdC5lbnYuZGVjYXkgICA9IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYuZGVjYXksIHRoYXQuZGVmYXVsdEVudi5kZWNheSk7XG5cdFx0dGhhdC5lbnYuc3VzdGFpbiA9IHZhbHVlT3JEZWZhdWx0KGFyZy5lbnYuc3VzdGFpbiwgdGhhdC5kZWZhdWx0RW52LnN1c3RhaW4pO1xuXHRcdHRoYXQuZW52LmhvbGQgICAgPSB2YWx1ZU9yRGVmYXVsdChhcmcuZW52LmhvbGQsIHRoYXQuZGVmYXVsdEVudi5ob2xkKTtcblx0XHR0aGF0LmVudi5yZWxlYXNlID0gdmFsdWVPckRlZmF1bHQoYXJnLmVudi5yZWxlYXNlLCB0aGF0LmRlZmF1bHRFbnYucmVsZWFzZSk7XG5cdH1cblx0ZWxzZSB7XG5cdFx0dGhhdC5lbnYgPSB7XG5cdFx0XHRhdHRhY2sgIDogdGhhdC5kZWZhdWx0RW52LmF0dGFjayxcblx0XHRcdGRlY2F5ICAgOiB0aGF0LmRlZmF1bHRFbnYuZGVjYXksXG5cdFx0XHRzdXN0YWluIDogdGhhdC5kZWZhdWx0RW52LnN1c3RhaW4sXG5cdFx0XHRob2xkICAgIDogdGhhdC5kZWZhdWx0RW52LmhvbGQsXG5cdFx0XHRyZWxlYXNlIDogdGhhdC5kZWZhdWx0RW52LnJlbGVhc2Vcblx0XHR9O1xuXHR9XG5cbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuLyoqIFNldCB0aGUgZmlsdGVyIGFuZCBmaWx0ZXIgZW52ZWxvcGUgYWNjb3JkaW5nIHRvIHBsYXkoKSBhcmd1bWVudHMsIG9yIHJldmVydCB0byBkZWZhdWx0cyAqKi9cblxubGV0IGNyZWF0ZUZpbHRlcnMgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoIGFyZy5maWx0ZXIgJiYgIWlzQXJyYXkoYXJnLmZpbHRlcikgKSB7XG5cdFx0YXJnLmZpbHRlciA9IFthcmcuZmlsdGVyXTtcblx0fVxuXHR0aGF0LmZpbHRlci5mb3JFYWNoKGZ1bmN0aW9uIChmaWx0ZXIsIGkpIHtcblx0XHRmaWx0ZXIubm9kZSAgICAgICAgICAgICAgICAgPSBjb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xuXHRcdGZpbHRlci5ub2RlLnR5cGUgICAgICAgICAgICA9IGZpbHRlci50eXBlO1xuXHRcdGZpbHRlci5ub2RlLmZyZXF1ZW5jeS52YWx1ZSA9ICggYXJnLmZpbHRlciAmJiBhcmcuZmlsdGVyW2ldICkgPyAoIGFyZy5maWx0ZXJbaV0uZnJlcXVlbmN5IHx8IGZpbHRlci5mcmVxdWVuY3kgKSA6IGZpbHRlci5mcmVxdWVuY3k7XG5cdFx0ZmlsdGVyLm5vZGUuUS52YWx1ZSAgICAgICAgID0gKCBhcmcuZmlsdGVyICYmIGFyZy5maWx0ZXJbaV0gKSA/ICggYXJnLmZpbHRlcltpXS5xICAgICAgICAgfHwgZmlsdGVyLnEgKSAgICAgICAgIDogZmlsdGVyLnE7XG5cdFx0aWYgKCAoIGFyZy5maWx0ZXIgJiYgYXJnLmZpbHRlcltpXS5lbnYgfHwgdGhhdC5maWx0ZXJbaV0uZW52ICkgJiYgISggdGhhdC5zb3VyY2UgPT09ICdtaWMnICkgKSB7XG5cdFx0XHRmaWx0ZXIuZW52ID0ge1xuXHRcdFx0XHRhdHRhY2sgICAgOiAoIGFyZy5maWx0ZXIgJiYgYXJnLmZpbHRlcltpXS5lbnYgJiYgYXJnLmZpbHRlcltpXS5lbnYuYXR0YWNrICkgICAgfHwgdGhhdC5maWx0ZXJbaV0uZW52LmF0dGFjayxcblx0XHRcdFx0ZnJlcXVlbmN5IDogKCBhcmcuZmlsdGVyICYmIGFyZy5maWx0ZXJbaV0uZW52ICYmIGFyZy5maWx0ZXJbaV0uZW52LmZyZXF1ZW5jeSApIHx8IHRoYXQuZmlsdGVyW2ldLmVudi5mcmVxdWVuY3lcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0dGhhdC5ub2Rlcy5wdXNoKGZpbHRlci5ub2RlKTtcblx0fSk7XG59O1xuXG5sZXQgc2V0VXBGaWx0ZXJPblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoIGFyZyAmJiBhcmcuZmlsdGVyICYmIHRoYXQuZmlsdGVyICkge1xuXHRcdGlmICggIWlzQXJyYXkoYXJnLmZpbHRlcikgKSBhcmcuZmlsdGVyID0gW2FyZy5maWx0ZXJdO1xuXHRcdGNyZWF0ZUZpbHRlcnModGhhdCwgYXJnKTtcblx0fVxuXHRlbHNlIGlmICggdGhhdC5maWx0ZXIgKSB7XG5cdFx0Y3JlYXRlRmlsdGVycyh0aGF0LCB0aGF0KTtcblx0fVxufTtcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKiBJbml0aWFsaXplIGFuZCBjb25maWd1cmUgYSBjb252b2x2ZXIgbm9kZSBmb3IgcGxheWJhY2sgKiovXG5sZXQgc2V0VXBSZXZlcmJPblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHR2YXIgcmV2ZXJiTm9kZSA9IHtcblx0XHRpbnRlcmZhY2UgOiAnY3VzdG9tJyxcblx0XHRpbnB1dCA6IGNvbnRleHQuY3JlYXRlR2FpbigpLFxuXHRcdGNvbnZvbHZlciA6IGNvbnRleHQuY3JlYXRlQ29udm9sdmVyKCksXG5cdFx0d2V0IDogY29udGV4dC5jcmVhdGVHYWluKCksXG5cdFx0b3V0cHV0IDogY29udGV4dC5jcmVhdGVHYWluKClcblx0fTtcblx0cmV2ZXJiTm9kZS5jb252b2x2ZXIuYnVmZmVyID0gdGhhdC5yZXZlcmIuYnVmZmVyO1xuXHRyZXZlcmJOb2RlLndldC5nYWluLnZhbHVlICAgPSB0aGF0LnJldmVyYi53ZXQ7XG5cblx0cmV2ZXJiTm9kZS5pbnB1dC5jb25uZWN0KHJldmVyYk5vZGUuY29udm9sdmVyKTtcblx0cmV2ZXJiTm9kZS5pbnB1dC5jb25uZWN0KHJldmVyYk5vZGUub3V0cHV0KTtcblx0cmV2ZXJiTm9kZS5jb252b2x2ZXIuY29ubmVjdChyZXZlcmJOb2RlLndldCk7XG5cdHJldmVyYk5vZGUud2V0LmNvbm5lY3QocmV2ZXJiTm9kZS5vdXRwdXQpO1xuXG5cdHRoYXQucmV2ZXJiLm5vZGUgPSByZXZlcmJOb2RlO1xuXHR0aGF0Lm5vZGVzLnB1c2godGhhdC5yZXZlcmIubm9kZSk7XG59O1xuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG4vKiogSW5pdGlhbGl6ZSBhbmQgY29uZmlndXJlIGEgcGFubmVyIG5vZGUgZm9yIHBsYXliYWNrICoqL1xubGV0IHNldFVwUGFubmluZ09uUGxheSA9IGZ1bmN0aW9uKHRoYXQsIGFyZyl7XG5cdHZhciBwYW5uaW5nID0gYXJnICYmIGFyZy5wYW5uaW5nOyAvLyBjYW4gYmUgemVybyBwcm92aWRlZCBhcyBhcmd1bWVudFxuXHRpZiAodHlwZW9mIHBhbm5pbmcgPT09ICd1bmRlZmluZWQnKSB7IHBhbm5pbmcgPSB0aGF0LnBhbm5pbmcubG9jYXRpb247IH1cblxuXHRpZiAodHlwZW9mIHBhbm5pbmcgID09PSAnbnVtYmVyJyAmJiBjb250ZXh0LmNyZWF0ZVN0ZXJlb1Bhbm5lciApIHtcblx0XHR0aGF0LnBhbm5pbmcubm9kZSA9IGNvbnRleHQuY3JlYXRlU3RlcmVvUGFubmVyKCk7XG5cdFx0dGhhdC5wYW5uaW5nLm5vZGUucGFuLnZhbHVlID0gcGFubmluZztcblx0XHR0aGF0LnBhbm5pbmcudHlwZSA9ICdzdGVyZW8nO1xuXHR9XG5cdGVsc2Uge1xuXHRcdHRoYXQucGFubmluZy5ub2RlID0gY29udGV4dC5jcmVhdGVQYW5uZXIoKTtcblx0XHRpZiAoIHR5cGVvZiBwYW5uaW5nID09PSAnbnVtYmVyJyApIHtcblx0XHRcdHRoYXQucGFubmluZy5ub2RlLnNldFBvc2l0aW9uKHBhbm5pbmcsIDAsIDApO1xuXHRcdH1cblx0XHRlbHNlIHsgLy8gYXNzdW1lIDNkIHBhbm5pbmcsIHNwZWNpZmllZCBpbiBhIDMtZWxlbWVudCBhcnJheS4gXG5cdFx0XHR0aGF0LnBhbm5pbmcubm9kZS5zZXRQb3NpdGlvbihwYW5uaW5nWzBdLCBwYW5uaW5nWzFdLCBwYW5uaW5nWzJdKTtcblx0XHR9XG5cdFx0dGhhdC5wYW5uaW5nLm5vZGUucGFubmluZ01vZGVsID0gYXJnLnBhbm5pbmdNb2RlbCB8fCB0aGF0LnBhbm5pbmdNb2RlbCB8fCAnZXF1YWxwb3dlcic7XG5cdFx0dGhhdC5wYW5uaW5nLnR5cGUgPSAnM2QnO1xuXG5cdFx0dGhhdC5wYW5uaW5nLm5vZGUuZGlzdGFuY2VNb2RlbCAgPSBhcmcuZGlzdGFuY2VNb2RlbCAgfHwgdGhhdC5kaXN0YW5jZU1vZGVsICB8fCB0aGF0LnBhbm5pbmcubm9kZS5kaXN0YW5jZU1vZGVsO1xuXHRcdHRoYXQucGFubmluZy5ub2RlLm1heERpc3RhbmNlICAgID0gYXJnLm1heERpc3RhbmNlICAgIHx8IHRoYXQubWF4RGlzdGFuY2UgICAgfHwgdGhhdC5wYW5uaW5nLm5vZGUubWF4RGlzdGFuY2U7XG5cdFx0dGhhdC5wYW5uaW5nLm5vZGUucm9sbG9mZkZhY3RvciAgPSBhcmcucm9sbG9mZkZhY3RvciAgfHwgdGhhdC5yb2xsb2ZmRmFjdG9yICB8fCB0aGF0LnBhbm5pbmcubm9kZS5yb2xsb2ZmRmFjdG9yO1xuXHRcdHRoYXQucGFubmluZy5ub2RlLnJlZkRpc3RhbmNlICAgID0gYXJnLnJlZkRpc3RhbmNlICAgIHx8IHRoYXQucmVmRGlzdGFuY2UgICAgfHwgdGhhdC5wYW5uaW5nLm5vZGUucmVmRGlzdGFuY2U7XG5cdFx0dGhhdC5wYW5uaW5nLm5vZGUuY29uZUlubmVyQW5nbGUgPSBhcmcuY29uZUlubmVyQW5nbGUgfHwgdGhhdC5jb25lSW5uZXJBbmdsZSB8fCB0aGF0LnBhbm5pbmcubm9kZS5jb25lSW5uZXJBbmdsZTtcblx0XHR0aGF0LnBhbm5pbmcubm9kZS5jb25lT3V0ZXJBbmdsZSA9IGFyZy5jb25lT3V0ZXJBbmdsZSB8fCB0aGF0LmNvbmVPdXRlckFuZ2xlIHx8IHRoYXQucGFubmluZy5ub2RlLmNvbmVPdXRlckFuZ2xlO1xuXHRcdHRoYXQucGFubmluZy5ub2RlLmNvbmVPdXRlckdhaW4gID0gYXJnLmNvbmVPdXRlckdhaW4gIHx8IHRoYXQuY29uZU91dGVyR2FpbiAgfHwgdGhhdC5wYW5uaW5nLm5vZGUuY29uZU91dGVyR2Fpbjtcblx0fVxuXG5cdHRoYXQubm9kZXMucHVzaCh0aGF0LnBhbm5pbmcubm9kZSk7XG5cbn07XG5cblxuLyoqIEluaXRpYWxpemUgYW5kIGNvbmZpZ3VyZSBhIHZpYnJhdG8gTEZPIFdhZCBmb3IgcGxheWJhY2sgKiovXG5sZXQgc2V0VXBWaWJyYXRvT25QbGF5ID0gZnVuY3Rpb24odGhhdCwgYXJnLCBXYWQpe1xuXHR0aGF0LnZpYnJhdG8ud2FkID0gbmV3IFdhZCh7XG5cdFx0c291cmNlIDogdGhhdC52aWJyYXRvLnNoYXBlLFxuXHRcdHBpdGNoICA6IHRoYXQudmlicmF0by5zcGVlZCxcblx0XHR2b2x1bWUgOiB0aGF0LnZpYnJhdG8ubWFnbml0dWRlLFxuXHRcdGVudiAgICA6IHtcblx0XHRcdGF0dGFjayA6IHRoYXQudmlicmF0by5hdHRhY2tcblx0XHR9LFxuXHRcdGRlc3RpbmF0aW9uIDogdGhhdC5zb3VuZFNvdXJjZS5mcmVxdWVuY3lcblx0fSk7XG5cdHRoYXQudmlicmF0by53YWQucGxheSgpO1xufTtcblxuXG4vKiogSW5pdGlhbGl6ZSBhbmQgY29uZmlndXJlIGEgdHJlbW9sbyBMRk8gV2FkIGZvciBwbGF5YmFjayAqKi9cbmxldCBzZXRVcFRyZW1vbG9PblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcsIFdhZCl7XG5cdHRoYXQudHJlbW9sby53YWQgPSBuZXcgV2FkKHtcblx0XHRzb3VyY2UgOiB0aGF0LnRyZW1vbG8uc2hhcGUsXG5cdFx0cGl0Y2ggIDogdGhhdC50cmVtb2xvLnNwZWVkLFxuXHRcdHZvbHVtZSA6IHRoYXQudHJlbW9sby5tYWduaXR1ZGUsXG5cdFx0ZW52ICAgIDoge1xuXHRcdFx0YXR0YWNrIDogdGhhdC50cmVtb2xvLmF0dGFjayxcblx0XHRcdGhvbGQgICA6IDEwXG5cdFx0fSxcblx0XHRkZXN0aW5hdGlvbiA6IHRoYXQuZ2FpblswXS5nYWluXG5cdH0pO1xuXHR0aGF0LnRyZW1vbG8ud2FkLnBsYXkoKTtcbn07XG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxubGV0IHNldFVwRGVsYXlPblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoIHRoYXQuZGVsYXkgKSB7XG5cdFx0aWYgKCAhYXJnLmRlbGF5ICkgeyBhcmcuZGVsYXkgPSB7fTsgfVxuXHRcdC8vY3JlYXRlIHRoZSBub2RlcyB3ZeKAmWxsIHVzZVxuXHRcdHZhciBkZWxheU5vZGUgPSB7IC8vIHRoZSBjdXN0b20gZGVsYXkgbm9kZVxuXHRcdFx0aW50ZXJmYWNlICAgIDogJ2N1c3RvbScsXG5cdFx0XHRpbnB1dCAgICAgICAgOiBjb250ZXh0LmNyZWF0ZUdhaW4oKSxcblx0XHRcdG91dHB1dCAgICAgICA6IGNvbnRleHQuY3JlYXRlR2FpbigpLFxuXHRcdFx0ZGVsYXlOb2RlICAgIDogY29udGV4dC5jcmVhdGVEZWxheSh0aGF0LmRlbGF5Lm1heERlbGF5VGltZSksIC8vIHRoZSBuYXRpdmUgZGVsYXkgbm9kZSBpbnNpZGUgdGhlIGN1c3RvbSBkZWxheSBub2RlLlxuXHRcdFx0ZmVlZGJhY2tOb2RlIDogY29udGV4dC5jcmVhdGVHYWluKCksXG5cdFx0XHR3ZXROb2RlICAgICAgOiBjb250ZXh0LmNyZWF0ZUdhaW4oKSxcblx0XHR9O1xuXG5cdFx0Ly9zZXQgc29tZSBkZWNlbnQgdmFsdWVzXG5cdFx0ZGVsYXlOb2RlLmRlbGF5Tm9kZS5kZWxheVRpbWUudmFsdWUgPSB2YWx1ZU9yRGVmYXVsdChhcmcuZGVsYXkuZGVsYXlUaW1lLCB0aGF0LmRlbGF5LmRlbGF5VGltZSk7XG5cdFx0ZGVsYXlOb2RlLmZlZWRiYWNrTm9kZS5nYWluLnZhbHVlICAgPSB2YWx1ZU9yRGVmYXVsdChhcmcuZGVsYXkuZmVlZGJhY2ssIHRoYXQuZGVsYXkuZmVlZGJhY2spO1xuXHRcdGRlbGF5Tm9kZS53ZXROb2RlLmdhaW4udmFsdWUgICAgICAgID0gdmFsdWVPckRlZmF1bHQoYXJnLmRlbGF5LndldCwgdGhhdC5kZWxheS53ZXQpO1xuXG5cblx0XHQvL3NldCB1cCB0aGUgcm91dGluZ1xuXHRcdGRlbGF5Tm9kZS5pbnB1dC5jb25uZWN0KGRlbGF5Tm9kZS5kZWxheU5vZGUpO1xuXHRcdGRlbGF5Tm9kZS5pbnB1dC5jb25uZWN0KGRlbGF5Tm9kZS5vdXRwdXQpO1xuXHRcdGRlbGF5Tm9kZS5kZWxheU5vZGUuY29ubmVjdChkZWxheU5vZGUuZmVlZGJhY2tOb2RlKTtcblx0XHRkZWxheU5vZGUuZGVsYXlOb2RlLmNvbm5lY3QoZGVsYXlOb2RlLndldE5vZGUpO1xuXHRcdGRlbGF5Tm9kZS5mZWVkYmFja05vZGUuY29ubmVjdChkZWxheU5vZGUuZGVsYXlOb2RlKTtcblx0XHRkZWxheU5vZGUud2V0Tm9kZS5jb25uZWN0KGRlbGF5Tm9kZS5vdXRwdXQpO1xuXHRcdHRoYXQuZGVsYXkuZGVsYXlOb2RlID0gZGVsYXlOb2RlO1xuXG5cdFx0dGhhdC5ub2Rlcy5wdXNoKGRlbGF5Tm9kZSk7XG5cdH1cbn07XG5cbi8qKiAqKi9cbmxldCBjb25zdHJ1Y3RDb21wcmVzc29yID0gZnVuY3Rpb24odGhhdCwgYXJnKXtcblx0dGhhdC5jb21wcmVzc29yID0gY29udGV4dC5jcmVhdGVEeW5hbWljc0NvbXByZXNzb3IoKTtcblx0dGhhdC5jb21wcmVzc29yLmF0dGFjay52YWx1ZSAgICA9IHZhbHVlT3JEZWZhdWx0KGFyZy5jb21wcmVzc29yLmF0dGFjaywgdGhhdC5jb21wcmVzc29yLmF0dGFjay52YWx1ZSk7XG5cdHRoYXQuY29tcHJlc3Nvci5rbmVlLnZhbHVlICAgICAgPSB2YWx1ZU9yRGVmYXVsdChhcmcuY29tcHJlc3Nvci5rbmVlLCB0aGF0LmNvbXByZXNzb3Iua25lZS52YWx1ZSk7XG5cdHRoYXQuY29tcHJlc3Nvci5yYXRpby52YWx1ZSAgICAgPSB2YWx1ZU9yRGVmYXVsdChhcmcuY29tcHJlc3Nvci5yYXRpbywgdGhhdC5jb21wcmVzc29yLnJhdGlvLnZhbHVlKTtcblx0dGhhdC5jb21wcmVzc29yLnJlbGVhc2UudmFsdWUgICA9IHZhbHVlT3JEZWZhdWx0KGFyZy5jb21wcmVzc29yLnJlbGVhc2UsIHRoYXQuY29tcHJlc3Nvci5yZWxlYXNlLnZhbHVlKTtcblx0dGhhdC5jb21wcmVzc29yLnRocmVzaG9sZC52YWx1ZSA9IHZhbHVlT3JEZWZhdWx0KGFyZy5jb21wcmVzc29yLnRocmVzaG9sZCwgdGhhdC5jb21wcmVzc29yLnRocmVzaG9sZC52YWx1ZSk7XG5cdHRoYXQubm9kZXMucHVzaCh0aGF0LmNvbXByZXNzb3IpO1xufTtcblxubGV0IHR1bmEgPSBuZXcgVHVuYShjb250ZXh0KTtcbmxldCBzZXRVcFR1bmFPblBsYXkgPSBmdW5jdGlvbih0aGF0LCBhcmcpe1xuXHRpZiAoICEoIHRoYXQudHVuYSB8fCBhcmcudHVuYSApICkgeyByZXR1cm47IH1cblx0bGV0IHR1bmFDb25maWcgPSB7fTtcblx0aWYgKCB0aGF0LnR1bmEgKSB7XG5cdFx0Zm9yICggbGV0IGtleSBpbiB0aGF0LnR1bmEgKSB7XG5cdFx0XHR0dW5hQ29uZmlnW2tleV0gPSB0aGF0LnR1bmFba2V5XTtcblx0XHR9XG5cdH1cblxuXHQvLyBvdmVyd3JpdGUgc2V0dGluZ3MgZnJvbSBgdGhpc2Agd2l0aCBzZXR0aW5ncyBmcm9tIGFyZ1xuXHRpZiAoIGFyZy50dW5hICkge1xuXHRcdGZvciAoIGxldCBrZXkgaW4gYXJnLnR1bmEgKSB7XG5cdFx0XHR0dW5hQ29uZmlnW2tleV0gPSBhcmcudHVuYVtrZXldO1xuXHRcdH1cblx0fVxuXHRmb3IgKCBsZXQga2V5IGluIHR1bmFDb25maWcpIHtcblx0XHRsZXQgdHVuYUVmZmVjdCA9IG5ldyB0dW5hW2tleV0odHVuYUNvbmZpZ1trZXldKTtcblx0XHR0aGF0Lm5vZGVzLnB1c2godHVuYUVmZmVjdCk7XG5cdH1cbn07XG4vLy9cblxuZXhwb3J0IHtcblx0bG9nU3R1ZmYsXG5cdGxvZ01lc3NhZ2UsXG5cdGNvbnRleHQsXG5cdG5vaXNlQnVmZmVyLFxuXHRpc0FycmF5LFxuXHR2YWx1ZU9yRGVmYXVsdCxcblx0Y29uc3RydWN0RW52LFxuXHRjb25zdHJ1Y3RGaWx0ZXIsXG5cdHJlcXVlc3RBdWRpb0ZpbGUsXG5cdGNvbnN0cnVjdFZpYnJhdG8sXG5cdGNvbnN0cnVjdFRyZW1vbG8sXG5cdGNvbnN0cnVjdFJldmVyYixcblx0Y29uc3RydWN0UGFubmluZyxcblx0Y29uc3RydWN0RGVsYXksXG5cdGNvbnN0cnVjdENvbXByZXNzb3IsXG5cdGdldENvbnNlbnQsXG5cdHBlcm1pc3Npb25zR3JhbnRlZCxcblx0c2V0VXBNaWMsXG5cdHNldFVwUGFubmluZ09uUGxheSxcblx0c2V0VXBWaWJyYXRvT25QbGF5LFxuXHRzZXRVcFRyZW1vbG9PblBsYXksXG5cdHNldFVwRGVsYXlPblBsYXksXG5cdHNldFVwVHVuYU9uUGxheSxcblx0cGx1Z0VtSW4sXG5cdHBsdWdFbU91dCxcblx0c2V0VXBFbnZPblBsYXksXG5cdHNldFVwRmlsdGVyT25QbGF5LFxuXHRzZXRVcFJldmVyYk9uUGxheSxcblx0ZmlsdGVyRW52LFxuXHRwbGF5RW52LFxuXHRzZXRVcE9zY2lsbGF0b3IsXG5cdGNyZWF0ZUZpbHRlcnMsXG59O1xuIiwiXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuLyoqIFRoaXMgb2JqZWN0IGlzIGEgbWFwcGluZyBvZiBub3RlIG5hbWVzIHRvIGZyZXF1ZW5jaWVzLiAqKi9cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5sZXQgcGl0Y2hlcyA9IHtcblx0J0EwJyAgOiAyNy41MDAwLFxuXHQnQSMwJyA6IDI5LjEzNTIsXG5cdCdCYjAnIDogMjkuMTM1Mixcblx0J0IwJyAgOiAzMC44Njc3LFxuXHQnQiMwJyA6IDMyLjcwMzIsXG5cdCdDYjEnIDogMzAuODY3Nyxcblx0J0MxJyAgOiAzMi43MDMyLFxuXHQnQyMxJyA6IDM0LjY0NzgsXG5cdCdEYjEnIDogMzQuNjQ3OCxcblx0J0QxJyAgOiAzNi43MDgxLFxuXHQnRCMxJyA6IDM4Ljg5MDksXG5cdCdFYjEnIDogMzguODkwOSxcblx0J0UxJyAgOiA0MS4yMDM0LFxuXHQnRmIxJyA6IDQxLjIwMzQsXG5cdCdFIzEnIDogNDMuNjUzNSxcblx0J0YxJyAgOiA0My42NTM1LFxuXHQnRiMxJyA6IDQ2LjI0OTMsXG5cdCdHYjEnIDogNDYuMjQ5Myxcblx0J0cxJyAgOiA0OC45OTk0LFxuXHQnRyMxJyA6IDUxLjkxMzEsXG5cdCdBYjEnIDogNTEuOTEzMSxcblx0J0ExJyAgOiA1NS4wMDAwLFxuXHQnQSMxJyA6IDU4LjI3MDUsXG5cdCdCYjEnIDogNTguMjcwNSxcblx0J0IxJyAgOiA2MS43MzU0LFxuXHQnQ2IyJyA6IDYxLjczNTQsXG5cdCdCIzEnIDogNjUuNDA2NCxcblx0J0MyJyAgOiA2NS40MDY0LFxuXHQnQyMyJyA6IDY5LjI5NTcsXG5cdCdEYjInIDogNjkuMjk1Nyxcblx0J0QyJyAgOiA3My40MTYyLFxuXHQnRCMyJyA6IDc3Ljc4MTcsXG5cdCdFYjInIDogNzcuNzgxNyxcblx0J0UyJyAgOiA4Mi40MDY5LFxuXHQnRmIyJyA6IDgyLjQwNjksXG5cdCdFIzInIDogODcuMzA3MSxcblx0J0YyJyAgOiA4Ny4zMDcxLFxuXHQnRiMyJyA6IDkyLjQ5ODYsXG5cdCdHYjInIDogOTIuNDk4Nixcblx0J0cyJyAgOiA5Ny45OTg5LFxuXHQnRyMyJyA6IDEwMy44MjYsXG5cdCdBYjInIDogMTAzLjgyNixcblx0J0EyJyAgOiAxMTAuMDAwLFxuXHQnQSMyJyA6IDExNi41NDEsXG5cdCdCYjInIDogMTE2LjU0MSxcblx0J0IyJyAgOiAxMjMuNDcxLFxuXHQnQ2IzJyA6IDEyMy40NzEsXG5cdCdCIzInIDogMTMwLjgxMyxcblx0J0MzJyAgOiAxMzAuODEzLFxuXHQnQyMzJyA6IDEzOC41OTEsXG5cdCdEYjMnIDogMTM4LjU5MSxcblx0J0QzJyAgOiAxNDYuODMyLFxuXHQnRCMzJyA6IDE1NS41NjMsXG5cdCdFYjMnIDogMTU1LjU2Myxcblx0J0UzJyAgOiAxNjQuODE0LFxuXHQnRmIzJyA6IDE2NC44MTQsXG5cdCdFIzMnIDogMTc0LjYxNCxcblx0J0YzJyAgOiAxNzQuNjE0LFxuXHQnRiMzJyA6IDE4NC45OTcsXG5cdCdHYjMnIDogMTg0Ljk5Nyxcblx0J0czJyAgOiAxOTUuOTk4LFxuXHQnRyMzJyA6IDIwNy42NTIsXG5cdCdBYjMnIDogMjA3LjY1Mixcblx0J0EzJyAgOiAyMjAuMDAwLFxuXHQnQSMzJyA6IDIzMy4wODIsXG5cdCdCYjMnIDogMjMzLjA4Mixcblx0J0IzJyAgOiAyNDYuOTQyLFxuXHQnQ2I0JyA6IDI0Ni45NDIsXG5cdCdCIzMnIDogMjYxLjYyNixcblx0J0M0JyAgOiAyNjEuNjI2LFxuXHQnQyM0JyA6IDI3Ny4xODMsXG5cdCdEYjQnIDogMjc3LjE4Myxcblx0J0Q0JyAgOiAyOTMuNjY1LFxuXHQnRCM0JyA6IDMxMS4xMjcsXG5cdCdFYjQnIDogMzExLjEyNyxcblx0J0U0JyAgOiAzMjkuNjI4LFxuXHQnRmI0JyA6IDMyOS42MjgsXG5cdCdFIzQnIDogMzQ5LjIyOCxcblx0J0Y0JyAgOiAzNDkuMjI4LFxuXHQnRiM0JyA6IDM2OS45OTQsXG5cdCdHYjQnIDogMzY5Ljk5NCxcblx0J0c0JyAgOiAzOTEuOTk1LFxuXHQnRyM0JyA6IDQxNS4zMDUsXG5cdCdBYjQnIDogNDE1LjMwNSxcblx0J0E0JyAgOiA0NDAuMDAwLFxuXHQnQSM0JyA6IDQ2Ni4xNjQsXG5cdCdCYjQnIDogNDY2LjE2NCxcblx0J0I0JyAgOiA0OTMuODgzLFxuXHQnQ2I1JyA6IDQ5My44ODMsXG5cdCdCIzQnIDogNTIzLjI1MSxcblx0J0M1JyAgOiA1MjMuMjUxLFxuXHQnQyM1JyA6IDU1NC4zNjUsXG5cdCdEYjUnIDogNTU0LjM2NSxcblx0J0Q1JyAgOiA1ODcuMzMwLFxuXHQnRCM1JyA6IDYyMi4yNTQsXG5cdCdFYjUnIDogNjIyLjI1NCxcblx0J0U1JyAgOiA2NTkuMjU1LFxuXHQnRmI1JyA6IDY1OS4yNTUsXG5cdCdFIzUnIDogNjk4LjQ1Nixcblx0J0Y1JyAgOiA2OTguNDU2LFxuXHQnRiM1JyA6IDczOS45ODksXG5cdCdHYjUnIDogNzM5Ljk4OSxcblx0J0c1JyAgOiA3ODMuOTkxLFxuXHQnRyM1JyA6IDgzMC42MDksXG5cdCdBYjUnIDogODMwLjYwOSxcblx0J0E1JyAgOiA4ODAuMDAwLFxuXHQnQSM1JyA6IDkzMi4zMjgsXG5cdCdCYjUnIDogOTMyLjMyOCxcblx0J0I1JyAgOiA5ODcuNzY3LFxuXHQnQ2I2JyA6IDk4Ny43NjcsXG5cdCdCIzUnIDogMTA0Ni41MCxcblx0J0M2JyAgOiAxMDQ2LjUwLFxuXHQnQyM2JyA6IDExMDguNzMsXG5cdCdEYjYnIDogMTEwOC43Myxcblx0J0Q2JyAgOiAxMTc0LjY2LFxuXHQnRCM2JyA6IDEyNDQuNTEsXG5cdCdFYjYnIDogMTI0NC41MSxcblx0J0ZiNicgOiAxMzE4LjUxLFxuXHQnRTYnICA6IDEzMTguNTEsXG5cdCdFIzYnIDogMTM5Ni45MSxcblx0J0Y2JyAgOiAxMzk2LjkxLFxuXHQnRiM2JyA6IDE0NzkuOTgsXG5cdCdHYjYnIDogMTQ3OS45OCxcblx0J0c2JyAgOiAxNTY3Ljk4LFxuXHQnRyM2JyA6IDE2NjEuMjIsXG5cdCdBYjYnIDogMTY2MS4yMixcblx0J0E2JyAgOiAxNzYwLjAwLFxuXHQnQSM2JyA6IDE4NjQuNjYsXG5cdCdCYjYnIDogMTg2NC42Nixcblx0J0I2JyAgOiAxOTc1LjUzLFxuXHQnQ2I3JyA6IDE5NzUuNTMsXG5cdCdCIzYnIDogMjA5My4wMCxcblx0J0M3JyAgOiAyMDkzLjAwLFxuXHQnQyM3JyA6IDIyMTcuNDYsXG5cdCdEYjcnIDogMjIxNy40Nixcblx0J0Q3JyAgOiAyMzQ5LjMyLFxuXHQnRCM3JyA6IDI0ODkuMDIsXG5cdCdFYjcnIDogMjQ4OS4wMixcblx0J0U3JyAgOiAyNjM3LjAyLFxuXHQnRmI3JyA6IDI2MzcuMDIsXG5cdCdFIzcnIDogMjc5My44Myxcblx0J0Y3JyAgOiAyNzkzLjgzLFxuXHQnRiM3JyA6IDI5NTkuOTYsXG5cdCdHYjcnIDogMjk1OS45Nixcblx0J0c3JyAgOiAzMTM1Ljk2LFxuXHQnRyM3JyA6IDMzMjIuNDQsXG5cdCdBYjcnIDogMzMyMi40NCxcblx0J0E3JyAgOiAzNTIwLjAwLFxuXHQnQSM3JyA6IDM3MjkuMzEsXG5cdCdCYjcnIDogMzcyOS4zMSxcblx0J0I3JyAgOiAzOTUxLjA3LFxuXHQnQ2I4JyA6IDM5NTEuMDcsXG5cdCdCIzcnIDogNDE4Ni4wMSxcblx0J0M4JyAgOiA0MTg2LjAxXG59O1xuXG5cbmxldCBwaXRjaGVzQXJyYXkgPSBbIC8vIEp1c3QgYW4gYXJyYXkgb2Ygbm90ZSBuYW1lcy4gVGhpcyBjYW4gYmUgdXNlZnVsIGZvciBtYXBwaW5nIE1JREkgZGF0YSB0byBub3Rlcy5cblx0J0MwJyxcblx0J0MjMCcsXG5cdCdEMCcsXG5cdCdEIzAnLFxuXHQnRTAnLFxuXHQnRjAnLFxuXHQnRiMwJyxcblx0J0cwJyxcblx0J0cjMCcsXG5cdCdBMCcsXG5cdCdBIzAnLFxuXHQnQjAnLFxuXHQnQzEnLFxuXHQnQyMxJyxcblx0J0QxJyxcblx0J0QjMScsXG5cdCdFMScsXG5cdCdGMScsXG5cdCdGIzEnLFxuXHQnRzEnLFxuXHQnRyMxJyxcblx0J0ExJyxcblx0J0EjMScsXG5cdCdCMScsXG5cdCdDMicsXG5cdCdDIzInLFxuXHQnRDInLFxuXHQnRCMyJyxcblx0J0UyJyxcblx0J0YyJyxcblx0J0YjMicsXG5cdCdHMicsXG5cdCdHIzInLFxuXHQnQTInLFxuXHQnQSMyJyxcblx0J0IyJyxcblx0J0MzJyxcblx0J0MjMycsXG5cdCdEMycsXG5cdCdEIzMnLFxuXHQnRTMnLFxuXHQnRjMnLFxuXHQnRiMzJyxcblx0J0czJyxcblx0J0cjMycsXG5cdCdBMycsXG5cdCdBIzMnLFxuXHQnQjMnLFxuXHQnQzQnLFxuXHQnQyM0Jyxcblx0J0Q0Jyxcblx0J0QjNCcsXG5cdCdFNCcsXG5cdCdGNCcsXG5cdCdGIzQnLFxuXHQnRzQnLFxuXHQnRyM0Jyxcblx0J0E0Jyxcblx0J0EjNCcsXG5cdCdCNCcsXG5cdCdDNScsXG5cdCdDIzUnLFxuXHQnRDUnLFxuXHQnRCM1Jyxcblx0J0U1Jyxcblx0J0Y1Jyxcblx0J0YjNScsXG5cdCdHNScsXG5cdCdHIzUnLFxuXHQnQTUnLFxuXHQnQSM1Jyxcblx0J0I1Jyxcblx0J0M2Jyxcblx0J0MjNicsXG5cdCdENicsXG5cdCdEIzYnLFxuXHQnRTYnLFxuXHQnRjYnLFxuXHQnRiM2Jyxcblx0J0c2Jyxcblx0J0cjNicsXG5cdCdBNicsXG5cdCdBIzYnLFxuXHQnQjYnLFxuXHQnQzcnLFxuXHQnQyM3Jyxcblx0J0Q3Jyxcblx0J0QjNycsXG5cdCdFNycsXG5cdCdGNycsXG5cdCdGIzcnLFxuXHQnRzcnLFxuXHQnRyM3Jyxcblx0J0E3Jyxcblx0J0EjNycsXG5cdCdCNycsXG5cdCdDOCdcbl07XG5cbmV4cG9ydCB7XG5cdHBpdGNoZXMsXG5cdHBpdGNoZXNBcnJheSxcbn07XG4iLCJpbXBvcnQgU291bmRJdGVyYXRvciBmcm9tICcuL3NvdW5kX2l0ZXJhdG9yJztcbmltcG9ydCBQb2x5d2FkIGZyb20gJy4vcG9seXdhZCc7XG5pbXBvcnQgcHJlc2V0cyBmcm9tICcuL3ByZXNldHMnO1xuaW1wb3J0IHtcblx0cGl0Y2hlcyxcblx0cGl0Y2hlc0FycmF5LFxufSBmcm9tICcuL3BpdGNoZXMnO1xuaW1wb3J0IHtcblx0bWlkaU1hcCxcblx0YXNzaWduTWlkaU1hcCxcblx0bWlkaUlucHV0cyxcblx0bWlkaUluc3RydW1lbnQsXG59IGZyb20gJy4vbWlkaSc7XG5pbXBvcnQgV2ViQXVkaW9EQVcgZnJvbSAnLi93YWQuanMnO1xuaW1wb3J0IHsgbG9nU3R1ZmYgfSBmcm9tICcuL2NvbW1vbic7XG5cblxubGV0IFdhZCA9IFdlYkF1ZGlvREFXO1xuV2FkLlBvbHkgPSBQb2x5d2FkO1xuV2FkLlNvdW5kSXRlcmF0b3IgPSBmdW5jdGlvbihhcmdzKXsgcmV0dXJuIG5ldyBTb3VuZEl0ZXJhdG9yKGFyZ3MsIFdhZCk7IH07XG5XYWQucGl0Y2hlcyA9IHBpdGNoZXM7XG5XYWQucGl0Y2hlc0FycmF5ID0gcGl0Y2hlc0FycmF5O1xuV2FkLm1pZGlNYXAgPSBtaWRpTWFwO1xuV2FkLmFzc2lnbk1pZGlNYXAgPSBhc3NpZ25NaWRpTWFwO1xuV2FkLm1pZGlJbnN0cnVtZW50ID0gbWlkaUluc3RydW1lbnQ7XG5XYWQubWlkaUlucHV0cyA9IG1pZGlJbnB1dHM7XG5XYWQucHJlc2V0cyA9IHByZXNldHM7XG5XYWQubG9ncyA9IGxvZ1N0dWZmO1xuXG5cbmlmKHR5cGVvZiBtb2R1bGUgIT09ICd1bmRlZmluZWQnICYmIG1vZHVsZS5leHBvcnRzKSB7IG1vZHVsZS5leHBvcnRzID0gV2FkOyB9XG5cbmV4cG9ydCBkZWZhdWx0IFdhZDtcblxuIiwiLypcclxuICAgIENvcHlyaWdodCAoYykgMjAxMiBEaW5haE1vZSBBQiAmIE9za2FyIEVyaWtzc29uXHJcblxyXG4gICAgUGVybWlzc2lvbiBpcyBoZXJlYnkgZ3JhbnRlZCwgZnJlZSBvZiBjaGFyZ2UsIHRvIGFueSBwZXJzb24gb2J0YWluaW5nIGEgY29weSBvZiB0aGlzIHNvZnR3YXJlIGFuZCBhc3NvY2lhdGVkIGRvY3VtZW50YXRpb25cclxuICAgIGZpbGVzICh0aGUgXCJTb2Z0d2FyZVwiKSwgdG8gZGVhbCBpbiB0aGUgU29mdHdhcmUgd2l0aG91dCByZXN0cmljdGlvbiwgaW5jbHVkaW5nIHdpdGhvdXQgbGltaXRhdGlvbiB0aGUgcmlnaHRzIHRvIHVzZSwgY29weSxcclxuICAgIG1vZGlmeSwgbWVyZ2UsIHB1Ymxpc2gsIGRpc3RyaWJ1dGUsIHN1YmxpY2Vuc2UsIGFuZC9vciBzZWxsIGNvcGllcyBvZiB0aGUgU29mdHdhcmUsIGFuZCB0byBwZXJtaXQgcGVyc29ucyB0byB3aG9tIHRoZSBTb2Z0d2FyZVxyXG4gICAgaXMgZnVybmlzaGVkIHRvIGRvIHNvLCBzdWJqZWN0IHRvIHRoZSBmb2xsb3dpbmcgY29uZGl0aW9uczpcclxuXHJcbiAgICBUaGUgYWJvdmUgY29weXJpZ2h0IG5vdGljZSBhbmQgdGhpcyBwZXJtaXNzaW9uIG5vdGljZSBzaGFsbCBiZSBpbmNsdWRlZCBpbiBhbGwgY29waWVzIG9yIHN1YnN0YW50aWFsIHBvcnRpb25zIG9mIHRoZSBTb2Z0d2FyZS5cclxuXHJcbiAgICBUSEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIElOQ0xVRElORyBCVVQgTk9UIExJTUlURUQgVE8gVEhFIFdBUlJBTlRJRVMgT0YgTUVSQ0hBTlRBQklMSVRZLFxyXG4gICAgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgQU5EIE5PTklORlJJTkdFTUVOVC4gSU4gTk8gRVZFTlQgU0hBTEwgVEhFIEFVVEhPUlMgT1IgQ09QWVJJR0hUIEhPTERFUlMgQkUgTElBQkxFIEZPUiBBTlkgQ0xBSU0sXHJcbiAgICBEQU1BR0VTIE9SIE9USEVSIExJQUJJTElUWSwgV0hFVEhFUiBJTiBBTiBBQ1RJT04gT0YgQ09OVFJBQ1QsIFRPUlQgT1IgT1RIRVJXSVNFLCBBUklTSU5HIEZST00sIE9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFXHJcbiAgICBPUiBUSEUgVVNFIE9SIE9USEVSIERFQUxJTkdTIElOIFRIRSBTT0ZUV0FSRS5cclxuKi9cclxuLypnbG9iYWwgbW9kdWxlKi9cclxuKGZ1bmN0aW9uKCkge1xyXG5cclxuICAgIHZhciB1c2VyQ29udGV4dCxcclxuICAgICAgICB1c2VySW5zdGFuY2UsXHJcbiAgICAgICAgcGlwZSA9IGZ1bmN0aW9uKHBhcmFtLCB2YWwpIHtcclxuICAgICAgICAgICAgcGFyYW0udmFsdWUgPSB2YWw7XHJcbiAgICAgICAgfSxcclxuICAgICAgICBTdXBlciA9IE9iamVjdC5jcmVhdGUobnVsbCwge1xyXG4gICAgICAgICAgICBhY3RpdmF0ZToge1xyXG4gICAgICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oZG9BY3RpdmF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChkb0FjdGl2YXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaW5wdXQuZGlzY29ubmVjdCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5hY3RpdmF0ZU5vZGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5hY3RpdmF0ZUNhbGxiYWNrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdGl2YXRlQ2FsbGJhY2soZG9BY3RpdmF0ZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmlucHV0LmRpc2Nvbm5lY3QoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYnlwYXNzO1xyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fbGFzdEJ5cGFzc1ZhbHVlID09PSB2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2J5cGFzcyA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZhdGUoIXZhbHVlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9sYXN0QnlwYXNzVmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29ubmVjdDoge1xyXG4gICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZGlzY29ubmVjdDoge1xyXG4gICAgICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKHRhcmdldCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0LmRpc2Nvbm5lY3QodGFyZ2V0KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgY29ubmVjdEluT3JkZXI6IHtcclxuICAgICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbihub2RlQXJyYXkpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaSA9IG5vZGVBcnJheS5sZW5ndGggLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFub2RlQXJyYXlbaV0uY29ubmVjdCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJBdWRpb05vZGUuY29ubmVjdEluT3JkZXI6IFR5cGVFcnJvcjogTm90IGFuIEF1ZGlvTm9kZS5cIiwgbm9kZUFycmF5W2ldKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAobm9kZUFycmF5W2kgKyAxXS5pbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9kZUFycmF5W2ldLmNvbm5lY3Qobm9kZUFycmF5W2kgKyAxXS5pbnB1dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBub2RlQXJyYXlbaV0uY29ubmVjdChub2RlQXJyYXlbaSArIDFdKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgZ2V0RGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0ID0ge307XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHRoaXMuZGVmYXVsdHMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgcmVzdWx0W2tleV0gPSB0aGlzLmRlZmF1bHRzW2tleV0udmFsdWU7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGF1dG9tYXRlOiB7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24ocHJvcGVydHksIHZhbHVlLCBkdXJhdGlvbiwgc3RhcnRUaW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHN0YXJ0ID0gc3RhcnRUaW1lID8gfn4oc3RhcnRUaW1lIC8gMTAwMCkgOiB1c2VyQ29udGV4dC5jdXJyZW50VGltZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZHVyID0gZHVyYXRpb24gPyB+fihkdXJhdGlvbiAvIDEwMDApIDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgX2lzID0gdGhpcy5kZWZhdWx0c1twcm9wZXJ0eV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtID0gdGhpc1twcm9wZXJ0eV0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZDtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcmFtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChfaXMuYXV0b21hdGFibGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghZHVyYXRpb24pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXRob2QgPSBcInNldFZhbHVlQXRUaW1lXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldGhvZCA9IFwibGluZWFyUmFtcFRvVmFsdWVBdFRpbWVcIjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbS5jYW5jZWxTY2hlZHVsZWRWYWx1ZXMoc3RhcnQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhcmFtLnNldFZhbHVlQXRUaW1lKHBhcmFtLnZhbHVlLCBzdGFydCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbVttZXRob2RdKHZhbHVlLCBkdXIgKyBzdGFydCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJhbSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkludmFsaWQgUHJvcGVydHkgZm9yIFwiICsgdGhpcy5uYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSxcclxuICAgICAgICBGTE9BVCA9IFwiZmxvYXRcIixcclxuICAgICAgICBCT09MRUFOID0gXCJib29sZWFuXCIsXHJcbiAgICAgICAgU1RSSU5HID0gXCJzdHJpbmdcIixcclxuICAgICAgICBJTlQgPSBcImludFwiO1xyXG5cclxuICAgIGlmICh0eXBlb2YgbW9kdWxlICE9PSBcInVuZGVmaW5lZFwiICYmIG1vZHVsZS5leHBvcnRzKSB7XHJcbiAgICAgICAgbW9kdWxlLmV4cG9ydHMgPSBUdW5hO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSBcImZ1bmN0aW9uXCIpIHtcclxuICAgICAgICB3aW5kb3cuZGVmaW5lKFwiVHVuYVwiLCBkZWZpbml0aW9uKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICAgd2luZG93LlR1bmEgPSBUdW5hO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGRlZmluaXRpb24oKSB7XHJcbiAgICAgICAgcmV0dXJuIFR1bmE7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gVHVuYShjb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIFR1bmEpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBuZXcgVHVuYShjb250ZXh0KTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHZhciBfd2luZG93ID0gdHlwZW9mIHdpbmRvdyA9PT0gXCJ1bmRlZmluZWRcIiA/IHt9IDogd2luZG93O1xyXG5cclxuICAgICAgICBpZiAoIV93aW5kb3cuQXVkaW9Db250ZXh0KSB7XHJcbiAgICAgICAgICAgIF93aW5kb3cuQXVkaW9Db250ZXh0ID0gX3dpbmRvdy53ZWJraXRBdWRpb0NvbnRleHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghY29udGV4dCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInR1bmEuanM6IE1pc3NpbmcgYXVkaW8gY29udGV4dCEgQ3JlYXRpbmcgYSBuZXcgY29udGV4dCBmb3IgeW91LlwiKTtcclxuICAgICAgICAgICAgY29udGV4dCA9IF93aW5kb3cuQXVkaW9Db250ZXh0ICYmIChuZXcgX3dpbmRvdy5BdWRpb0NvbnRleHQoKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghY29udGV4dCkge1xyXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUdW5hIGNhbm5vdCBpbml0aWFsaXplIGJlY2F1c2UgdGhpcyBlbnZpcm9ubWVudCBkb2VzIG5vdCBzdXBwb3J0IHdlYiBhdWRpby5cIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbm5lY3RpZnkoY29udGV4dCk7XHJcbiAgICAgICAgdXNlckNvbnRleHQgPSBjb250ZXh0O1xyXG4gICAgICAgIHVzZXJJbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gY29ubmVjdGlmeShjb250ZXh0KSB7XHJcbiAgICAgICAgaWYgKGNvbnRleHQuX19jb25uZWN0aWZpZWRfXyA9PT0gdHJ1ZSkgcmV0dXJuO1xyXG5cclxuICAgICAgICB2YXIgZ2FpbiA9IGNvbnRleHQuY3JlYXRlR2FpbigpLFxyXG4gICAgICAgICAgICBwcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZihPYmplY3QuZ2V0UHJvdG90eXBlT2YoZ2FpbikpLFxyXG4gICAgICAgICAgICBvY29ubmVjdCA9IHByb3RvLmNvbm5lY3Q7XHJcblxyXG4gICAgICAgIHByb3RvLmNvbm5lY3QgPSBzaGltQ29ubmVjdDtcclxuICAgICAgICBjb250ZXh0Ll9fY29ubmVjdGlmaWVkX18gPSB0cnVlOyAvLyBQcmV2ZW50IG92ZXJyaWRpbmcgY29ubmVjdCBtb3JlIHRoYW4gb25jZVxyXG5cclxuICAgICAgICBmdW5jdGlvbiBzaGltQ29ubmVjdCgpIHtcclxuICAgICAgICAgICAgdmFyIG5vZGUgPSBhcmd1bWVudHNbMF07XHJcbiAgICAgICAgICAgIGFyZ3VtZW50c1swXSA9IFN1cGVyLmlzUHJvdG90eXBlT2YgPyAoU3VwZXIuaXNQcm90b3R5cGVPZihub2RlKSA/IG5vZGUuaW5wdXQgOiBub2RlKSA6IChub2RlLmlucHV0IHx8IG5vZGUpO1xyXG4gICAgICAgICAgICBvY29ubmVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xyXG4gICAgICAgICAgICByZXR1cm4gbm9kZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gZGJUb1dBVm9sdW1lKGRiKSB7XHJcbiAgICAgICAgcmV0dXJuIE1hdGgubWF4KDAsIE1hdGgucm91bmQoMTAwICogTWF0aC5wb3coMiwgZGIgLyA2KSkgLyAxMDApO1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGZtb2QoeCwgeSkge1xyXG4gICAgICAgIC8vIGh0dHA6Ly9rZXZpbi52YW56b25uZXZlbGQubmV0XHJcbiAgICAgICAgLy8gKiAgICAgZXhhbXBsZSAxOiBmbW9kKDUuNywgMS4zKTtcclxuICAgICAgICAvLyAqICAgICByZXR1cm5zIDE6IDAuNVxyXG4gICAgICAgIHZhciB0bXAsIHRtcDIsIHAgPSAwLFxyXG4gICAgICAgICAgICBwWSA9IDAsXHJcbiAgICAgICAgICAgIGwgPSAwLjAsXHJcbiAgICAgICAgICAgIGwyID0gMC4wO1xyXG5cclxuICAgICAgICB0bXAgPSB4LnRvRXhwb25lbnRpYWwoKS5tYXRjaCgvXi5cXC4/KC4qKWUoLispJC8pO1xyXG4gICAgICAgIHAgPSBwYXJzZUludCh0bXBbMl0sIDEwKSAtICh0bXBbMV0gKyBcIlwiKS5sZW5ndGg7XHJcbiAgICAgICAgdG1wID0geS50b0V4cG9uZW50aWFsKCkubWF0Y2goL14uXFwuPyguKillKC4rKSQvKTtcclxuICAgICAgICBwWSA9IHBhcnNlSW50KHRtcFsyXSwgMTApIC0gKHRtcFsxXSArIFwiXCIpLmxlbmd0aDtcclxuXHJcbiAgICAgICAgaWYgKHBZID4gcCkge1xyXG4gICAgICAgICAgICBwID0gcFk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0bXAyID0gKHggJSB5KTtcclxuXHJcbiAgICAgICAgaWYgKHAgPCAtMTAwIHx8IHAgPiAyMCkge1xyXG4gICAgICAgICAgICAvLyB0b0ZpeGVkIHdpbGwgZ2l2ZSBhbiBvdXQgb2YgYm91bmQgZXJyb3Igc28gd2UgZml4IGl0IGxpa2UgdGhpczpcclxuICAgICAgICAgICAgbCA9IE1hdGgucm91bmQoTWF0aC5sb2codG1wMikgLyBNYXRoLmxvZygxMCkpO1xyXG4gICAgICAgICAgICBsMiA9IE1hdGgucG93KDEwLCBsKTtcclxuXHJcbiAgICAgICAgICAgIHJldHVybiAodG1wMiAvIGwyKS50b0ZpeGVkKGwgLSBwKSAqIGwyO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJldHVybiBwYXJzZUZsb2F0KHRtcDIudG9GaXhlZCgtcCkpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiBzaWduKHgpIHtcclxuICAgICAgICBpZiAoeCA9PT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gMTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gTWF0aC5hYnMoeCkgLyB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBmdW5jdGlvbiB0YW5oKG4pIHtcclxuICAgICAgICByZXR1cm4gKE1hdGguZXhwKG4pIC0gTWF0aC5leHAoLW4pKSAvIChNYXRoLmV4cChuKSArIE1hdGguZXhwKC1uKSk7XHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5pdFZhbHVlKHVzZXJWYWwsIGRlZmF1bHRWYWwpIHtcclxuICAgICAgICByZXR1cm4gdXNlclZhbCA9PT0gdW5kZWZpbmVkID8gZGVmYXVsdFZhbCA6IHVzZXJWYWw7XHJcbiAgICB9XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuQml0Y3J1c2hlciA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcclxuICAgICAgICBpZiAoIXByb3BlcnRpZXMpIHtcclxuICAgICAgICAgICAgcHJvcGVydGllcyA9IHRoaXMuZ2V0RGVmYXVsdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5idWZmZXJTaXplID0gcHJvcGVydGllcy5idWZmZXJTaXplIHx8IHRoaXMuZGVmYXVsdHMuYnVmZmVyU2l6ZS52YWx1ZTtcclxuXHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLnByb2Nlc3NvciA9IHVzZXJDb250ZXh0LmNyZWF0ZVNjcmlwdFByb2Nlc3Nvcih0aGlzLmJ1ZmZlclNpemUsIDEsIDEpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5jb25uZWN0KHRoaXMucHJvY2Vzc29yKTtcclxuICAgICAgICB0aGlzLnByb2Nlc3Nvci5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuXHJcbiAgICAgICAgdmFyIHBoYXNlciA9IDAsXHJcbiAgICAgICAgICAgIGxhc3QgPSAwLFxyXG4gICAgICAgICAgICBpbnB1dCwgb3V0cHV0LCBzdGVwLCBpLCBsZW5ndGg7XHJcbiAgICAgICAgdGhpcy5wcm9jZXNzb3Iub25hdWRpb3Byb2Nlc3MgPSBmdW5jdGlvbihlKSB7XHJcbiAgICAgICAgICAgIGlucHV0ID0gZS5pbnB1dEJ1ZmZlci5nZXRDaGFubmVsRGF0YSgwKSxcclxuICAgICAgICAgICAgb3V0cHV0ID0gZS5vdXRwdXRCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCksXHJcbiAgICAgICAgICAgIHN0ZXAgPSBNYXRoLnBvdygxIC8gMiwgdGhpcy5iaXRzKTtcclxuICAgICAgICAgICAgbGVuZ3RoID0gaW5wdXQubGVuZ3RoO1xyXG4gICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgICAgIHBoYXNlciArPSB0aGlzLm5vcm1mcmVxO1xyXG4gICAgICAgICAgICAgICAgaWYgKHBoYXNlciA+PSAxLjApIHtcclxuICAgICAgICAgICAgICAgICAgICBwaGFzZXIgLT0gMS4wO1xyXG4gICAgICAgICAgICAgICAgICAgIGxhc3QgPSBzdGVwICogTWF0aC5mbG9vcihpbnB1dFtpXSAvIHN0ZXAgKyAwLjUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgb3V0cHV0W2ldID0gbGFzdDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMuYml0cyA9IHByb3BlcnRpZXMuYml0cyB8fCB0aGlzLmRlZmF1bHRzLmJpdHMudmFsdWU7XHJcbiAgICAgICAgdGhpcy5ub3JtZnJlcSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLm5vcm1mcmVxLCB0aGlzLmRlZmF1bHRzLm5vcm1mcmVxLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmJ5cGFzcyA9IHByb3BlcnRpZXMuYnlwYXNzIHx8IHRoaXMuZGVmYXVsdHMuYnlwYXNzLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFR1bmEucHJvdG90eXBlLkJpdGNydXNoZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdXBlciwge1xyXG4gICAgICAgIG5hbWU6IHtcclxuICAgICAgICAgICAgdmFsdWU6IFwiQml0Y3J1c2hlclwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGJpdHM6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogNCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxNixcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogSU5UXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYnVmZmVyU2l6ZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA0MDk2LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMjU2LFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMTYzODQsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IElOVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG5vcm1mcmVxOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAuMDAwMSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEuMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYml0czoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc29yLmJpdHM7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucHJvY2Vzc29yLmJpdHMgPSB2YWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbm9ybWZyZXE6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnByb2Nlc3Nvci5ub3JtZnJlcTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzb3Iubm9ybWZyZXEgPSB2YWx1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIFR1bmEucHJvdG90eXBlLkNhYmluZXQgPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5jb252b2x2ZXIgPSB0aGlzLm5ld0NvbnZvbHZlcihwcm9wZXJ0aWVzLmltcHVsc2VQYXRoIHx8IFwiLi4vaW1wdWxzZXMvaW1wdWxzZV9ndWl0YXIud2F2XCIpO1xyXG4gICAgICAgIHRoaXMubWFrZXVwTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLm91dHB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuXHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmNvbnZvbHZlci5pbnB1dCk7XHJcbiAgICAgICAgdGhpcy5jb252b2x2ZXIub3V0cHV0LmNvbm5lY3QodGhpcy5tYWtldXBOb2RlKTtcclxuICAgICAgICB0aGlzLm1ha2V1cE5vZGUuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcbiAgICAgICAgLy9kb24ndCB1c2UgbWFrZXVwR2FpbiBzZXR0ZXIgYXQgaW5pdCB0byBhdm9pZCBzbW9vdGhpbmdcclxuICAgICAgICB0aGlzLm1ha2V1cE5vZGUuZ2Fpbi52YWx1ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLm1ha2V1cEdhaW4sIHRoaXMuZGVmYXVsdHMubWFrZXVwR2Fpbi52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5DYWJpbmV0LnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkNhYmluZXRcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBtYWtldXBHYWluOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMjAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFrZXVwR2Fpbjoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZXVwTm9kZS5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1ha2V1cE5vZGUuZ2Fpbi5zZXRUYXJnZXRBdFRpbWUodmFsdWUsIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbmV3Q29udm9sdmVyOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbihpbXB1bHNlUGF0aCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIG5ldyB1c2VySW5zdGFuY2UuQ29udm9sdmVyKHtcclxuICAgICAgICAgICAgICAgICAgICBpbXB1bHNlOiBpbXB1bHNlUGF0aCxcclxuICAgICAgICAgICAgICAgICAgICBkcnlMZXZlbDogMCxcclxuICAgICAgICAgICAgICAgICAgICB3ZXRMZXZlbDogMVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5DaG9ydXMgPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5hdHRlbnVhdG9yID0gdGhpcy5hY3RpdmF0ZU5vZGUgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5zcGxpdHRlciA9IHVzZXJDb250ZXh0LmNyZWF0ZUNoYW5uZWxTcGxpdHRlcigyKTtcclxuICAgICAgICB0aGlzLmRlbGF5TCA9IHVzZXJDb250ZXh0LmNyZWF0ZURlbGF5KCk7XHJcbiAgICAgICAgdGhpcy5kZWxheVIgPSB1c2VyQ29udGV4dC5jcmVhdGVEZWxheSgpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZUxSID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZVJMID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMubWVyZ2VyID0gdXNlckNvbnRleHQuY3JlYXRlQ2hhbm5lbE1lcmdlcigyKTtcclxuICAgICAgICB0aGlzLm91dHB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuXHJcbiAgICAgICAgdGhpcy5sZm9MID0gbmV3IHVzZXJJbnN0YW5jZS5MRk8oe1xyXG4gICAgICAgICAgICB0YXJnZXQ6IHRoaXMuZGVsYXlMLmRlbGF5VGltZSxcclxuICAgICAgICAgICAgY2FsbGJhY2s6IHBpcGVcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmxmb1IgPSBuZXcgdXNlckluc3RhbmNlLkxGTyh7XHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5kZWxheVIuZGVsYXlUaW1lLFxyXG4gICAgICAgICAgICBjYWxsYmFjazogcGlwZVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLmlucHV0LmNvbm5lY3QodGhpcy5hdHRlbnVhdG9yKTtcclxuICAgICAgICB0aGlzLmF0dGVudWF0b3IuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcbiAgICAgICAgdGhpcy5hdHRlbnVhdG9yLmNvbm5lY3QodGhpcy5zcGxpdHRlcik7XHJcbiAgICAgICAgdGhpcy5zcGxpdHRlci5jb25uZWN0KHRoaXMuZGVsYXlMLCAwKTtcclxuICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5kZWxheVIsIDEpO1xyXG4gICAgICAgIHRoaXMuZGVsYXlMLmNvbm5lY3QodGhpcy5mZWVkYmFja0dhaW5Ob2RlTFIpO1xyXG4gICAgICAgIHRoaXMuZGVsYXlSLmNvbm5lY3QodGhpcy5mZWVkYmFja0dhaW5Ob2RlUkwpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZUxSLmNvbm5lY3QodGhpcy5kZWxheVIpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZVJMLmNvbm5lY3QodGhpcy5kZWxheUwpO1xyXG4gICAgICAgIHRoaXMuZGVsYXlMLmNvbm5lY3QodGhpcy5tZXJnZXIsIDAsIDApO1xyXG4gICAgICAgIHRoaXMuZGVsYXlSLmNvbm5lY3QodGhpcy5tZXJnZXIsIDAsIDEpO1xyXG4gICAgICAgIHRoaXMubWVyZ2VyLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG5cclxuICAgICAgICB0aGlzLmZlZWRiYWNrID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuZmVlZGJhY2ssIHRoaXMuZGVmYXVsdHMuZmVlZGJhY2sudmFsdWUpO1xyXG4gICAgICAgIHRoaXMucmF0ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnJhdGUsIHRoaXMuZGVmYXVsdHMucmF0ZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5kZWxheSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmRlbGF5LCB0aGlzLmRlZmF1bHRzLmRlbGF5LnZhbHVlKTtcclxuICAgICAgICB0aGlzLmRlcHRoID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuZGVwdGgsIHRoaXMuZGVmYXVsdHMuZGVwdGgudmFsdWUpO1xyXG4gICAgICAgIHRoaXMubGZvUi5waGFzZSA9IE1hdGguUEkgLyAyO1xyXG4gICAgICAgIHRoaXMuYXR0ZW51YXRvci5nYWluLnZhbHVlID0gMC42OTM0OyAvLyAxIC8gKDEwIF4gKCgoMjAgKiBsb2cxMCgzKSkgLyAzKSAvIDIwKSlcclxuICAgICAgICB0aGlzLmxmb0wuYWN0aXZhdGUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5sZm9SLmFjdGl2YXRlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuQ2hvcnVzLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkNob3J1c1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGZlZWRiYWNrOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuNCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAwLjk1LFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRlbGF5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMDA0NSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGRlcHRoOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuNyxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMS41LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDgsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYnlwYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBCT09MRUFOXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlbGF5OiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVsYXk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RlbGF5ID0gMC4wMDAyICogKE1hdGgucG93KDEwLCB2YWx1ZSkgKiAyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGZvTC5vZmZzZXQgPSB0aGlzLl9kZWxheTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGZvUi5vZmZzZXQgPSB0aGlzLl9kZWxheTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RlcHRoID0gdGhpcy5fZGVwdGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlcHRoOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVwdGg7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RlcHRoID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxmb0wub3NjaWxsYXRpb24gPSB0aGlzLl9kZXB0aCAqIHRoaXMuX2RlbGF5O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9SLm9zY2lsbGF0aW9uID0gdGhpcy5fZGVwdGggKiB0aGlzLl9kZWxheTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmVlZGJhY2s6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9mZWVkYmFjaztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZmVlZGJhY2sgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZUxSLmdhaW4uc2V0VGFyZ2V0QXRUaW1lKHRoaXMuX2ZlZWRiYWNrLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZlZWRiYWNrR2Fpbk5vZGVSTC5nYWluLnNldFRhcmdldEF0VGltZSh0aGlzLl9mZWVkYmFjaywgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByYXRlOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fcmF0ZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmF0ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLmZyZXF1ZW5jeSA9IHRoaXMuX3JhdGU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxmb1IuZnJlcXVlbmN5ID0gdGhpcy5fcmF0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIFR1bmEucHJvdG90eXBlLkNvbXByZXNzb3IgPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5jb21wTm9kZSA9IHRoaXMuYWN0aXZhdGVOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlRHluYW1pY3NDb21wcmVzc29yKCk7XHJcbiAgICAgICAgdGhpcy5tYWtldXBOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmNvbXBOb2RlLmNvbm5lY3QodGhpcy5tYWtldXBOb2RlKTtcclxuICAgICAgICB0aGlzLm1ha2V1cE5vZGUuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcblxyXG4gICAgICAgIHRoaXMuYXV0b21ha2V1cCA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmF1dG9tYWtldXAsIHRoaXMuZGVmYXVsdHMuYXV0b21ha2V1cC52YWx1ZSk7XHJcblxyXG4gICAgICAgIC8vZG9uJ3QgdXNlIG1ha2V1cEdhaW4gc2V0dGVyIGF0IGluaXRpYWxpemF0aW9uIHRvIGF2b2lkIHNtb290aGluZ1xyXG4gICAgICAgIGlmICh0aGlzLmF1dG9tYWtldXApIHtcclxuICAgICAgICAgICAgdGhpcy5tYWtldXBOb2RlLmdhaW4udmFsdWUgPSBkYlRvV0FWb2x1bWUodGhpcy5jb21wdXRlTWFrZXVwKCkpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubWFrZXVwTm9kZS5nYWluLnZhbHVlID0gZGJUb1dBVm9sdW1lKGluaXRWYWx1ZShwcm9wZXJ0aWVzLm1ha2V1cEdhaW4sIHRoaXMuZGVmYXVsdHMubWFrZXVwR2Fpbi52YWx1ZSkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnRocmVzaG9sZCA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnRocmVzaG9sZCwgdGhpcy5kZWZhdWx0cy50aHJlc2hvbGQudmFsdWUpO1xyXG4gICAgICAgIHRoaXMucmVsZWFzZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnJlbGVhc2UsIHRoaXMuZGVmYXVsdHMucmVsZWFzZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5hdHRhY2sgPSBpbml0VmFsdWUocHJvcGVydGllcy5hdHRhY2ssIHRoaXMuZGVmYXVsdHMuYXR0YWNrLnZhbHVlKTtcclxuICAgICAgICB0aGlzLnJhdGlvID0gcHJvcGVydGllcy5yYXRpbyB8fCB0aGlzLmRlZmF1bHRzLnJhdGlvLnZhbHVlO1xyXG4gICAgICAgIHRoaXMua25lZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmtuZWUsIHRoaXMuZGVmYXVsdHMua25lZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5Db21wcmVzc29yLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkNvbXByZXNzb3JcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICB0aHJlc2hvbGQ6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogLTIwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogLTYwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlbGVhc2U6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMjUwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMTAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAyMDAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgbWFrZXVwR2Fpbjoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEwMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGF0dGFjazoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByYXRpbzoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA0LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDUwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAga25lZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA1LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDQwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYXV0b21ha2V1cDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjb21wdXRlTWFrZXVwOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHZhciBtYWdpY0NvZWZmaWNpZW50ID0gNCwgLy8gcmFpc2UgbWUgaWYgdGhlIG91dHB1dCBpcyB0b28gaG90XHJcbiAgICAgICAgICAgICAgICAgICAgYyA9IHRoaXMuY29tcE5vZGU7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gLShjLnRocmVzaG9sZC52YWx1ZSAtIGMudGhyZXNob2xkLnZhbHVlIC8gYy5yYXRpby52YWx1ZSkgLyBtYWdpY0NvZWZmaWNpZW50O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhdXRvbWFrZXVwOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fYXV0b21ha2V1cDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYXV0b21ha2V1cCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2F1dG9tYWtldXApIHRoaXMubWFrZXVwR2FpbiA9IHRoaXMuY29tcHV0ZU1ha2V1cCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB0aHJlc2hvbGQ6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBOb2RlLnRocmVzaG9sZDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb21wTm9kZS50aHJlc2hvbGQudmFsdWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9hdXRvbWFrZXVwKSB0aGlzLm1ha2V1cEdhaW4gPSB0aGlzLmNvbXB1dGVNYWtldXAoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmF0aW86IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBOb2RlLnJhdGlvO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbXBOb2RlLnJhdGlvLnZhbHVlID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fYXV0b21ha2V1cCkgdGhpcy5tYWtldXBHYWluID0gdGhpcy5jb21wdXRlTWFrZXVwKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGtuZWU6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBOb2RlLmtuZWU7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tcE5vZGUua25lZS52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2F1dG9tYWtldXApIHRoaXMubWFrZXVwR2FpbiA9IHRoaXMuY29tcHV0ZU1ha2V1cCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhdHRhY2s6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBOb2RlLmF0dGFjaztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb21wTm9kZS5hdHRhY2sudmFsdWUgPSB2YWx1ZSAvIDEwMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlbGVhc2U6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmNvbXBOb2RlLnJlbGVhc2U7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29tcE5vZGUucmVsZWFzZS52YWx1ZSA9IHZhbHVlIC8gMTAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbWFrZXVwR2Fpbjoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMubWFrZXVwTm9kZS5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm1ha2V1cE5vZGUuZ2Fpbi5zZXRUYXJnZXRBdFRpbWUoZGJUb1dBVm9sdW1lKHZhbHVlKSwgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuQ29udm9sdmVyID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGVOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuY29udm9sdmVyID0gdXNlckNvbnRleHQuY3JlYXRlQ29udm9sdmVyKCk7XHJcbiAgICAgICAgdGhpcy5kcnkgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJMb3cgPSB1c2VyQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcclxuICAgICAgICB0aGlzLmZpbHRlckhpZ2ggPSB1c2VyQ29udGV4dC5jcmVhdGVCaXF1YWRGaWx0ZXIoKTtcclxuICAgICAgICB0aGlzLndldCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLm91dHB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuXHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmZpbHRlckxvdyk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmRyeSk7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJMb3cuY29ubmVjdCh0aGlzLmZpbHRlckhpZ2gpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVySGlnaC5jb25uZWN0KHRoaXMuY29udm9sdmVyKTtcclxuICAgICAgICB0aGlzLmNvbnZvbHZlci5jb25uZWN0KHRoaXMud2V0KTtcclxuICAgICAgICB0aGlzLndldC5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuICAgICAgICB0aGlzLmRyeS5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuXHJcbiAgICAgICAgLy9kb24ndCB1c2Ugc2V0dGVycyBhdCBpbml0IHRvIGF2b2lkIHNtb290aGluZ1xyXG4gICAgICAgIHRoaXMuZHJ5LmdhaW4udmFsdWUgPSBpbml0VmFsdWUocHJvcGVydGllcy5kcnlMZXZlbCwgdGhpcy5kZWZhdWx0cy5kcnlMZXZlbC52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy53ZXQuZ2Fpbi52YWx1ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLndldExldmVsLCB0aGlzLmRlZmF1bHRzLndldExldmVsLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmZpbHRlckhpZ2guZnJlcXVlbmN5LnZhbHVlID0gcHJvcGVydGllcy5oaWdoQ3V0IHx8IHRoaXMuZGVmYXVsdHMuaGlnaEN1dC52YWx1ZTtcclxuICAgICAgICB0aGlzLmZpbHRlckxvdy5mcmVxdWVuY3kudmFsdWUgPSBwcm9wZXJ0aWVzLmxvd0N1dCB8fCB0aGlzLmRlZmF1bHRzLmxvd0N1dC52YWx1ZTtcclxuICAgICAgICB0aGlzLm91dHB1dC5nYWluLnZhbHVlID0gaW5pdFZhbHVlKHByb3BlcnRpZXMubGV2ZWwsIHRoaXMuZGVmYXVsdHMubGV2ZWwudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVySGlnaC50eXBlID0gXCJsb3dwYXNzXCI7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJMb3cudHlwZSA9IFwiaGlnaHBhc3NcIjtcclxuICAgICAgICB0aGlzLmJ1ZmZlciA9IHByb3BlcnRpZXMuaW1wdWxzZSB8fCBcIi4uL2ltcHVsc2VzL2lyX3Jldl9zaG9ydC53YXZcIjtcclxuICAgICAgICB0aGlzLmJ5cGFzcyA9IHByb3BlcnRpZXMuYnlwYXNzIHx8IHRoaXMuZGVmYXVsdHMuYnlwYXNzLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFR1bmEucHJvdG90eXBlLkNvbnZvbHZlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJDb252b2x2ZXJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBoaWdoQ3V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDIyMDUwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMjAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAyMjA1MCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGxvd0N1dDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAyMCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDIwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMjIwNTAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkcnlMZXZlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICB3ZXRMZXZlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBsZXZlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgbG93Q3V0OiB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXJMb3cuZnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlckxvdy5mcmVxdWVuY3kuc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGhpZ2hDdXQ6IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlckhpZ2guZnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlckhpZ2guZnJlcXVlbmN5LnNldFRhcmdldEF0VGltZSh2YWx1ZSwgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBsZXZlbDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMub3V0cHV0LmdhaW47XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0LmdhaW4uc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGRyeUxldmVsOiB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kcnkuZ2FpbjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kcnkuZ2Fpbi5zZXRUYXJnZXRBdFRpbWUodmFsdWUsIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2V0TGV2ZWw6IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLndldC5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLndldC5nYWluLnNldFRhcmdldEF0VGltZSh2YWx1ZSwgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBidWZmZXI6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5jb252b2x2ZXIuYnVmZmVyO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKGltcHVsc2UpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb252b2x2ZXIgPSB0aGlzLmNvbnZvbHZlcixcclxuICAgICAgICAgICAgICAgICAgICB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuICAgICAgICAgICAgICAgIGlmICghaW1wdWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiVHVuYS5Db252b2x2ZXIuc2V0QnVmZmVyOiBNaXNzaW5nIGltcHVsc2UgcGF0aCFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgeGhyLm9wZW4oXCJHRVRcIiwgaW1wdWxzZSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB4aHIucmVzcG9uc2VUeXBlID0gXCJhcnJheWJ1ZmZlclwiO1xyXG4gICAgICAgICAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh4aHIucmVhZHlTdGF0ZSA9PT0gNCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoeGhyLnN0YXR1cyA8IDMwMCAmJiB4aHIuc3RhdHVzID4gMTk5IHx8IHhoci5zdGF0dXMgPT09IDMwMikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdXNlckNvbnRleHQuZGVjb2RlQXVkaW9EYXRhKHhoci5yZXNwb25zZSwgZnVuY3Rpb24oYnVmZmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29udm9sdmVyLmJ1ZmZlciA9IGJ1ZmZlcjtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoZSkgY29uc29sZS5sb2coXCJUdW5hLkNvbnZvbHZlci5zZXRCdWZmZXI6IEVycm9yIGRlY29kaW5nIGRhdGFcIiArIGUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9O1xyXG4gICAgICAgICAgICAgICAgeGhyLnNlbmQobnVsbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5EZWxheSA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcclxuICAgICAgICBpZiAoIXByb3BlcnRpZXMpIHtcclxuICAgICAgICAgICAgcHJvcGVydGllcyA9IHRoaXMuZ2V0RGVmYXVsdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmRyeSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLndldCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmZpbHRlciA9IHVzZXJDb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xyXG4gICAgICAgIHRoaXMuZGVsYXkgPSB1c2VyQ29udGV4dC5jcmVhdGVEZWxheSgxMCk7XHJcbiAgICAgICAgdGhpcy5mZWVkYmFja05vZGUgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcblxyXG4gICAgICAgIHRoaXMuYWN0aXZhdGVOb2RlLmNvbm5lY3QodGhpcy5kZWxheSk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmRyeSk7XHJcbiAgICAgICAgdGhpcy5kZWxheS5jb25uZWN0KHRoaXMuZmlsdGVyKTtcclxuICAgICAgICB0aGlzLmZpbHRlci5jb25uZWN0KHRoaXMuZmVlZGJhY2tOb2RlKTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrTm9kZS5jb25uZWN0KHRoaXMuZGVsYXkpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tOb2RlLmNvbm5lY3QodGhpcy53ZXQpO1xyXG4gICAgICAgIHRoaXMud2V0LmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG4gICAgICAgIHRoaXMuZHJ5LmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG5cclxuICAgICAgICB0aGlzLmRlbGF5VGltZSA9IHByb3BlcnRpZXMuZGVsYXlUaW1lIHx8IHRoaXMuZGVmYXVsdHMuZGVsYXlUaW1lLnZhbHVlO1xyXG4gICAgICAgIC8vZG9uJ3QgdXNlIHNldHRlcnMgYXQgaW5pdCB0byBhdm9pZCBzbW9vdGhpbmdcclxuICAgICAgICB0aGlzLmZlZWRiYWNrTm9kZS5nYWluLnZhbHVlID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuZmVlZGJhY2ssIHRoaXMuZGVmYXVsdHMuZmVlZGJhY2sudmFsdWUpO1xyXG4gICAgICAgIHRoaXMud2V0LmdhaW4udmFsdWUgPSBpbml0VmFsdWUocHJvcGVydGllcy53ZXRMZXZlbCwgdGhpcy5kZWZhdWx0cy53ZXRMZXZlbC52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5kcnkuZ2Fpbi52YWx1ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmRyeUxldmVsLCB0aGlzLmRlZmF1bHRzLmRyeUxldmVsLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmZpbHRlci5mcmVxdWVuY3kudmFsdWUgPSBwcm9wZXJ0aWVzLmN1dG9mZiB8fCB0aGlzLmRlZmF1bHRzLmN1dG9mZi52YWx1ZTtcclxuICAgICAgICB0aGlzLmZpbHRlci50eXBlID0gXCJsb3dwYXNzXCI7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5EZWxheS5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJEZWxheVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGRlbGF5VGltZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAyMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmVlZGJhY2s6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC40NSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAwLjksXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjdXRvZmY6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMjAwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAyMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDIwMDAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgd2V0TGV2ZWw6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC41LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkcnlMZXZlbDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVsYXlUaW1lOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kZWxheS5kZWxheVRpbWU7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZGVsYXkuZGVsYXlUaW1lLnZhbHVlID0gdmFsdWUgLyAxMDAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICB3ZXRMZXZlbDoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMud2V0LmdhaW47XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2V0LmdhaW4uc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGRyeUxldmVsOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5kcnkuZ2FpbjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kcnkuZ2Fpbi5zZXRUYXJnZXRBdFRpbWUodmFsdWUsIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmVlZGJhY2s6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZlZWRiYWNrTm9kZS5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZlZWRiYWNrTm9kZS5nYWluLnNldFRhcmdldEF0VGltZSh2YWx1ZSwgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjdXRvZmY6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZpbHRlci5mcmVxdWVuY3k7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyLmZyZXF1ZW5jeS5zZXRUYXJnZXRBdFRpbWUodmFsdWUsIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIFR1bmEucHJvdG90eXBlLkZpbHRlciA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcclxuICAgICAgICBpZiAoIXByb3BlcnRpZXMpIHtcclxuICAgICAgICAgICAgcHJvcGVydGllcyA9IHRoaXMuZ2V0RGVmYXVsdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmZpbHRlciA9IHVzZXJDb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5jb25uZWN0KHRoaXMuZmlsdGVyKTtcclxuICAgICAgICB0aGlzLmZpbHRlci5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuXHJcbiAgICAgICAgLy9kb24ndCB1c2Ugc2V0dGVycyBmb3IgZnJlcSBhbmQgZ2FpbiBhdCBpbml0IHRvIGF2b2lkIHNtb290aGluZ1xyXG4gICAgICAgIHRoaXMuZmlsdGVyLmZyZXF1ZW5jeS52YWx1ZSA9IHByb3BlcnRpZXMuZnJlcXVlbmN5IHx8IHRoaXMuZGVmYXVsdHMuZnJlcXVlbmN5LnZhbHVlO1xyXG4gICAgICAgIHRoaXMuUSA9IHByb3BlcnRpZXMucmVzb25hbmNlIHx8IHRoaXMuZGVmYXVsdHMuUS52YWx1ZTtcclxuICAgICAgICB0aGlzLmZpbHRlclR5cGUgPSBpbml0VmFsdWUocHJvcGVydGllcy5maWx0ZXJUeXBlLCB0aGlzLmRlZmF1bHRzLmZpbHRlclR5cGUudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyLmdhaW4udmFsdWUgPSBpbml0VmFsdWUocHJvcGVydGllcy5nYWluLCB0aGlzLmRlZmF1bHRzLmdhaW4udmFsdWUpO1xyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuRmlsdGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkZpbHRlclwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA4MDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAyMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDIyMDUwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgUToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMC4wMDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBnYWluOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAtNDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiA0MCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZpbHRlclR5cGU6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogXCJsb3dwYXNzXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IFNUUklOR1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBmaWx0ZXJUeXBlOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIudHlwZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXIudHlwZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBROiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIuUTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXIuUS52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnYWluOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIuZ2FpbjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXIuZ2Fpbi5zZXRUYXJnZXRBdFRpbWUodmFsdWUsIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZnJlcXVlbmN5OiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maWx0ZXIuZnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlci5mcmVxdWVuY3kuc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5HYWluID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmdhaW5Ob2RlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5jb25uZWN0KHRoaXMuZ2Fpbk5vZGUpO1xyXG4gICAgICAgIHRoaXMuZ2Fpbk5vZGUuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcblxyXG4gICAgICAgIC8vZG9uJ3QgdXNlIHNldHRlciBhdCBpbml0IHRvIGF2b2lkIHNtb290aGluZ1xyXG4gICAgICAgIHRoaXMuZ2Fpbk5vZGUuZ2Fpbi52YWx1ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmdhaW4sIHRoaXMuZGVmYXVsdHMuZ2Fpbi52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5HYWluLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkdhaW5cIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBnYWluOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDEuMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBnYWluOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5nYWluTm9kZS5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmdhaW5Ob2RlLmdhaW4uc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5Nb29nRmlsdGVyID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmJ1ZmZlclNpemUgPSBwcm9wZXJ0aWVzLmJ1ZmZlclNpemUgfHwgdGhpcy5kZWZhdWx0cy5idWZmZXJTaXplLnZhbHVlO1xyXG5cclxuICAgICAgICB0aGlzLmlucHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGVOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMucHJvY2Vzc29yID0gdXNlckNvbnRleHQuY3JlYXRlU2NyaXB0UHJvY2Vzc29yKHRoaXMuYnVmZmVyU2l6ZSwgMSwgMSk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcblxyXG4gICAgICAgIHRoaXMuYWN0aXZhdGVOb2RlLmNvbm5lY3QodGhpcy5wcm9jZXNzb3IpO1xyXG4gICAgICAgIHRoaXMucHJvY2Vzc29yLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG5cclxuICAgICAgICB2YXIgaW4xLCBpbjIsIGluMywgaW40LCBvdXQxLCBvdXQyLCBvdXQzLCBvdXQ0O1xyXG4gICAgICAgIGluMSA9IGluMiA9IGluMyA9IGluNCA9IG91dDEgPSBvdXQyID0gb3V0MyA9IG91dDQgPSAwLjA7XHJcbiAgICAgICAgdmFyIGlucHV0LCBvdXRwdXQsIGYsIGZiLCBpLCBsZW5ndGgsIGlucHV0RmFjdG9yO1xyXG4gICAgICAgIHRoaXMucHJvY2Vzc29yLm9uYXVkaW9wcm9jZXNzID0gZnVuY3Rpb24oZSkge1xyXG4gICAgICAgICAgICBpbnB1dCA9IGUuaW5wdXRCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCk7XHJcbiAgICAgICAgICAgIG91dHB1dCA9IGUub3V0cHV0QnVmZmVyLmdldENoYW5uZWxEYXRhKDApO1xyXG4gICAgICAgICAgICBmID0gdGhpcy5jdXRvZmYgKiAxLjE2O1xyXG4gICAgICAgICAgICBpbnB1dEZhY3RvciA9IDAuMzUwMTMgKiAoZiAqIGYpICogKGYgKiBmKTtcclxuICAgICAgICAgICAgZmIgPSB0aGlzLnJlc29uYW5jZSAqICgxLjAgLSAwLjE1ICogZiAqIGYpO1xyXG4gICAgICAgICAgICBsZW5ndGggPSBpbnB1dC5sZW5ndGg7XHJcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgaW5wdXRbaV0gLT0gb3V0NCAqIGZiO1xyXG4gICAgICAgICAgICAgICAgaW5wdXRbaV0gKj0gaW5wdXRGYWN0b3I7XHJcbiAgICAgICAgICAgICAgICBvdXQxID0gaW5wdXRbaV0gKyAwLjMgKiBpbjEgKyAoMSAtIGYpICogb3V0MTsgLy8gUG9sZSAxXHJcbiAgICAgICAgICAgICAgICBpbjEgPSBpbnB1dFtpXTtcclxuICAgICAgICAgICAgICAgIG91dDIgPSBvdXQxICsgMC4zICogaW4yICsgKDEgLSBmKSAqIG91dDI7IC8vIFBvbGUgMlxyXG4gICAgICAgICAgICAgICAgaW4yID0gb3V0MTtcclxuICAgICAgICAgICAgICAgIG91dDMgPSBvdXQyICsgMC4zICogaW4zICsgKDEgLSBmKSAqIG91dDM7IC8vIFBvbGUgM1xyXG4gICAgICAgICAgICAgICAgaW4zID0gb3V0MjtcclxuICAgICAgICAgICAgICAgIG91dDQgPSBvdXQzICsgMC4zICogaW40ICsgKDEgLSBmKSAqIG91dDQ7IC8vIFBvbGUgNFxyXG4gICAgICAgICAgICAgICAgaW40ID0gb3V0MztcclxuICAgICAgICAgICAgICAgIG91dHB1dFtpXSA9IG91dDQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB0aGlzLmN1dG9mZiA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLmN1dG9mZiwgdGhpcy5kZWZhdWx0cy5jdXRvZmYudmFsdWUpO1xyXG4gICAgICAgIHRoaXMucmVzb25hbmNlID0gaW5pdFZhbHVlKHByb3BlcnRpZXMucmVzb25hbmNlLCB0aGlzLmRlZmF1bHRzLnJlc29uYW5jZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5Nb29nRmlsdGVyLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIk1vb2dGaWx0ZXJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBidWZmZXJTaXplOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDQwOTYsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAyNTYsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxNjM4NCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogSU5UXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYnlwYXNzOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBCT09MRUFOXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY3V0b2ZmOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMDY1LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMC4wMDAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMS4wLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlc29uYW5jZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAzLjUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLjAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiA0LjAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGN1dG9mZjoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc29yLmN1dG9mZjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzb3IuY3V0b2ZmID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHJlc29uYW5jZToge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucHJvY2Vzc29yLnJlc29uYW5jZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcm9jZXNzb3IucmVzb25hbmNlID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5PdmVyZHJpdmUgPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5pbnB1dERyaXZlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMud2F2ZXNoYXBlciA9IHVzZXJDb250ZXh0LmNyZWF0ZVdhdmVTaGFwZXIoKTtcclxuICAgICAgICB0aGlzLm91dHB1dERyaXZlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5jb25uZWN0KHRoaXMuaW5wdXREcml2ZSk7XHJcbiAgICAgICAgdGhpcy5pbnB1dERyaXZlLmNvbm5lY3QodGhpcy53YXZlc2hhcGVyKTtcclxuICAgICAgICB0aGlzLndhdmVzaGFwZXIuY29ubmVjdCh0aGlzLm91dHB1dERyaXZlKTtcclxuICAgICAgICB0aGlzLm91dHB1dERyaXZlLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG5cclxuICAgICAgICB0aGlzLndzX3RhYmxlID0gbmV3IEZsb2F0MzJBcnJheSh0aGlzLmtfblNhbXBsZXMpO1xyXG4gICAgICAgIHRoaXMuZHJpdmUgPSBpbml0VmFsdWUocHJvcGVydGllcy5kcml2ZSwgdGhpcy5kZWZhdWx0cy5kcml2ZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXRHYWluID0gaW5pdFZhbHVlKHByb3BlcnRpZXMub3V0cHV0R2FpbiwgdGhpcy5kZWZhdWx0cy5vdXRwdXRHYWluLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmN1cnZlQW1vdW50ID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuY3VydmVBbW91bnQsIHRoaXMuZGVmYXVsdHMuY3VydmVBbW91bnQudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuYWxnb3JpdGhtSW5kZXggPSBpbml0VmFsdWUocHJvcGVydGllcy5hbGdvcml0aG1JbmRleCwgdGhpcy5kZWZhdWx0cy5hbGdvcml0aG1JbmRleC52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5ieXBhc3MgPSBwcm9wZXJ0aWVzLmJ5cGFzcyB8fCB0aGlzLmRlZmF1bHRzLmJ5cGFzcy52YWx1ZTtcclxuICAgIH07XHJcbiAgICBUdW5hLnByb3RvdHlwZS5PdmVyZHJpdmUucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdXBlciwge1xyXG4gICAgICAgIG5hbWU6IHtcclxuICAgICAgICAgICAgdmFsdWU6IFwiT3ZlcmRyaXZlXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlZmF1bHRzOiB7XHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZToge1xyXG4gICAgICAgICAgICAgICAgZHJpdmU6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FULFxyXG4gICAgICAgICAgICAgICAgICAgIHNjYWxlZDogdHJ1ZVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIG91dHB1dEdhaW46IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IC00NixcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVQsXHJcbiAgICAgICAgICAgICAgICAgICAgc2NhbGVkOiB0cnVlXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgY3VydmVBbW91bnQ6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC43MjUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBhbGdvcml0aG1JbmRleDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDUsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IElOVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBrX25TYW1wbGVzOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiA4MTkyXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkcml2ZToge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW5wdXREcml2ZS5nYWluO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kcml2ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjdXJ2ZUFtb3VudDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnZlQW1vdW50O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJ2ZUFtb3VudCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2FsZ29yaXRobUluZGV4ID09PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hbGdvcml0aG1JbmRleCA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLndhdmVzaGFwZXJBbGdvcml0aG1zW3RoaXMuX2FsZ29yaXRobUluZGV4XSh0aGlzLl9jdXJ2ZUFtb3VudCwgdGhpcy5rX25TYW1wbGVzLCB0aGlzLndzX3RhYmxlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMud2F2ZXNoYXBlci5jdXJ2ZSA9IHRoaXMud3NfdGFibGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG91dHB1dEdhaW46IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLm91dHB1dERyaXZlLmdhaW47XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX291dHB1dEdhaW4gPSBkYlRvV0FWb2x1bWUodmFsdWUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vdXRwdXREcml2ZS5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMuX291dHB1dEdhaW4sIHVzZXJDb250ZXh0LmN1cnJlbnRUaW1lLCAwLjAxKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYWxnb3JpdGhtSW5kZXg6IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9hbGdvcml0aG1JbmRleDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYWxnb3JpdGhtSW5kZXggPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY3VydmVBbW91bnQgPSB0aGlzLl9jdXJ2ZUFtb3VudDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2F2ZXNoYXBlckFsZ29yaXRobXM6IHtcclxuICAgICAgICAgICAgdmFsdWU6IFtcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGFtb3VudCwgbl9zYW1wbGVzLCB3c190YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFtb3VudCA9IE1hdGgubWluKGFtb3VudCwgMC45OTk5KTtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgayA9IDIgKiBhbW91bnQgLyAoMSAtIGFtb3VudCksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGksIHg7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG5fc2FtcGxlczsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHggPSBpICogMiAvIG5fc2FtcGxlcyAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdzX3RhYmxlW2ldID0gKDEgKyBrKSAqIHggLyAoMSArIGsgKiBNYXRoLmFicyh4KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGFtb3VudCwgbl9zYW1wbGVzLCB3c190YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpLCB4LCB5O1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBuX3NhbXBsZXM7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB4ID0gaSAqIDIgLyBuX3NhbXBsZXMgLSAxO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB5ID0gKCgwLjUgKiBNYXRoLnBvdygoeCArIDEuNCksIDIpKSAtIDEpICogeSA+PSAwID8gNS44IDogMS4yO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB3c190YWJsZVtpXSA9IHRhbmgoeSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGFtb3VudCwgbl9zYW1wbGVzLCB3c190YWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBpLCB4LCB5LCBhID0gMSAtIGFtb3VudDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbl9zYW1wbGVzOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeCA9IGkgKiAyIC8gbl9zYW1wbGVzIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeSA9IHggPCAwID8gLU1hdGgucG93KE1hdGguYWJzKHgpLCBhICsgMC4wNCkgOiBNYXRoLnBvdyh4LCBhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSB0YW5oKHkgKiAyKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZnVuY3Rpb24oYW1vdW50LCBuX3NhbXBsZXMsIHdzX3RhYmxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIGksIHgsIHksIGFieCwgYSA9IDEgLSBhbW91bnQgPiAwLjk5ID8gMC45OSA6IDEgLSBhbW91bnQ7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IG5fc2FtcGxlczsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHggPSBpICogMiAvIG5fc2FtcGxlcyAtIDE7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFieCA9IE1hdGguYWJzKHgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoYWJ4IDwgYSkgeSA9IGFieDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYWJ4ID4gYSkgeSA9IGEgKyAoYWJ4IC0gYSkgLyAoMSArIE1hdGgucG93KChhYnggLSBhKSAvICgxIC0gYSksIDIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxzZSBpZiAoYWJ4ID4gMSkgeSA9IGFieDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSBzaWduKHgpICogeSAqICgxIC8gKChhICsgMSkgLyAyKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZ1bmN0aW9uKGFtb3VudCwgbl9zYW1wbGVzLCB3c190YWJsZSkgeyAvLyBmaXhlZCBjdXJ2ZSwgYW1vdW50IGRvZXNuJ3QgZG8gYW55dGhpbmcsIHRoZSBkaXN0b3J0aW9uIGlzIGp1c3QgZnJvbSB0aGUgZHJpdmVcclxuICAgICAgICAgICAgICAgICAgICB2YXIgaSwgeDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbl9zYW1wbGVzOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeCA9IGkgKiAyIC8gbl9zYW1wbGVzIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHggPCAtMC4wODkwNSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSAoLTMgLyA0KSAqICgxIC0gKE1hdGgucG93KCgxIC0gKE1hdGguYWJzKHgpIC0gMC4wMzI4NTcpKSwgMTIpKSArICgxIC8gMykgKiAoTWF0aC5hYnMoeCkgLSAwLjAzMjg0NykpICsgMC4wMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIGlmICh4ID49IC0wLjA4OTA1ICYmIHggPCAwLjMyMDAxOCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSAoLTYuMTUzICogKHggKiB4KSkgKyAzLjkzNzUgKiB4O1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSAwLjYzMDAzNTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmdW5jdGlvbihhbW91bnQsIG5fc2FtcGxlcywgd3NfdGFibGUpIHtcclxuICAgICAgICAgICAgICAgICAgICB2YXIgYSA9IDIgKyBNYXRoLnJvdW5kKGFtb3VudCAqIDE0KSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gd2UgZ28gZnJvbSAyIHRvIDE2IGJpdHMsIGtlZXAgaW4gbWluZCBmb3IgdGhlIFVJXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJpdHMgPSBNYXRoLnJvdW5kKE1hdGgucG93KDIsIGEgLSAxKSksXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHJlYWwgbnVtYmVyIG9mIHF1YW50aXphdGlvbiBzdGVwcyBkaXZpZGVkIGJ5IDJcclxuICAgICAgICAgICAgICAgICAgICAgICAgaSwgeDtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKGkgPSAwOyBpIDwgbl9zYW1wbGVzOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgeCA9IGkgKiAyIC8gbl9zYW1wbGVzIC0gMTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd3NfdGFibGVbaV0gPSBNYXRoLnJvdW5kKHggKiBiaXRzKSAvIGJpdHM7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuUGFubmVyID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLnBhbm5lciA9IHVzZXJDb250ZXh0LmNyZWF0ZVN0ZXJlb1Bhbm5lcigpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5jb25uZWN0KHRoaXMucGFubmVyKTtcclxuICAgICAgICB0aGlzLnBhbm5lci5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuXHJcbiAgICAgICAgdGhpcy5wYW4gPSBpbml0VmFsdWUocHJvcGVydGllcy5wYW4sIHRoaXMuZGVmYXVsdHMucGFuLnZhbHVlKTtcclxuICAgICAgICB0aGlzLmJ5cGFzcyA9IHByb3BlcnRpZXMuYnlwYXNzIHx8IHRoaXMuZGVmYXVsdHMuYnlwYXNzLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFR1bmEucHJvdG90eXBlLlBhbm5lci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJQYW5uZXJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZGVmYXVsdHM6IHtcclxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBwYW46IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC4wLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogLTEuMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEuMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBwYW46IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnBhbm5lci5wYW47XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGFubmVyLnBhbi52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuUGhhc2VyID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuc3BsaXR0ZXIgPSB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUNoYW5uZWxTcGxpdHRlcigyKTtcclxuICAgICAgICB0aGlzLmZpbHRlcnNMID0gW107XHJcbiAgICAgICAgdGhpcy5maWx0ZXJzUiA9IFtdO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZUwgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5mZWVkYmFja0dhaW5Ob2RlUiA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLm1lcmdlciA9IHVzZXJDb250ZXh0LmNyZWF0ZUNoYW5uZWxNZXJnZXIoMik7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJlZFNpZ25hbCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLm91dHB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmxmb0wgPSBuZXcgdXNlckluc3RhbmNlLkxGTyh7XHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5maWx0ZXJzTCxcclxuICAgICAgICAgICAgY2FsbGJhY2s6IHRoaXMuY2FsbGJhY2tcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmxmb1IgPSBuZXcgdXNlckluc3RhbmNlLkxGTyh7XHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5maWx0ZXJzUixcclxuICAgICAgICAgICAgY2FsbGJhY2s6IHRoaXMuY2FsbGJhY2tcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdmFyIGkgPSB0aGlzLnN0YWdlO1xyXG4gICAgICAgIHdoaWxlIChpLS0pIHtcclxuICAgICAgICAgICAgdGhpcy5maWx0ZXJzTFtpXSA9IHVzZXJDb250ZXh0LmNyZWF0ZUJpcXVhZEZpbHRlcigpO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlcnNSW2ldID0gdXNlckNvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XHJcbiAgICAgICAgICAgIHRoaXMuZmlsdGVyc0xbaV0udHlwZSA9IFwiYWxscGFzc1wiO1xyXG4gICAgICAgICAgICB0aGlzLmZpbHRlcnNSW2ldLnR5cGUgPSBcImFsbHBhc3NcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMuc3BsaXR0ZXIpO1xyXG4gICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcbiAgICAgICAgdGhpcy5zcGxpdHRlci5jb25uZWN0KHRoaXMuZmlsdGVyc0xbMF0sIDAsIDApO1xyXG4gICAgICAgIHRoaXMuc3BsaXR0ZXIuY29ubmVjdCh0aGlzLmZpbHRlcnNSWzBdLCAxLCAwKTtcclxuICAgICAgICB0aGlzLmNvbm5lY3RJbk9yZGVyKHRoaXMuZmlsdGVyc0wpO1xyXG4gICAgICAgIHRoaXMuY29ubmVjdEluT3JkZXIodGhpcy5maWx0ZXJzUik7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJzTFt0aGlzLnN0YWdlIC0gMV0uY29ubmVjdCh0aGlzLmZlZWRiYWNrR2Fpbk5vZGVMKTtcclxuICAgICAgICB0aGlzLmZpbHRlcnNMW3RoaXMuc3RhZ2UgLSAxXS5jb25uZWN0KHRoaXMubWVyZ2VyLCAwLCAwKTtcclxuICAgICAgICB0aGlzLmZpbHRlcnNSW3RoaXMuc3RhZ2UgLSAxXS5jb25uZWN0KHRoaXMuZmVlZGJhY2tHYWluTm9kZVIpO1xyXG4gICAgICAgIHRoaXMuZmlsdGVyc1JbdGhpcy5zdGFnZSAtIDFdLmNvbm5lY3QodGhpcy5tZXJnZXIsIDAsIDEpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tHYWluTm9kZUwuY29ubmVjdCh0aGlzLmZpbHRlcnNMWzBdKTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrR2Fpbk5vZGVSLmNvbm5lY3QodGhpcy5maWx0ZXJzUlswXSk7XHJcbiAgICAgICAgdGhpcy5tZXJnZXIuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcblxyXG4gICAgICAgIHRoaXMucmF0ZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnJhdGUsIHRoaXMuZGVmYXVsdHMucmF0ZS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5iYXNlTW9kdWxhdGlvbkZyZXF1ZW5jeSA9IHByb3BlcnRpZXMuYmFzZU1vZHVsYXRpb25GcmVxdWVuY3kgfHwgdGhpcy5kZWZhdWx0cy5iYXNlTW9kdWxhdGlvbkZyZXF1ZW5jeS52YWx1ZTtcclxuICAgICAgICB0aGlzLmRlcHRoID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuZGVwdGgsIHRoaXMuZGVmYXVsdHMuZGVwdGgudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2sgPSBpbml0VmFsdWUocHJvcGVydGllcy5mZWVkYmFjaywgdGhpcy5kZWZhdWx0cy5mZWVkYmFjay52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5zdGVyZW9QaGFzZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnN0ZXJlb1BoYXNlLCB0aGlzLmRlZmF1bHRzLnN0ZXJlb1BoYXNlLnZhbHVlKTtcclxuXHJcbiAgICAgICAgdGhpcy5sZm9MLmFjdGl2YXRlKHRydWUpO1xyXG4gICAgICAgIHRoaXMubGZvUi5hY3RpdmF0ZSh0cnVlKTtcclxuICAgICAgICB0aGlzLmJ5cGFzcyA9IHByb3BlcnRpZXMuYnlwYXNzIHx8IHRoaXMuZGVmYXVsdHMuYnlwYXNzLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFR1bmEucHJvdG90eXBlLlBoYXNlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJQaGFzZXJcIlxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3RhZ2U6IHtcclxuICAgICAgICAgICAgdmFsdWU6IDRcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlZmF1bHRzOiB7XHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZToge1xyXG4gICAgICAgICAgICAgICAgcmF0ZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLjEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogOCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkZXB0aDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLjYsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBmZWVkYmFjazoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLjcsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBzdGVyZW9QaGFzZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA0MCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxODAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgYmFzZU1vZHVsYXRpb25GcmVxdWVuY3k6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogNzAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogNTAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMTUwMCxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FsbGJhY2s6IHtcclxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKGZpbHRlcnMsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBzdGFnZSA9IDA7IHN0YWdlIDwgNDsgc3RhZ2UrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlcnNbc3RhZ2VdLmZyZXF1ZW5jeS52YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZXB0aDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RlcHRoO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kZXB0aCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLm9zY2lsbGF0aW9uID0gdGhpcy5fYmFzZU1vZHVsYXRpb25GcmVxdWVuY3kgKiB0aGlzLl9kZXB0aDtcclxuICAgICAgICAgICAgICAgIHRoaXMubGZvUi5vc2NpbGxhdGlvbiA9IHRoaXMuX2Jhc2VNb2R1bGF0aW9uRnJlcXVlbmN5ICogdGhpcy5fZGVwdGg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHJhdGU6IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yYXRlO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9yYXRlID0gdmFsdWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxmb0wuZnJlcXVlbmN5ID0gdGhpcy5fcmF0ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGZvUi5mcmVxdWVuY3kgPSB0aGlzLl9yYXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBiYXNlTW9kdWxhdGlvbkZyZXF1ZW5jeToge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2Jhc2VNb2R1bGF0aW9uRnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9iYXNlTW9kdWxhdGlvbkZyZXF1ZW5jeSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLm9mZnNldCA9IHRoaXMuX2Jhc2VNb2R1bGF0aW9uRnJlcXVlbmN5O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9SLm9mZnNldCA9IHRoaXMuX2Jhc2VNb2R1bGF0aW9uRnJlcXVlbmN5O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZXB0aCA9IHRoaXMuX2RlcHRoO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBmZWVkYmFjazoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2ZlZWRiYWNrO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9mZWVkYmFjayA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mZWVkYmFja0dhaW5Ob2RlTC5nYWluLnNldFRhcmdldEF0VGltZSh0aGlzLl9mZWVkYmFjaywgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mZWVkYmFja0dhaW5Ob2RlUi5nYWluLnNldFRhcmdldEF0VGltZSh0aGlzLl9mZWVkYmFjaywgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBzdGVyZW9QaGFzZToge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3N0ZXJlb1BoYXNlO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdGVyZW9QaGFzZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdmFyIG5ld1BoYXNlID0gdGhpcy5sZm9MLl9waGFzZSArIHRoaXMuX3N0ZXJlb1BoYXNlICogTWF0aC5QSSAvIDE4MDtcclxuICAgICAgICAgICAgICAgIG5ld1BoYXNlID0gZm1vZChuZXdQaGFzZSwgMiAqIE1hdGguUEkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9SLl9waGFzZSA9IG5ld1BoYXNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuUGluZ1BvbmdEZWxheSA9IGZ1bmN0aW9uKHByb3BlcnRpZXMpIHtcclxuICAgICAgICBpZiAoIXByb3BlcnRpZXMpIHtcclxuICAgICAgICAgICAgcHJvcGVydGllcyA9IHRoaXMuZ2V0RGVmYXVsdHMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5pbnB1dCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLndldCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLnN0ZXJlb1RvTW9ub01peCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrTGV2ZWwgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5kZWxheUxlZnQgPSB1c2VyQ29udGV4dC5jcmVhdGVEZWxheSgxMCk7XHJcbiAgICAgICAgdGhpcy5kZWxheVJpZ2h0ID0gdXNlckNvbnRleHQuY3JlYXRlRGVsYXkoMTApO1xyXG5cclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLnNwbGl0dGVyID0gdXNlckNvbnRleHQuY3JlYXRlQ2hhbm5lbFNwbGl0dGVyKDIpO1xyXG4gICAgICAgIHRoaXMubWVyZ2VyID0gdXNlckNvbnRleHQuY3JlYXRlQ2hhbm5lbE1lcmdlcigyKTtcclxuXHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLnNwbGl0dGVyKTtcclxuICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5zdGVyZW9Ub01vbm9NaXgsIDAsIDApO1xyXG4gICAgICAgIHRoaXMuc3BsaXR0ZXIuY29ubmVjdCh0aGlzLnN0ZXJlb1RvTW9ub01peCwgMSwgMCk7XHJcbiAgICAgICAgdGhpcy5zdGVyZW9Ub01vbm9NaXguZ2Fpbi52YWx1ZSA9IC41O1xyXG4gICAgICAgIHRoaXMuc3RlcmVvVG9Nb25vTWl4LmNvbm5lY3QodGhpcy53ZXQpO1xyXG4gICAgICAgIHRoaXMud2V0LmNvbm5lY3QodGhpcy5kZWxheUxlZnQpO1xyXG4gICAgICAgIHRoaXMuZmVlZGJhY2tMZXZlbC5jb25uZWN0KHRoaXMud2V0KTtcclxuICAgICAgICB0aGlzLmRlbGF5TGVmdC5jb25uZWN0KHRoaXMuZGVsYXlSaWdodCk7XHJcbiAgICAgICAgdGhpcy5kZWxheVJpZ2h0LmNvbm5lY3QodGhpcy5mZWVkYmFja0xldmVsKTtcclxuICAgICAgICB0aGlzLmRlbGF5TGVmdC5jb25uZWN0KHRoaXMubWVyZ2VyLCAwLCAwKTtcclxuICAgICAgICB0aGlzLmRlbGF5UmlnaHQuY29ubmVjdCh0aGlzLm1lcmdlciwgMCwgMSk7XHJcbiAgICAgICAgdGhpcy5tZXJnZXIuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcblxyXG4gICAgICAgIHRoaXMuZGVsYXlUaW1lTGVmdCA9IHByb3BlcnRpZXMuZGVsYXlUaW1lTGVmdCAhPT0gdW5kZWZpbmVkID8gcHJvcGVydGllcy5kZWxheVRpbWVMZWZ0IDogdGhpcy5kZWZhdWx0cy5kZWxheVRpbWVMZWZ0LnZhbHVlO1xyXG4gICAgICAgIHRoaXMuZGVsYXlUaW1lUmlnaHQgPSBwcm9wZXJ0aWVzLmRlbGF5VGltZVJpZ2h0ICE9PSB1bmRlZmluZWQgPyBwcm9wZXJ0aWVzLmRlbGF5VGltZVJpZ2h0IDogdGhpcy5kZWZhdWx0cy5kZWxheVRpbWVSaWdodC52YWx1ZTtcclxuICAgICAgICB0aGlzLmZlZWRiYWNrTGV2ZWwuZ2Fpbi52YWx1ZSA9IHByb3BlcnRpZXMuZmVlZGJhY2sgIT09IHVuZGVmaW5lZCA/IHByb3BlcnRpZXMuZmVlZGJhY2sgOiB0aGlzLmRlZmF1bHRzLmZlZWRiYWNrLnZhbHVlO1xyXG4gICAgICAgIHRoaXMud2V0LmdhaW4udmFsdWUgPSBwcm9wZXJ0aWVzLndldExldmVsICE9PSB1bmRlZmluZWQgPyBwcm9wZXJ0aWVzLndldExldmVsIDogdGhpcy5kZWZhdWx0cy53ZXRMZXZlbC52YWx1ZTtcclxuICAgICAgICB0aGlzLmJ5cGFzcyA9IHByb3BlcnRpZXMuYnlwYXNzIHx8IHRoaXMuZGVmYXVsdHMuYnlwYXNzLnZhbHVlO1xyXG4gICAgfTtcclxuICAgIFR1bmEucHJvdG90eXBlLlBpbmdQb25nRGVsYXkucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdXBlciwge1xyXG4gICAgICAgIG5hbWU6IHtcclxuICAgICAgICAgICAgdmFsdWU6IFwiUGluZ1BvbmdEZWxheVwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWxheVRpbWVMZWZ0OiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZGVsYXlUaW1lTGVmdDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGVsYXlUaW1lTGVmdCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZWxheUxlZnQuZGVsYXlUaW1lLnZhbHVlID0gdmFsdWUgLyAxMDAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWxheVRpbWVSaWdodDoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2RlbGF5VGltZVJpZ2h0O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9kZWxheVRpbWVSaWdodCA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kZWxheVJpZ2h0LmRlbGF5VGltZS52YWx1ZSA9IHZhbHVlIC8gMTAwMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgd2V0TGV2ZWw6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy53ZXQuZ2FpbjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMud2V0LmdhaW4uc2V0VGFyZ2V0QXRUaW1lKHZhbHVlLCB1c2VyQ29udGV4dC5jdXJyZW50VGltZSwgMC4wMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LCBcclxuICAgICAgICBmZWVkYmFjazoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmZlZWRiYWNrTGV2ZWwuZ2FpbjtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmVlZGJhY2tMZXZlbC5nYWluLnNldFRhcmdldEF0VGltZSh2YWx1ZSwgdXNlckNvbnRleHQuY3VycmVudFRpbWUsIDAuMDEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGRlbGF5VGltZUxlZnQ6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMjAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEwMDAwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBJTlRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBkZWxheVRpbWVSaWdodDoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiA0MDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMTAwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IElOVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZlZWRiYWNrOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMyxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgd2V0TGV2ZWw6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC41LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIFR1bmEucHJvdG90eXBlLlRyZW1vbG8gPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5zcGxpdHRlciA9IHRoaXMuYWN0aXZhdGVOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlQ2hhbm5lbFNwbGl0dGVyKDIpO1xyXG4gICAgICAgIHRoaXMuYW1wbGl0dWRlTCA9IHVzZXJDb250ZXh0LmNyZWF0ZUdhaW4oKTtcclxuICAgICAgICB0aGlzLmFtcGxpdHVkZVIgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5tZXJnZXIgPSB1c2VyQ29udGV4dC5jcmVhdGVDaGFubmVsTWVyZ2VyKDIpO1xyXG4gICAgICAgIHRoaXMub3V0cHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMubGZvTCA9IG5ldyB1c2VySW5zdGFuY2UuTEZPKHtcclxuICAgICAgICAgICAgdGFyZ2V0OiB0aGlzLmFtcGxpdHVkZUwuZ2FpbixcclxuICAgICAgICAgICAgY2FsbGJhY2s6IHBpcGVcclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmxmb1IgPSBuZXcgdXNlckluc3RhbmNlLkxGTyh7XHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcy5hbXBsaXR1ZGVSLmdhaW4sXHJcbiAgICAgICAgICAgIGNhbGxiYWNrOiBwaXBlXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMuaW5wdXQuY29ubmVjdCh0aGlzLnNwbGl0dGVyKTtcclxuICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5hbXBsaXR1ZGVMLCAwKTtcclxuICAgICAgICB0aGlzLnNwbGl0dGVyLmNvbm5lY3QodGhpcy5hbXBsaXR1ZGVSLCAxKTtcclxuICAgICAgICB0aGlzLmFtcGxpdHVkZUwuY29ubmVjdCh0aGlzLm1lcmdlciwgMCwgMCk7XHJcbiAgICAgICAgdGhpcy5hbXBsaXR1ZGVSLmNvbm5lY3QodGhpcy5tZXJnZXIsIDAsIDEpO1xyXG4gICAgICAgIHRoaXMubWVyZ2VyLmNvbm5lY3QodGhpcy5vdXRwdXQpO1xyXG5cclxuICAgICAgICB0aGlzLnJhdGUgPSBwcm9wZXJ0aWVzLnJhdGUgfHwgdGhpcy5kZWZhdWx0cy5yYXRlLnZhbHVlO1xyXG4gICAgICAgIHRoaXMuaW50ZW5zaXR5ID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuaW50ZW5zaXR5LCB0aGlzLmRlZmF1bHRzLmludGVuc2l0eS52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5zdGVyZW9QaGFzZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnN0ZXJlb1BoYXNlLCB0aGlzLmRlZmF1bHRzLnN0ZXJlb1BoYXNlLnZhbHVlKTtcclxuXHJcbiAgICAgICAgdGhpcy5sZm9MLm9mZnNldCA9IDEgLSAodGhpcy5pbnRlbnNpdHkgLyAyKTtcclxuICAgICAgICB0aGlzLmxmb1Iub2Zmc2V0ID0gMSAtICh0aGlzLmludGVuc2l0eSAvIDIpO1xyXG4gICAgICAgIHRoaXMubGZvTC5waGFzZSA9IHRoaXMuc3RlcmVvUGhhc2UgKiBNYXRoLlBJIC8gMTgwO1xyXG5cclxuICAgICAgICB0aGlzLmxmb0wuYWN0aXZhdGUodHJ1ZSk7XHJcbiAgICAgICAgdGhpcy5sZm9SLmFjdGl2YXRlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuVHJlbW9sby5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJUcmVtb2xvXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlZmF1bHRzOiB7XHJcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICB2YWx1ZToge1xyXG4gICAgICAgICAgICAgICAgaW50ZW5zaXR5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMyxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHN0ZXJlb1BoYXNlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMTgwLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJhdGU6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogNSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAuMSxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDExLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBpbnRlbnNpdHk6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9pbnRlbnNpdHk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2ludGVuc2l0eSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLm9mZnNldCA9IDEgLSB0aGlzLl9pbnRlbnNpdHkgLyAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9SLm9mZnNldCA9IDEgLSB0aGlzLl9pbnRlbnNpdHkgLyAyO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLm9zY2lsbGF0aW9uID0gdGhpcy5faW50ZW5zaXR5O1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9SLm9zY2lsbGF0aW9uID0gdGhpcy5faW50ZW5zaXR5O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByYXRlOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fcmF0ZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmF0ZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5sZm9MLmZyZXF1ZW5jeSA9IHRoaXMuX3JhdGU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxmb1IuZnJlcXVlbmN5ID0gdGhpcy5fcmF0ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc3RlcmVvUGhhc2U6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9zdGVyZW9QaGFzZTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3RlcmVvUGhhc2UgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHZhciBuZXdQaGFzZSA9IHRoaXMubGZvTC5fcGhhc2UgKyB0aGlzLl9zdGVyZW9QaGFzZSAqIE1hdGguUEkgLyAxODA7XHJcbiAgICAgICAgICAgICAgICBuZXdQaGFzZSA9IGZtb2QobmV3UGhhc2UsIDIgKiBNYXRoLlBJKTtcclxuICAgICAgICAgICAgICAgIHRoaXMubGZvUi5waGFzZSA9IG5ld1BoYXNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgVHVuYS5wcm90b3R5cGUuV2FoV2FoID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuYWN0aXZhdGVOb2RlID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuZW52ZWxvcGVGb2xsb3dlciA9IG5ldyB1c2VySW5zdGFuY2UuRW52ZWxvcGVGb2xsb3dlcih7XHJcbiAgICAgICAgICAgIHRhcmdldDogdGhpcyxcclxuICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKGNvbnRleHQsIHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZXh0LnN3ZWVwID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgICAgICB0aGlzLmZpbHRlckJwID0gdXNlckNvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XHJcbiAgICAgICAgdGhpcy5maWx0ZXJQZWFraW5nID0gdXNlckNvbnRleHQuY3JlYXRlQmlxdWFkRmlsdGVyKCk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcblxyXG4gICAgICAgIC8vQ29ubmVjdCBBdWRpb05vZGVzXHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmZpbHRlckJwKTtcclxuICAgICAgICB0aGlzLmZpbHRlckJwLmNvbm5lY3QodGhpcy5maWx0ZXJQZWFraW5nKTtcclxuICAgICAgICB0aGlzLmZpbHRlclBlYWtpbmcuY29ubmVjdCh0aGlzLm91dHB1dCk7XHJcblxyXG4gICAgICAgIC8vU2V0IFByb3BlcnRpZXNcclxuICAgICAgICB0aGlzLmluaXQoKTtcclxuICAgICAgICB0aGlzLmF1dG9tb2RlID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuYXV0b21vZGUsIHRoaXMuZGVmYXVsdHMuYXV0b21vZGUudmFsdWUpO1xyXG4gICAgICAgIHRoaXMucmVzb25hbmNlID0gcHJvcGVydGllcy5yZXNvbmFuY2UgfHwgdGhpcy5kZWZhdWx0cy5yZXNvbmFuY2UudmFsdWU7XHJcbiAgICAgICAgdGhpcy5zZW5zaXRpdml0eSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnNlbnNpdGl2aXR5LCB0aGlzLmRlZmF1bHRzLnNlbnNpdGl2aXR5LnZhbHVlKTtcclxuICAgICAgICB0aGlzLmJhc2VGcmVxdWVuY3kgPSBpbml0VmFsdWUocHJvcGVydGllcy5iYXNlRnJlcXVlbmN5LCB0aGlzLmRlZmF1bHRzLmJhc2VGcmVxdWVuY3kudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuZXhjdXJzaW9uT2N0YXZlcyA9IHByb3BlcnRpZXMuZXhjdXJzaW9uT2N0YXZlcyB8fCB0aGlzLmRlZmF1bHRzLmV4Y3Vyc2lvbk9jdGF2ZXMudmFsdWU7XHJcbiAgICAgICAgdGhpcy5zd2VlcCA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnN3ZWVwLCB0aGlzLmRlZmF1bHRzLnN3ZWVwLnZhbHVlKTtcclxuXHJcbiAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuZ2Fpbi52YWx1ZSA9IDI7XHJcbiAgICAgICAgdGhpcy5lbnZlbG9wZUZvbGxvd2VyLmFjdGl2YXRlKHRydWUpO1xyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuV2FoV2FoLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIldhaFdhaFwiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgdmFsdWU6IHtcclxuICAgICAgICAgICAgICAgIGF1dG9tb2RlOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IHRydWUsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBiYXNlRnJlcXVlbmN5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuNSxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGV4Y3Vyc2lvbk9jdGF2ZXM6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMixcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiA2LFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHN3ZWVwOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMixcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIHJlc29uYW5jZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAxMCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc2Vuc2l0aXZpdHk6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC41LFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogLTEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAxLFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBhdXRvbW9kZToge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2F1dG9tb2RlO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hdXRvbW9kZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgaWYgKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmVudmVsb3BlRm9sbG93ZXIuaW5wdXQpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZW52ZWxvcGVGb2xsb3dlci5hY3RpdmF0ZSh0cnVlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5lbnZlbG9wZUZvbGxvd2VyLmFjdGl2YXRlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZS5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZU5vZGUuY29ubmVjdCh0aGlzLmZpbHRlckJwKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZmlsdGVyRnJlcVRpbWVvdXQ6IHtcclxuICAgICAgICAgICAgdmFsdWU6IDBcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNldEZpbHRlckZyZXE6IHtcclxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlckJwLmZyZXF1ZW5jeS52YWx1ZSA9IE1hdGgubWluKDIyMDUwLCB0aGlzLl9iYXNlRnJlcXVlbmN5ICsgdGhpcy5fZXhjdXJzaW9uRnJlcXVlbmN5ICogdGhpcy5fc3dlZXApO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUGVha2luZy5mcmVxdWVuY3kudmFsdWUgPSBNYXRoLm1pbigyMjA1MCwgdGhpcy5fYmFzZUZyZXF1ZW5jeSArIHRoaXMuX2V4Y3Vyc2lvbkZyZXF1ZW5jeSAqIHRoaXMuX3N3ZWVwKTtcclxuICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5maWx0ZXJGcmVxVGltZW91dCk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy9wdXQgb24gdGhlIG5leHQgY3ljbGUgdG8gbGV0IGFsbCBpbml0IHByb3BlcnRpZXMgYmUgc2V0XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJGcmVxVGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0RmlsdGVyRnJlcSgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0uYmluZCh0aGlzKSwgMCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHN3ZWVwOiB7XHJcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fc3dlZXA7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3N3ZWVwID0gTWF0aC5wb3codmFsdWUgPiAxID8gMSA6IHZhbHVlIDwgMCA/IDAgOiB2YWx1ZSwgdGhpcy5fc2Vuc2l0aXZpdHkpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZXRGaWx0ZXJGcmVxKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGJhc2VGcmVxdWVuY3k6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9iYXNlRnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9iYXNlRnJlcXVlbmN5ID0gNTAgKiBNYXRoLnBvdygxMCwgdmFsdWUgKiAyKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2V4Y3Vyc2lvbkZyZXF1ZW5jeSA9IE1hdGgubWluKHVzZXJDb250ZXh0LnNhbXBsZVJhdGUgLyAyLCB0aGlzLmJhc2VGcmVxdWVuY3kgKiBNYXRoLnBvdygyLCB0aGlzLl9leGN1cnNpb25PY3RhdmVzKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldEZpbHRlckZyZXEoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZXhjdXJzaW9uT2N0YXZlczoge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2V4Y3Vyc2lvbk9jdGF2ZXM7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2V4Y3Vyc2lvbk9jdGF2ZXMgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2V4Y3Vyc2lvbkZyZXF1ZW5jeSA9IE1hdGgubWluKHVzZXJDb250ZXh0LnNhbXBsZVJhdGUgLyAyLCB0aGlzLmJhc2VGcmVxdWVuY3kgKiBNYXRoLnBvdygyLCB0aGlzLl9leGN1cnNpb25PY3RhdmVzKSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnNldEZpbHRlckZyZXEoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgc2Vuc2l0aXZpdHk6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9zZW5zaXRpdml0eTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2Vuc2l0aXZpdHkgPSBNYXRoLnBvdygxMCwgdmFsdWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZXNvbmFuY2U6IHtcclxuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9yZXNvbmFuY2U7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Jlc29uYW5jZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJQZWFraW5nLlEgPSB0aGlzLl9yZXNvbmFuY2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGluaXQ6IHtcclxuICAgICAgICAgICAgdmFsdWU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5vdXRwdXQuZ2Fpbi52YWx1ZSA9IDE7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlclBlYWtpbmcudHlwZSA9IFwicGVha2luZ1wiO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJCcC50eXBlID0gXCJiYW5kcGFzc1wiO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5maWx0ZXJQZWFraW5nLmZyZXF1ZW5jeS52YWx1ZSA9IDEwMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyUGVha2luZy5nYWluLnZhbHVlID0gMjA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlclBlYWtpbmcuUS52YWx1ZSA9IDU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlckJwLmZyZXF1ZW5jeS52YWx1ZSA9IDEwMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuZmlsdGVyQnAuUS52YWx1ZSA9IDE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5FbnZlbG9wZUZvbGxvd2VyID0gZnVuY3Rpb24ocHJvcGVydGllcykge1xyXG4gICAgICAgIGlmICghcHJvcGVydGllcykge1xyXG4gICAgICAgICAgICBwcm9wZXJ0aWVzID0gdGhpcy5nZXREZWZhdWx0cygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmlucHV0ID0gdXNlckNvbnRleHQuY3JlYXRlR2FpbigpO1xyXG4gICAgICAgIHRoaXMuanNOb2RlID0gdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVTY3JpcHRQcm9jZXNzb3IodGhpcy5idWZmZXJzaXplLCAxLCAxKTtcclxuXHJcbiAgICAgICAgdGhpcy5pbnB1dC5jb25uZWN0KHRoaXMub3V0cHV0KTtcclxuXHJcbiAgICAgICAgdGhpcy5hdHRhY2tUaW1lID0gaW5pdFZhbHVlKHByb3BlcnRpZXMuYXR0YWNrVGltZSwgdGhpcy5kZWZhdWx0cy5hdHRhY2tUaW1lLnZhbHVlKTtcclxuICAgICAgICB0aGlzLnJlbGVhc2VUaW1lID0gaW5pdFZhbHVlKHByb3BlcnRpZXMucmVsZWFzZVRpbWUsIHRoaXMuZGVmYXVsdHMucmVsZWFzZVRpbWUudmFsdWUpO1xyXG4gICAgICAgIHRoaXMuX2VudmVsb3BlID0gMDtcclxuICAgICAgICB0aGlzLnRhcmdldCA9IHByb3BlcnRpZXMudGFyZ2V0IHx8IHt9O1xyXG4gICAgICAgIHRoaXMuY2FsbGJhY2sgPSBwcm9wZXJ0aWVzLmNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge307XHJcblxyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuRW52ZWxvcGVGb2xsb3dlci5wcm90b3R5cGUgPSBPYmplY3QuY3JlYXRlKFN1cGVyLCB7XHJcbiAgICAgICAgbmFtZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogXCJFbnZlbG9wZUZvbGxvd2VyXCJcclxuICAgICAgICB9LFxyXG4gICAgICAgIGRlZmF1bHRzOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiB7XHJcbiAgICAgICAgICAgICAgICBhdHRhY2tUaW1lOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuMDAzLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogMCxcclxuICAgICAgICAgICAgICAgICAgICBtYXg6IDAuNSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICByZWxlYXNlVGltZToge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiAwLjUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMC41LFxyXG4gICAgICAgICAgICAgICAgICAgIGF1dG9tYXRhYmxlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBGTE9BVFxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGJ5cGFzczoge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogQk9PTEVBTlxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBidWZmZXJzaXplOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiAyNTZcclxuICAgICAgICB9LFxyXG4gICAgICAgIGVudmVsb3BlOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBzYW1wbGVSYXRlOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiA0NDEwMFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYXR0YWNrVGltZToge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX2F0dGFja1RpbWU7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F0dGFja1RpbWUgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F0dGFja0MgPSBNYXRoLmV4cCgtMSAvIHRoaXMuX2F0dGFja1RpbWUgKiB0aGlzLnNhbXBsZVJhdGUgLyB0aGlzLmJ1ZmZlcnNpemUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICByZWxlYXNlVGltZToge1xyXG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3JlbGVhc2VUaW1lO1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9yZWxlYXNlVGltZSA9IHZhbHVlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmVsZWFzZUMgPSBNYXRoLmV4cCgtMSAvIHRoaXMuX3JlbGVhc2VUaW1lICogdGhpcy5zYW1wbGVSYXRlIC8gdGhpcy5idWZmZXJzaXplKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FsbGJhY2s6IHtcclxuICAgICAgICAgICAgZ2V0OiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLl9jYWxsYmFjaztcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gXCJmdW5jdGlvblwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2sgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcInR1bmEuanM6IFwiICsgdGhpcy5uYW1lICsgXCI6IENhbGxiYWNrIG11c3QgYmUgYSBmdW5jdGlvbiFcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHRhcmdldDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdGFyZ2V0ID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGFjdGl2YXRlOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbihkb0FjdGl2YXRlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjdGl2YXRlZCA9IGRvQWN0aXZhdGU7XHJcbiAgICAgICAgICAgICAgICBpZiAoZG9BY3RpdmF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuanNOb2RlLmNvbm5lY3QodXNlckNvbnRleHQuZGVzdGluYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuanNOb2RlLm9uYXVkaW9wcm9jZXNzID0gdGhpcy5yZXR1cm5Db21wdXRlKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLmpzTm9kZS5kaXNjb25uZWN0KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5qc05vZGUub25hdWRpb3Byb2Nlc3MgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuYWN0aXZhdGVDYWxsYmFjaykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZhdGVDYWxsYmFjayhkb0FjdGl2YXRlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgcmV0dXJuQ29tcHV0ZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbihldmVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGluc3RhbmNlLmNvbXB1dGUoZXZlbnQpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY29tcHV0ZToge1xyXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oZXZlbnQpIHtcclxuICAgICAgICAgICAgICAgIHZhciBjb3VudCA9IGV2ZW50LmlucHV0QnVmZmVyLmdldENoYW5uZWxEYXRhKDApLmxlbmd0aCxcclxuICAgICAgICAgICAgICAgICAgICBjaGFubmVscyA9IGV2ZW50LmlucHV0QnVmZmVyLm51bWJlck9mQ2hhbm5lbHMsXHJcbiAgICAgICAgICAgICAgICAgICAgY3VycmVudCwgY2hhbiwgcm1zLCBpO1xyXG4gICAgICAgICAgICAgICAgY2hhbiA9IHJtcyA9IGkgPSAwO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNoYW5uZWxzID4gMSkgeyAvL25lZWQgdG8gbWl4ZG93blxyXG4gICAgICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb3VudDsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAoOyBjaGFuIDwgY2hhbm5lbHM7ICsrY2hhbikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGV2ZW50LmlucHV0QnVmZmVyLmdldENoYW5uZWxEYXRhKGNoYW4pW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcm1zICs9IChjdXJyZW50ICogY3VycmVudCkgLyBjaGFubmVscztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChpID0gMDsgaSA8IGNvdW50OyArK2kpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudCA9IGV2ZW50LmlucHV0QnVmZmVyLmdldENoYW5uZWxEYXRhKDApW2ldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBybXMgKz0gKGN1cnJlbnQgKiBjdXJyZW50KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBybXMgPSBNYXRoLnNxcnQocm1zKTtcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fZW52ZWxvcGUgPCBybXMpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lbnZlbG9wZSAqPSB0aGlzLl9hdHRhY2tDO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VudmVsb3BlICs9ICgxIC0gdGhpcy5fYXR0YWNrQykgKiBybXM7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VudmVsb3BlICo9IHRoaXMuX3JlbGVhc2VDO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VudmVsb3BlICs9ICgxIC0gdGhpcy5fcmVsZWFzZUMpICogcm1zO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2FsbGJhY2sodGhpcy5fdGFyZ2V0LCB0aGlzLl9lbnZlbG9wZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICBUdW5hLnByb3RvdHlwZS5MRk8gPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgaWYgKCFwcm9wZXJ0aWVzKSB7XHJcbiAgICAgICAgICAgIHByb3BlcnRpZXMgPSB0aGlzLmdldERlZmF1bHRzKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvL0luc3RhbnRpYXRlIEF1ZGlvTm9kZVxyXG4gICAgICAgIHRoaXMuaW5wdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVHYWluKCk7XHJcbiAgICAgICAgdGhpcy5vdXRwdXQgPSB1c2VyQ29udGV4dC5jcmVhdGVTY3JpcHRQcm9jZXNzb3IoMjU2LCAxLCAxKTtcclxuICAgICAgICB0aGlzLmFjdGl2YXRlTm9kZSA9IHVzZXJDb250ZXh0LmRlc3RpbmF0aW9uO1xyXG5cclxuICAgICAgICAvL1NldCBQcm9wZXJ0aWVzXHJcbiAgICAgICAgdGhpcy5mcmVxdWVuY3kgPSBpbml0VmFsdWUocHJvcGVydGllcy5mcmVxdWVuY3ksIHRoaXMuZGVmYXVsdHMuZnJlcXVlbmN5LnZhbHVlKTtcclxuICAgICAgICB0aGlzLm9mZnNldCA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLm9mZnNldCwgdGhpcy5kZWZhdWx0cy5vZmZzZXQudmFsdWUpO1xyXG4gICAgICAgIHRoaXMub3NjaWxsYXRpb24gPSBpbml0VmFsdWUocHJvcGVydGllcy5vc2NpbGxhdGlvbiwgdGhpcy5kZWZhdWx0cy5vc2NpbGxhdGlvbi52YWx1ZSk7XHJcbiAgICAgICAgdGhpcy5waGFzZSA9IGluaXRWYWx1ZShwcm9wZXJ0aWVzLnBoYXNlLCB0aGlzLmRlZmF1bHRzLnBoYXNlLnZhbHVlKTtcclxuICAgICAgICB0aGlzLnRhcmdldCA9IHByb3BlcnRpZXMudGFyZ2V0IHx8IHt9O1xyXG4gICAgICAgIHRoaXMub3V0cHV0Lm9uYXVkaW9wcm9jZXNzID0gdGhpcy5jYWxsYmFjayhwcm9wZXJ0aWVzLmNhbGxiYWNrIHx8IGZ1bmN0aW9uKCkge30pO1xyXG4gICAgICAgIHRoaXMuYnlwYXNzID0gcHJvcGVydGllcy5ieXBhc3MgfHwgdGhpcy5kZWZhdWx0cy5ieXBhc3MudmFsdWU7XHJcbiAgICB9O1xyXG4gICAgVHVuYS5wcm90b3R5cGUuTEZPLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUoU3VwZXIsIHtcclxuICAgICAgICBuYW1lOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBcIkxGT1wiXHJcbiAgICAgICAgfSxcclxuICAgICAgICBidWZmZXJTaXplOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiAyNTZcclxuICAgICAgICB9LFxyXG4gICAgICAgIHNhbXBsZVJhdGU6IHtcclxuICAgICAgICAgICAgdmFsdWU6IDQ0MTAwXHJcbiAgICAgICAgfSxcclxuICAgICAgICBkZWZhdWx0czoge1xyXG4gICAgICAgICAgICB2YWx1ZToge1xyXG4gICAgICAgICAgICAgICAgZnJlcXVlbmN5OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDEsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMjAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb2Zmc2V0OiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFsdWU6IDAuODUsXHJcbiAgICAgICAgICAgICAgICAgICAgbWluOiAwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMjIwNDksXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgb3NjaWxsYXRpb246IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMC4zLFxyXG4gICAgICAgICAgICAgICAgICAgIG1pbjogLTIyMDUwLFxyXG4gICAgICAgICAgICAgICAgICAgIG1heDogMjIwNTAsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEZMT0FUXHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgcGhhc2U6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogMCxcclxuICAgICAgICAgICAgICAgICAgICBtaW46IDAsXHJcbiAgICAgICAgICAgICAgICAgICAgbWF4OiAyICogTWF0aC5QSSxcclxuICAgICAgICAgICAgICAgICAgICBhdXRvbWF0YWJsZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogRkxPQVRcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBieXBhc3M6IHtcclxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogZmFsc2UsXHJcbiAgICAgICAgICAgICAgICAgICAgYXV0b21hdGFibGU6IGZhbHNlLFxyXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEJPT0xFQU5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZnJlcXVlbmN5OiB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fZnJlcXVlbmN5O1xyXG4gICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICBzZXQ6IGZ1bmN0aW9uKHZhbHVlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9mcmVxdWVuY3kgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BoYXNlSW5jID0gMiAqIE1hdGguUEkgKiB0aGlzLl9mcmVxdWVuY3kgKiB0aGlzLmJ1ZmZlclNpemUgLyB0aGlzLnNhbXBsZVJhdGU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG9mZnNldDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX29mZnNldDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb2Zmc2V0ID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG9zY2lsbGF0aW9uOiB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fb3NjaWxsYXRpb247XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29zY2lsbGF0aW9uID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHBoYXNlOiB7XHJcbiAgICAgICAgICAgIGdldDogZnVuY3Rpb24oKSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5fcGhhc2U7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIHNldDogZnVuY3Rpb24odmFsdWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3BoYXNlID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIHRhcmdldDoge1xyXG4gICAgICAgICAgICBnZXQ6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuX3RhcmdldDtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgc2V0OiBmdW5jdGlvbih2YWx1ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdGFyZ2V0ID0gdmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9LFxyXG4gICAgICAgIGFjdGl2YXRlOiB7XHJcbiAgICAgICAgICAgIHZhbHVlOiBmdW5jdGlvbihkb0FjdGl2YXRlKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoZG9BY3RpdmF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMub3V0cHV0LmNvbm5lY3QodXNlckNvbnRleHQuZGVzdGluYXRpb24pO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLmFjdGl2YXRlQ2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5hY3RpdmF0ZUNhbGxiYWNrKGRvQWN0aXZhdGUpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5vdXRwdXQuZGlzY29ubmVjdCgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICBjYWxsYmFjazoge1xyXG4gICAgICAgICAgICB2YWx1ZTogZnVuY3Rpb24oY2FsbGJhY2spIHtcclxuICAgICAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpcztcclxuICAgICAgICAgICAgICAgIHJldHVybiBmdW5jdGlvbigpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGF0Ll9waGFzZSArPSB0aGF0Ll9waGFzZUluYztcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhhdC5fcGhhc2UgPiAyICogTWF0aC5QSSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGF0Ll9waGFzZSA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKHRoYXQuX3RhcmdldCwgdGhhdC5fb2Zmc2V0ICsgdGhhdC5fb3NjaWxsYXRpb24gKiBNYXRoLnNpbih0aGF0Ll9waGFzZSkpO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH0pO1xyXG5cclxuICAgIFR1bmEudG9TdHJpbmcgPSBUdW5hLnByb3RvdHlwZS50b1N0cmluZyA9IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHJldHVybiBcIlBsZWFzZSB2aXNpdCBodHRwczovL2dpdGh1Yi5jb20vVGhlb2RldXMvdHVuYS93aWtpIGZvciBpbnN0cnVjdGlvbnMgb24gaG93IHRvIHVzZSBUdW5hLmpzXCI7XHJcbiAgICB9O1xyXG59KSgpO1xyXG4iLCJpbXBvcnQge1xuXHRsb2dNZXNzYWdlLFxufSBmcm9tICcuL2NvbW1vbic7XG5cbmltcG9ydCB7IHBpdGNoZXNBcnJheSB9IGZyb20gJy4vcGl0Y2hlcyc7XG5cbmxldCBhc3NpZ25NaWRpTWFwID0gZnVuY3Rpb24obWlkaU1hcCwgd2hpY2gsIHN1Y2Nlc3MsIGZhaWx1cmUpe1xuXHR3aGljaCA9IHdoaWNoIHx8IDA7XG5cdG5hdmlnYXRvci5yZXF1ZXN0TUlESUFjY2VzcygpLnRoZW4oZnVuY3Rpb24oKXtcblx0XHRpZiAoIG1pZGlJbnB1dHNbd2hpY2hdICkge1xuXHRcdFx0bWlkaUlucHV0c1t3aGljaF0ub25taWRpbWVzc2FnZSA9IG1pZGlNYXA7XG5cdFx0XHRpZiAgKCB0eXBlb2Ygc3VjY2VzcyA9PT0gJ2Z1bmN0aW9uJyApIHsgc3VjY2VzcygpOyB9XG5cdFx0fVxuXHRcdGVsc2UgaWYgKCB0eXBlb2YgZmFpbHVyZSA9PT0gJ2Z1bmN0aW9uJyApIHsgZmFpbHVyZSgpOyB9XG5cdH0pO1xufTtcbmxldCBtaWRpSW5zdHJ1bWVudCA9IHtcblx0cGxheSA6IGZ1bmN0aW9uKCkgeyBsb2dNZXNzYWdlKCdwbGF5aW5nIG1pZGknKTsgIH0sXG5cdHN0b3AgOiBmdW5jdGlvbigpIHsgbG9nTWVzc2FnZSgnc3RvcHBpbmcgbWlkaScpOyB9XG59O1xuXG5sZXQgbWlkaUlucHV0cyAgPSBbXTtcblxubGV0IG1pZGlNYXAgPSBmdW5jdGlvbihldmVudCl7XG5cdGxvZ01lc3NhZ2UoZXZlbnQucmVjZWl2ZWRUaW1lLCBldmVudC5kYXRhLCAyKTtcblx0aWYgKCBldmVudC5kYXRhWzBdID09PSAxNDQgKSB7IC8vIDE0NCBtZWFucyB0aGUgbWlkaSBtZXNzYWdlIGhhcyBub3RlIGRhdGFcblx0XHRpZiAoIGV2ZW50LmRhdGFbMl0gPT09IDAgKSB7IC8vIG5vdGVPbiB2ZWxvY2l0eSBvZiAwIG1lYW5zIHRoaXMgaXMgYWN0dWFsbHkgYSBub3RlT2ZmIG1lc3NhZ2Vcblx0XHRcdGxvZ01lc3NhZ2UoJ1BsYXlpbmcgbm90ZTogJywgMik7XG5cdFx0XHRsb2dNZXNzYWdlKHBpdGNoZXNBcnJheVtldmVudC5kYXRhWzFdLTEyXSwgMik7XG5cdFx0XHRtaWRpSW5zdHJ1bWVudC5zdG9wKHBpdGNoZXNBcnJheVtldmVudC5kYXRhWzFdLTEyXSk7XG5cdFx0fVxuXHRcdGVsc2UgaWYgKCBldmVudC5kYXRhWzJdID4gMCApIHtcblx0XHRcdGxvZ01lc3NhZ2UoJ1N0b3BwaW5nIG5vdGU6ICcsIDIpO1xuXHRcdFx0bG9nTWVzc2FnZShwaXRjaGVzQXJyYXlbZXZlbnQuZGF0YVsxXS0xMl0sIDIpO1xuXHRcdFx0bWlkaUluc3RydW1lbnQucGxheSh7cGl0Y2ggOiBwaXRjaGVzQXJyYXlbZXZlbnQuZGF0YVsxXS0xMl0sIGxhYmVsIDogcGl0Y2hlc0FycmF5W2V2ZW50LmRhdGFbMV0tMTJdIH0pO1xuXHRcdH1cblx0fVxuXHRlbHNlIGlmICggZXZlbnQuZGF0YVswXSA9PT0gMTc2ICkgeyAvLyAxNzYgbWVhbnMgdGhlIG1pZGkgbWVzc2FnZSBoYXMgY29udHJvbGxlciBkYXRhXG5cdFx0bG9nTWVzc2FnZSgnY29udHJvbGxlcicpO1xuXHRcdGlmICggZXZlbnQuZGF0YVsxXSA9PSA0NiApIHtcblx0XHRcdGlmICggZXZlbnQuZGF0YVsyXSA9PSAxMjcgKSB7IG1pZGlJbnN0cnVtZW50LnBlZGFsTW9kID0gdHJ1ZTsgfVxuXHRcdFx0ZWxzZSBpZiAoIGV2ZW50LmRhdGFbMl0gPT0gMCApIHsgbWlkaUluc3RydW1lbnQucGVkYWxNb2QgPSBmYWxzZTsgfVxuXHRcdH1cblx0fVxuXHRlbHNlIGlmICggZXZlbnQuZGF0YVswXSA9PT0gMjI0ICkgeyAvLyAyMjQgbWVhbnMgdGhlIG1pZGkgbWVzc2FnZSBoYXMgcGl0Y2ggYmVuZCBkYXRhXG5cdFx0bG9nTWVzc2FnZSgncGl0Y2ggYmVuZCcpO1xuXHR9XG59O1xuXG5cbmxldCBvblN1Y2Nlc3NDYWxsYmFjayA9IGZ1bmN0aW9uKG1pZGlBY2Nlc3Mpe1xuXG5cdG1pZGlJbnB1dHMgPSBbXTtcblx0dmFyIHZhbCA9IG1pZGlBY2Nlc3MuaW5wdXRzLnZhbHVlcygpO1xuXHRmb3IgKCB2YXIgbyA9IHZhbC5uZXh0KCk7ICFvLmRvbmU7IG8gPSB2YWwubmV4dCgpICkge1xuXHRcdG1pZGlJbnB1dHMucHVzaChvLnZhbHVlKTtcblx0fVxuXHQvLyBXYWQubWlkaUlucHV0cyA9IFttLmlucHV0cy52YWx1ZXMoKS5uZXh0KCkudmFsdWVdOyAgIC8vIGlucHV0cyA9IGFycmF5IG9mIE1JRElQb3J0c1xuXHRsb2dNZXNzYWdlKCdNSURJIGlucHV0czogJyk7XG5cdGxvZ01lc3NhZ2UobWlkaUlucHV0cyk7XG5cdC8vIHZhciBvdXRwdXRzID0gbS5vdXRwdXRzKCk7IC8vIG91dHB1dHMgPSBhcnJheSBvZiBNSURJUG9ydHNcblx0Zm9yICggdmFyIGkgPSAwOyBpIDwgbWlkaUlucHV0cy5sZW5ndGg7IGkrKyApIHtcblx0XHRtaWRpSW5wdXRzW2ldLm9ubWlkaW1lc3NhZ2UgPSBtaWRpTWFwOyAvLyBvbm1pZGltZXNzYWdlKCBldmVudCApLCBldmVudC5kYXRhICYgZXZlbnQucmVjZWl2ZWRUaW1lIGFyZSBwb3B1bGF0ZWRcblx0fVxuXHQvLyB2YXIgbyA9IG0ub3V0cHV0cygpWzBdOyAgICAgICAgICAgLy8gZ3JhYiBmaXJzdCBvdXRwdXQgZGV2aWNlXG5cdC8vIG8uc2VuZCggWyAweDkwLCAweDQ1LCAweDdmIF0gKTsgICAgIC8vIGZ1bGwgdmVsb2NpdHkgbm90ZSBvbiBBNCBvbiBjaGFubmVsIHplcm9cblx0Ly8gby5zZW5kKCBbIDB4ODAsIDB4NDUsIDB4N2YgXSwgd2luZG93LnBlcmZvcm1hbmNlLm5vdygpICsgMTAwMCApOyAgLy8gZnVsbCB2ZWxvY2l0eSBBNCBub3RlIG9mZiBpbiBvbmUgc2Vjb25kLlxufTtcbmxldCBvbkVycm9yQ2FsbGJhY2sgPSBmdW5jdGlvbihlcnIpe1xuXHRsb2dNZXNzYWdlKCdGYWlsZWQgdG8gZ2V0IE1JREkgYWNjZXNzJywgZXJyKTtcbn07XG5cbmlmICggbmF2aWdhdG9yICYmIG5hdmlnYXRvci5yZXF1ZXN0TUlESUFjY2VzcyApIHtcblx0dHJ5IHtcblx0XHRuYXZpZ2F0b3IucmVxdWVzdE1JRElBY2Nlc3MoKS50aGVuKG9uU3VjY2Vzc0NhbGxiYWNrLCBvbkVycm9yQ2FsbGJhY2spO1xuXHR9XG5cdGNhdGNoKGVycikge1xuXHRcdGxvZ01lc3NhZ2UoJ0ZhaWxlZCB0byBnZXQgTUlESSBhY2Nlc3MnLCBlcnIpO1xuXHR9XG59XG5cbmV4cG9ydCB7XG5cdG1pZGlNYXAsXG5cdGFzc2lnbk1pZGlNYXAsXG5cdG1pZGlJbnN0cnVtZW50LFxuXHRtaWRpSW5wdXRzLFxufTtcblxuIiwiaW1wb3J0IHtcblx0bG9nTWVzc2FnZSxcblx0Y29udGV4dCxcblx0Y29uc3RydWN0RmlsdGVyLFxuXHRjb25zdHJ1Y3RSZXZlcmIsXG5cdGNvbnN0cnVjdFBhbm5pbmcsXG5cdGNvbnN0cnVjdERlbGF5LFxuXHRjb25zdHJ1Y3RDb21wcmVzc29yLFxuXHRzZXRVcFBhbm5pbmdPblBsYXksXG5cdHNldFVwRGVsYXlPblBsYXksXG5cdHNldFVwVHVuYU9uUGxheSxcblx0cGx1Z0VtSW4sXG5cdHNldFVwUmV2ZXJiT25QbGF5LFxuXHRjcmVhdGVGaWx0ZXJzLFxufSBmcm9tICcuL2NvbW1vbic7XG5pbXBvcnQge1xuXHRwaXRjaGVzLFxuXHRwaXRjaGVzQXJyYXksXG59IGZyb20gJy4vcGl0Y2hlcyc7XG5cblxudmFyIGJ1ZmxlbiA9IDIwNDg7XG52YXIgYnVmID0gbmV3IFVpbnQ4QXJyYXkoIGJ1ZmxlbiApO1xudmFyIE1JTlZBTCA9IDEzNDsgIC8vIDEyOCA9PSB6ZXJvLiAgTUlOVkFMIGlzIHRoZSBcIm1pbmltdW0gZGV0ZWN0ZWQgc2lnbmFsXCIgbGV2ZWwuXG5cbnZhciBub3RlRnJvbVBpdGNoID0gZnVuY3Rpb24oIGZyZXF1ZW5jeSApIHtcblx0dmFyIG5vdGVOdW0gPSAxMiAqIChNYXRoLmxvZyggZnJlcXVlbmN5IC8gNDQwICkvTWF0aC5sb2coMikgKTtcblx0cmV0dXJuIE1hdGgucm91bmQoIG5vdGVOdW0gKSArIDY5O1xufTtcblxudmFyIGZyZXF1ZW5jeUZyb21Ob3RlTnVtYmVyID0gZnVuY3Rpb24oIG5vdGUgKSB7XG5cdHJldHVybiA0NDAgKiBNYXRoLnBvdygyLChub3RlLTY5KS8xMik7XG59O1xuXG52YXIgY2VudHNPZmZGcm9tUGl0Y2ggPSBmdW5jdGlvbiggZnJlcXVlbmN5LCBub3RlICkge1xuXHRyZXR1cm4gTWF0aC5mbG9vciggMTIwMCAqIE1hdGgubG9nKCBmcmVxdWVuY3kgLyBmcmVxdWVuY3lGcm9tTm90ZU51bWJlciggbm90ZSApKS9NYXRoLmxvZygyKSApO1xufTtcblxuXG5mdW5jdGlvbiBhdXRvQ29ycmVsYXRlKCBidWYsIHNhbXBsZVJhdGUgKSB7XG5cdHZhciBNSU5fU0FNUExFUyA9IDQ7ICAgIC8vIGNvcnJlc3BvbmRzIHRvIGFuIDExa0h6IHNpZ25hbFxuXHR2YXIgTUFYX1NBTVBMRVMgPSAxMDAwOyAvLyBjb3JyZXNwb25kcyB0byBhIDQ0SHogc2lnbmFsXG5cdHZhciBTSVpFID0gMTAwMDtcblx0dmFyIGJlc3Rfb2Zmc2V0ID0gLTE7XG5cdHZhciBiZXN0X2NvcnJlbGF0aW9uID0gMDtcblx0dmFyIHJtcyA9IDA7XG5cdHZhciBmb3VuZEdvb2RDb3JyZWxhdGlvbiA9IGZhbHNlO1xuXG5cdGlmIChidWYubGVuZ3RoIDwgKFNJWkUgKyBNQVhfU0FNUExFUyAtIE1JTl9TQU1QTEVTKSlcblx0XHRyZXR1cm4gLTE7ICAvLyBOb3QgZW5vdWdoIGRhdGFcblxuXHRmb3IgKCBsZXQgaSA9IDA7IGkgPCBTSVpFOyBpKysgKSB7XG5cdFx0dmFyIHZhbCA9ICggYnVmW2ldIC0gMTI4ICkgLyAxMjg7XG5cdFx0cm1zICs9IHZhbCAqIHZhbDtcblx0fVxuXHRybXMgPSBNYXRoLnNxcnQocm1zL1NJWkUpO1xuXHRpZiAocm1zPDAuMDEpXG5cdFx0cmV0dXJuIC0xO1xuXG5cdHZhciBsYXN0Q29ycmVsYXRpb249MTtcblx0Zm9yICh2YXIgb2Zmc2V0ID0gTUlOX1NBTVBMRVM7IG9mZnNldCA8PSBNQVhfU0FNUExFUzsgb2Zmc2V0KyspIHtcblx0XHR2YXIgY29ycmVsYXRpb24gPSAwO1xuXG5cdFx0Zm9yIChsZXQgaT0wOyBpPFNJWkU7IGkrKykge1xuXHRcdFx0Y29ycmVsYXRpb24gKz0gTWF0aC5hYnMoKChidWZbaV0gLSAxMjgpLzEyOCktKChidWZbaStvZmZzZXRdIC0gMTI4KS8xMjgpKTtcblx0XHR9XG5cdFx0Y29ycmVsYXRpb24gPSAxIC0gKGNvcnJlbGF0aW9uL1NJWkUpO1xuXHRcdGlmICgoY29ycmVsYXRpb24+MC45KSAmJiAoY29ycmVsYXRpb24gPiBsYXN0Q29ycmVsYXRpb24pKVxuXHRcdFx0Zm91bmRHb29kQ29ycmVsYXRpb24gPSB0cnVlO1xuXHRcdGVsc2UgaWYgKGZvdW5kR29vZENvcnJlbGF0aW9uKSB7XG5cdFx0XHQvLyBzaG9ydC1jaXJjdWl0IC0gd2UgZm91bmQgYSBnb29kIGNvcnJlbGF0aW9uLCB0aGVuIGEgYmFkIG9uZSwgc28gd2UnZCBqdXN0IGJlIHNlZWluZyBjb3BpZXMgZnJvbSBoZXJlLlxuXHRcdFx0cmV0dXJuIHNhbXBsZVJhdGUvYmVzdF9vZmZzZXQ7XG5cdFx0fVxuXHRcdGxhc3RDb3JyZWxhdGlvbiA9IGNvcnJlbGF0aW9uO1xuXHRcdGlmIChjb3JyZWxhdGlvbiA+IGJlc3RfY29ycmVsYXRpb24pIHtcblx0XHRcdGJlc3RfY29ycmVsYXRpb24gPSBjb3JyZWxhdGlvbjtcblx0XHRcdGJlc3Rfb2Zmc2V0ID0gb2Zmc2V0O1xuXHRcdH1cblx0fVxuXHRpZiAoYmVzdF9jb3JyZWxhdGlvbiA+IDAuMDEpIHtcblx0XHQvLyBsb2dNZXNzYWdlKFwiZiA9IFwiICsgc2FtcGxlUmF0ZS9iZXN0X29mZnNldCArIFwiSHogKHJtczogXCIgKyBybXMgKyBcIiBjb25maWRlbmNlOiBcIiArIGJlc3RfY29ycmVsYXRpb24gKyBcIilcIilcblx0XHRyZXR1cm4gc2FtcGxlUmF0ZS9iZXN0X29mZnNldDtcblx0fVxuXHRyZXR1cm4gLTE7XG5cdC8vICB2YXIgYmVzdF9mcmVxdWVuY3kgPSBzYW1wbGVSYXRlL2Jlc3Rfb2Zmc2V0O1xufVxuXG5mdW5jdGlvbiB2b2x1bWVBdWRpb1Byb2Nlc3MoIGV2ZW50ICkge1xuXHR2YXIgYnVmID0gZXZlbnQuaW5wdXRCdWZmZXIuZ2V0Q2hhbm5lbERhdGEoMCk7XG5cdHZhciBidWZMZW5ndGggPSBidWYubGVuZ3RoO1xuXHR2YXIgc3VtID0gMDtcblx0dmFyIHg7XG4gICAgXG5cdC8vIERvIGEgcm9vdC1tZWFuLXNxdWFyZSBvbiB0aGUgc2FtcGxlczogc3VtIHVwIHRoZSBzcXVhcmVzLi4uXG5cdGZvciAodmFyIGk9MDsgaTxidWZMZW5ndGg7IGkrKykge1xuXHRcdHggPSBidWZbaV07XG5cdFx0aWYgKE1hdGguYWJzKHgpPj10aGlzLmNsaXBMZXZlbCkge1xuXHRcdFx0dGhpcy5jbGlwcGluZyA9IHRydWU7XG5cdFx0XHR0aGlzLmxhc3RDbGlwID0gd2luZG93LnBlcmZvcm1hbmNlLm5vdygpO1xuXHRcdH1cblx0XHRzdW0gKz0geCAqIHg7XG5cdH1cbiAgICBcblx0Ly8gLi4uIHRoZW4gdGFrZSB0aGUgc3F1YXJlIHJvb3Qgb2YgdGhlIHN1bS5cblx0dmFyIHJtcyA9ICBNYXRoLnNxcnQoc3VtIC8gYnVmTGVuZ3RoKTtcbiAgICBcblx0Ly8gTm93IHNtb290aCB0aGlzIG91dCB3aXRoIHRoZSBhdmVyYWdpbmcgZmFjdG9yIGFwcGxpZWRcblx0Ly8gdG8gdGhlIHByZXZpb3VzIHNhbXBsZSAtIHRha2UgdGhlIG1heCBoZXJlIGJlY2F1c2Ugd2Vcblx0Ly8gd2FudCBcImZhc3QgYXR0YWNrLCBzbG93IHJlbGVhc2UuXCJcblx0dGhpcy52b2x1bWUgPSBNYXRoLm1heChybXMsIHRoaXMudm9sdW1lKnRoaXMuYXZlcmFnaW5nKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlQXVkaW9NZXRlcihhdWRpb0NvbnRleHQsY2xpcExldmVsLGF2ZXJhZ2luZyxjbGlwTGFnKSB7XG5cdHZhciBwcm9jZXNzb3IgPSBhdWRpb0NvbnRleHQuY3JlYXRlU2NyaXB0UHJvY2Vzc29yKDUxMik7XG5cdHByb2Nlc3Nvci5vbmF1ZGlvcHJvY2VzcyA9IHZvbHVtZUF1ZGlvUHJvY2Vzcztcblx0cHJvY2Vzc29yLmNsaXBwaW5nID0gZmFsc2U7XG5cdHByb2Nlc3Nvci5sYXN0Q2xpcCA9IDA7XG5cdHByb2Nlc3Nvci52b2x1bWUgPSAwO1xuXHRwcm9jZXNzb3IuY2xpcExldmVsID0gY2xpcExldmVsIHx8IDAuOTg7XG5cdHByb2Nlc3Nvci5hdmVyYWdpbmcgPSBhdmVyYWdpbmcgfHwgMC45NTtcblx0cHJvY2Vzc29yLmNsaXBMYWcgPSBjbGlwTGFnIHx8IDc1MDtcbiAgICBcblx0Ly8gdGhpcyB3aWxsIGhhdmUgbm8gZWZmZWN0LCBzaW5jZSB3ZSBkb24ndCBjb3B5IHRoZSBpbnB1dCB0byB0aGUgb3V0cHV0LFxuXHQvLyBidXQgd29ya3MgYXJvdW5kIGEgY3VycmVudCBDaHJvbWUgYnVnLlxuXHRwcm9jZXNzb3IuY29ubmVjdChhdWRpb0NvbnRleHQuZGVzdGluYXRpb24pO1xuICAgIFxuXHRwcm9jZXNzb3IuY2hlY2tDbGlwcGluZyA9IGZ1bmN0aW9uKCl7XG5cdFx0aWYgKCF0aGlzLmNsaXBwaW5nKXtcblx0XHRcdHJldHVybiBmYWxzZTtcblx0XHR9XG5cdFx0aWYgKCh0aGlzLmxhc3RDbGlwICsgdGhpcy5jbGlwTGFnKSA8IHdpbmRvdy5wZXJmb3JtYW5jZS5ub3coKSl7XG5cdFx0XHR0aGlzLmNsaXBwaW5nID0gZmFsc2U7XG5cdFx0fVxuXHRcdHJldHVybiB0aGlzLmNsaXBwaW5nO1xuXHR9O1xuICAgIFxuXHRwcm9jZXNzb3Iuc2h1dGRvd24gPSBmdW5jdGlvbigpe1xuXHRcdHRoaXMuZGlzY29ubmVjdCgpO1xuXHRcdHRoaXMub25hdWRpb3Byb2Nlc3MgPSBudWxsO1xuXHR9O1xuICAgIFxuXHRyZXR1cm4gcHJvY2Vzc29yO1xufVxuY29uc3QgUG9seXdhZCA9IGZ1bmN0aW9uKGFyZyl7XG5cdGlmICggIWFyZyApIHsgYXJnID0ge307IH1cblx0dGhpcy5pc1NldFVwICA9IGZhbHNlO1xuXHR0aGlzLnBsYXlhYmxlID0gMTtcblxuXHRpZiAoIGFyZy5yZXZlcmIgKSB7XG5cdFx0Y29uc3RydWN0UmV2ZXJiKHRoaXMsIGFyZyk7IC8vIFdlIG5lZWQgdG8gbWFrZSBzdXJlIHdlIGhhdmUgZG93bmxvYWRlZCB0aGUgaW1wdWxzZSByZXNwb25zZSBiZWZvcmUgY29udGludWluZyB3aXRoIHRoZSBzZXR1cC5cblx0fVxuXHRlbHNlIHtcblx0XHR0aGlzLnNldFVwKGFyZyk7XG5cdH1cbn07XG5cblBvbHl3YWQucHJvdG90eXBlLnNldFVwID0gZnVuY3Rpb24oYXJnKXsgLy8gQW55dGhpbmcgdGhhdCBuZWVkcyB0byBoYXBwZW4gYmVmb3JlIHJldmVyYiBpcyBzZXQgdXAgY2FuIGdvIGhlcmUuXG5cdHRoaXMud2FkcyAgICAgICAgICAgICAgPSBbXTtcblx0dGhpcy5pbnB1dCAgICAgICAgICAgICA9IGNvbnRleHQuY3JlYXRlQW5hbHlzZXIoKTtcblx0dGhpcy5pbnB1dC5mZnRTaXplICAgICA9IDIwNDg7XG5cdHRoaXMubm9kZXMgICAgICAgICAgICAgPSBbdGhpcy5pbnB1dF07XG5cdHRoaXMuZGVzdGluYXRpb24gICAgICAgPSBhcmcuZGVzdGluYXRpb24gfHwgY29udGV4dC5kZXN0aW5hdGlvbjsgLy8gdGhlIGxhc3Qgbm9kZSB0aGUgc291bmQgaXMgcm91dGVkIHRvXG5cdHRoaXMudm9sdW1lICAgICAgICAgICAgPSBhcmcudm9sdW1lIHx8IDE7XG5cdHRoaXMuZ2FpbiAgICAgICAgICAgICAgPSBjb250ZXh0LmNyZWF0ZUdhaW4oKTtcblx0dGhpcy5nYWluLmdhaW4udmFsdWUgICA9IHRoaXMudm9sdW1lO1xuXHR0aGlzLm91dHB1dCAgICAgICAgICAgID0gY29udGV4dC5jcmVhdGVBbmFseXNlcigpO1xuXHR0aGlzLnR1bmEgICAgICAgICAgICAgID0gYXJnLnR1bmEgfHwgbnVsbDtcblx0dGhpcy5hdWRpb01ldGVyICAgICAgICA9IG51bGw7XG5cblx0aWYgKCBhcmcuYXVkaW9NZXRlciApIHtcblx0XHR0aGlzLmF1ZGlvTWV0ZXIgPSBjcmVhdGVBdWRpb01ldGVyKGNvbnRleHQsIGFyZy5hdWRpb01ldGVyLmNsaXBMZXZlbCwgYXJnLmF1ZGlvTWV0ZXIuYXZlcmFnaW5nLCBhcmcuYXVkaW9NZXRlci5jbGlwTGFnKTtcblx0XHR0aGlzLm91dHB1dC5jb25uZWN0KHRoaXMuYXVkaW9NZXRlcik7XG5cdH1cblxuXHRjb25zdHJ1Y3RGaWx0ZXIodGhpcywgYXJnKTtcblx0aWYgKCB0aGlzLmZpbHRlciApIHsgY3JlYXRlRmlsdGVycyh0aGlzLCBhcmcpOyB9XG5cblx0aWYgKCB0aGlzLnJldmVyYiApIHsgc2V0VXBSZXZlcmJPblBsYXkodGhpcywgYXJnKTsgfVxuXG5cdHRoaXMuY29uc3RydWN0RXh0ZXJuYWxGeChhcmcsIGNvbnRleHQpO1xuXG5cdGNvbnN0cnVjdFBhbm5pbmcodGhpcywgYXJnKTtcblx0c2V0VXBQYW5uaW5nT25QbGF5KHRoaXMsIGFyZyk7XG5cdGlmICggYXJnLmNvbXByZXNzb3IgKSB7IGNvbnN0cnVjdENvbXByZXNzb3IodGhpcywgYXJnKTsgfVxuXG5cdGNvbnN0cnVjdERlbGF5KHRoaXMsIGFyZyk7XG5cdHNldFVwRGVsYXlPblBsYXkodGhpcywgYXJnKTtcblx0c2V0VXBUdW5hT25QbGF5KHRoaXMsIGFyZyk7XG5cdHRoaXMubm9kZXMucHVzaCh0aGlzLmdhaW4pO1xuXHR0aGlzLm5vZGVzLnB1c2godGhpcy5vdXRwdXQpO1xuXHRwbHVnRW1Jbih0aGlzLCBhcmcpO1xuXHR0aGlzLmlzU2V0VXAgPSB0cnVlO1xuXHRpZiAoIGFyZy5jYWxsYmFjayApIHsgYXJnLmNhbGxiYWNrKHRoaXMpOyB9XG59O1xuXG5Qb2x5d2FkLnByb3RvdHlwZS51cGRhdGVQaXRjaCA9IGZ1bmN0aW9uKCB0aW1lICkge1xuXHR0aGlzLmlucHV0LmdldEJ5dGVUaW1lRG9tYWluRGF0YSggYnVmICk7XG5cdHZhciBhYyA9IGF1dG9Db3JyZWxhdGUoIGJ1ZiwgY29udGV4dC5zYW1wbGVSYXRlICk7XG5cblx0aWYgKCBhYyAhPT0gLTEgJiYgYWMgIT09IDExMDI1ICYmIGFjICE9PSAxMjAwMCApIHtcblx0XHR2YXIgcGl0Y2ggPSBhYztcblx0XHR0aGlzLnBpdGNoID0gTWF0aC5mbG9vciggcGl0Y2ggKSA7XG5cdFx0dmFyIG5vdGUgPSBub3RlRnJvbVBpdGNoKCBwaXRjaCApO1xuXHRcdHRoaXMubm90ZU5hbWUgPSBwaXRjaGVzQXJyYXlbbm90ZSAtIDEyXTtcblx0XHQvLyBEZXR1bmUgZG9lc24ndCBzZWVtIHRvIHdvcmsuXG5cdFx0Ly8gdmFyIGRldHVuZSA9IGNlbnRzT2ZmRnJvbVBpdGNoKCBwaXRjaCwgbm90ZSApO1xuXHRcdC8vIGlmIChkZXR1bmUgPT0gMCApIHtcblx0XHQvLyAgICAgdGhpcy5kZXR1bmVFc3RpbWF0ZSA9IDA7XG5cdFx0Ly8gfSBlbHNlIHtcblxuXHRcdC8vICAgICB0aGlzLmRldHVuZUVzdGltYXRlID0gZGV0dW5lXG5cdFx0Ly8gfVxuXHR9XG5cdHZhciB0aGF0ID0gdGhpcztcblx0dGhhdC5yYWZJRCA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoIGZ1bmN0aW9uKCl7IHRoYXQudXBkYXRlUGl0Y2goKTsgfSApO1xufTtcblxuUG9seXdhZC5wcm90b3R5cGUuc3RvcFVwZGF0aW5nUGl0Y2ggPSBmdW5jdGlvbigpe1xuXHRjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLnJhZklEKTtcbn07XG5cblxuUG9seXdhZC5wcm90b3R5cGUuc2V0Vm9sdW1lID0gZnVuY3Rpb24odm9sdW1lKXtcblx0aWYgKCB0aGlzLmlzU2V0VXAgKSB7XG5cdFx0dGhpcy5nYWluLmdhaW4udmFsdWUgPSB2b2x1bWU7XG5cdH1cblx0ZWxzZSB7XG5cdFx0bG9nTWVzc2FnZSgnVGhpcyBQb2x5V2FkIGlzIG5vdCBzZXQgdXAgeWV0LicpO1xuXHR9XG5cdHJldHVybiB0aGlzO1xufTtcblxuUG9seXdhZC5wcm90b3R5cGUuc2V0UGl0Y2ggPSBmdW5jdGlvbihwaXRjaCl7XG5cdHRoaXMud2Fkcy5mb3JFYWNoKGZ1bmN0aW9uKHdhZCl7XG4gICAgICAgICAgICBcblx0XHRpZiAoIHBpdGNoIGluIHBpdGNoZXMgKSB7XG5cdFx0XHRpZiAoIHdhZC5zb3VuZFNvdXJjZSApIHtcblx0XHRcdFx0d2FkLnNvdW5kU291cmNlLmZyZXF1ZW5jeS52YWx1ZSA9IHBpdGNoZXNbcGl0Y2hdO1xuXHRcdFx0fVxuXHRcdFx0d2FkLnBpdGNoID0gcGl0Y2hlc1twaXRjaF07XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0aWYgKCB3YWQuc291bmRTb3VyY2UgKSB7XG5cdFx0XHRcdHdhZC5zb3VuZFNvdXJjZS5mcmVxdWVuY3kudmFsdWUgPSBwaXRjaDtcblx0XHRcdH1cblx0XHRcdHdhZC5waXRjaCA9IHBpdGNoO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fSk7XG59O1xuXG5Qb2x5d2FkLnByb3RvdHlwZS5wbGF5ID0gZnVuY3Rpb24oYXJnKXtcblx0aWYgKCB0aGlzLmlzU2V0VXAgKSB7XG5cdFx0aWYgKCB0aGlzLnBsYXlhYmxlIDwgMSApIHtcblx0XHRcdHRoaXMucGxheU9uTG9hZCAgICA9IHRydWU7XG5cdFx0XHR0aGlzLnBsYXlPbkxvYWRBcmcgPSBhcmc7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0aWYgKCBhcmcgJiYgYXJnLnZvbHVtZSApIHtcblx0XHRcdFx0dGhpcy5nYWluLmdhaW4udmFsdWUgPSBhcmcudm9sdW1lOyAvLyBpZiB0d28gbm90ZXMgYXJlIHBsYXllZCB3aXRoIHZvbHVtZSBzZXQgYXMgYSBwbGF5IGFyZywgZG9lcyB0aGUgc2Vjb25kIG9uZSBvdmVyd3JpdGUgdGhlIGZpcnN0PyBtYXliZSBpbnB1dCBzaG91bGQgYmUgYW4gYXJyYXkgb2YgZ2FpbiBub2RlcywgbGlrZSByZWd1bGFyIHdhZHMuXG5cdFx0XHRcdGFyZy52b2x1bWUgPSB1bmRlZmluZWQ7IC8vIGlmIHZvbHVtZSBpcyBzZXQsIGl0IHNob3VsZCBjaGFuZ2UgdGhlIGdhaW4gb24gdGhlIHBvbHl3YWQncyBnYWluIG5vZGUsIE5PVCB0aGUgZ2FpbiBub2RlcyBmb3IgaW5kaXZpZHVhbCB3YWRzIGluc2lkZSB0aGUgcG9seXdhZC5cblx0XHRcdH1cblx0XHRcdGZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMud2Fkcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0dGhpcy53YWRzW2ldLnBsYXkoYXJnKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblx0ZWxzZSB7XG5cdFx0bG9nTWVzc2FnZSgnVGhpcyBQb2x5V2FkIGlzIG5vdCBzZXQgdXAgeWV0LicpO1xuXHR9XG5cdHJldHVybiB0aGlzO1xufTtcblxuUG9seXdhZC5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKGFyZyl7XG5cdGlmICggdGhpcy5pc1NldFVwICkge1xuXHRcdGZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMud2Fkcy5sZW5ndGg7IGkrKyApIHtcblx0XHRcdHRoaXMud2Fkc1tpXS5zdG9wKGFyZyk7XG5cdFx0fVxuXHR9XG59O1xuXG5Qb2x5d2FkLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbih3YWQpe1xuXHRpZiAoIHRoaXMuaXNTZXRVcCApIHtcblx0XHR3YWQuZGVzdGluYXRpb24gPSB0aGlzLmlucHV0O1xuXHRcdHRoaXMud2Fkcy5wdXNoKHdhZCk7XG5cdFx0aWYgKCB3YWQgaW5zdGFuY2VvZiBQb2x5d2FkICkge1xuXHRcdFx0d2FkLm91dHB1dC5kaXNjb25uZWN0KDApO1xuXHRcdFx0d2FkLm91dHB1dC5jb25uZWN0KHRoaXMuaW5wdXQpO1xuXHRcdH1cblx0fVxuXHRlbHNlIHtcblx0XHRsb2dNZXNzYWdlKCdUaGlzIFBvbHlXYWQgaXMgbm90IHNldCB1cCB5ZXQuJyk7XG5cdH1cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5cblxuUG9seXdhZC5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24od2FkKXtcblx0aWYgKCB0aGlzLmlzU2V0VXAgKSB7XG5cdFx0Zm9yICggdmFyIGkgPSAwOyBpIDwgdGhpcy53YWRzLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0aWYgKCB0aGlzLndhZHNbaV0gPT09IHdhZCApIHtcblx0XHRcdFx0dGhpcy53YWRzW2ldLmRlc3RpbmF0aW9uID0gY29udGV4dC5kZXN0aW5hdGlvbjtcblx0XHRcdFx0dGhpcy53YWRzLnNwbGljZShpLDEpO1xuXHRcdFx0XHRpZiAoIHdhZCBpbnN0YW5jZW9mIFBvbHl3YWQgKSB7XG5cdFx0XHRcdFx0d2FkLm91dHB1dC5kaXNjb25uZWN0KDApO1xuXHRcdFx0XHRcdHdhZC5vdXRwdXQuY29ubmVjdChjb250ZXh0LmRlc3RpbmF0aW9uKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRyZXR1cm4gdGhpcztcbn07XG5cblBvbHl3YWQucHJvdG90eXBlLmNvbnN0cnVjdEV4dGVybmFsRnggPSBmdW5jdGlvbihhcmcsIGNvbnRleHQpe1xuXG59O1xuXG5leHBvcnQgZGVmYXVsdCBQb2x5d2FkO1xuIiwiLypiZWxvdyBpcyB0aGUgZXM2LiBJdCB3YXMgdHJhbnNwaWxlZCB0byBlczUgZnJvbTpcbmh0dHBzOi8vYmFiZWxqcy5pby9lbi9yZXBsXG5zZWFyY2ggZm9yOlxuLy8gc3RhcnQgb2YgRVM1XG50byBnZXQgdGhlcmVcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU291bmRJdGVyYXRvcntcbiAgICBzdGF0aWMgZGVmYXVsdEFyZ3MgPSB7XG4gICAgICAgIGZpbGVzOiBbXSwgLy8gZWl0aGVyIHNvdW5kIGZpbGVzIG9yIFdhZCBhdWRpbyBvYmplY3RzXG4gICAgICAgIHJhbmRvbTogZmFsc2UsIC8vIGVpdGhlciBwbGF5IGEgcmFuZG9tIG9yZGVyICh0cnVlKSwgb3IgcGxheSBpbiB0aGUgb3JkZXIgb2YgdGhlIGxpc3QgKGZhbHNlKVxuICAgICAgICByYW5kb21QbGF5c0JlZm9yZVJlcGVhdDogMCwgLy8gVGhpcyB2YWx1ZSBzYXlzIHRoZSBhbW91bnQgb2YgcGxheXMgdGhhdCBuZWVkIHRvIGhhcHBlbiBiZWZvcmUgYSBzb3VuZCBjYW4gYmUgcmVwZWF0ZWQuIFRoaXMgb25seSB3b3JrcyBpZiB0aGUgbGVuZ3RoIG9mIHRoZSBpdGVyYXRvciBpcyAzIG9yIG1vcmUsIGFuZCB0aGlzIHZhbHVlIGlzIG1heCAxIGxlc3MgdGhhbiB0aGUgbGVuZ3RoIG9mIHRoZSBzb3VuZCBsaXN0LlxuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKGFyZ3MsIFdhZCl7XG4gICAgICAgIHRoaXMuV2FkID0gV2FkIC8vcGFzc2VkIGluIGZyb20gdGhlIFdhZCBvYmplY3QgdGhhdCBjcmVhdGVzIHRoaXMgaXRlcmF0b3JcbiAgICAgICAgYXJncyA9IE9iamVjdC5hc3NpZ24oe30sIFNvdW5kSXRlcmF0b3IuZGVmYXVsdEFyZ3MsIGFyZ3MpXG4gICAgICAgIHRoaXMuZmlsZXMgPSBhcmdzLmZpbGVzXG4gICAgICAgIHRoaXMuc291bmRzID0gdGhpcy5maWxlcy5tYXAoZj0+Zi5wbGF5ID8gZiA6IG5ldyBXYWQoe3NvdXJjZTpmfSkpIC8vIGNoZWNrcyBpZiB0aGUgaXRlbSBpbiB0aGUgbGlzdCBpcyBhIHdhZCBvciBub3QuXG4gICAgICAgIHRoaXMucmFuZG9tU291bmRzID0gdGhpcy5zb3VuZHMuc2xpY2UoKSAvL2NyZWF0ZXMgYSBsaXN0IG9mIHNvdW5kcyB0aGF0IGNhbiBiZSBtdXRhdGVkIGlmIHRoZXJlIGFyZSByYW5kb20gc291bmRzXG4gICAgICAgIHRoaXMucmFuZG9tID0gYXJncy5yYW5kb21cbiAgICAgICAgdGhpcy5yYW5kb21QbGF5c0JlZm9yZVJlcGVhdCA9IHRoaXMuc291bmRzLmxlbmd0aCA+IDMgJiYgYXJncy5yYW5kb21QbGF5c0JlZm9yZVJlcGVhdCA8IHRoaXMuc291bmRzLmxlbmd0aC0xID8gYXJncy5yYW5kb21QbGF5c0JlZm9yZVJlcGVhdCA6IDBcbiAgICAgICAgdGhpcy5pbmRleCA9IDAgLy8ga2VlcHMgdHJhY2sgb2Ygd2hhdCBpdGVtIGluIHRoZSBsaXN0IGlzIHBsYXlpbmdcbiAgICAgICAgdGhpcy53YWl0aW5nU291bmRzID0gW10gLy9oYXMgYSBsaXN0IG9mIHRoZSBzb3VuZHMgdGhhdCBhcmUgd2FpdGluZyBmcm9tIHJhbmRvbVBsYXlzQmVmb3JlUmVwZWF0XG4gICAgfVxuXG4gICAgcGxheShhcmdzPXt9KXtcbiAgICAgICAgaWYoIXRoaXMuc291bmRzLmxlbmd0aCkgcmV0dXJuIDBcbiAgICAgICAgaWYodGhpcy5yYW5kb20pe1xuICAgICAgICAgICAgY29uc3Qgc291bmRJbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSp0aGlzLnJhbmRvbVNvdW5kcy5sZW5ndGgpXG4gICAgICAgICAgICBjb25zdCBzb3VuZCA9IHRoaXMucmFuZG9tU291bmRzW3NvdW5kSW5kZXhdXG4gICAgICAgICAgICB0aGlzLmluZGV4ID0gdGhpcy5zb3VuZHMuaW5kZXhPZihzb3VuZClcbiAgICAgICAgICAgIHRoaXMud2FpdGluZ1NvdW5kcyA9IHRoaXMud2FpdGluZ1NvdW5kcy5maWx0ZXIoc291bmRPYmo9PntcbiAgICAgICAgICAgICAgICBzb3VuZE9iai5wbGF5cyAtPSAxXG4gICAgICAgICAgICAgICAgaWYoc291bmRPYmoucGxheXMgPCAxKXtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5yYW5kb21Tb3VuZHMucHVzaChzb3VuZE9iai5zb3VuZClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWVcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBpZih0aGlzLnJhbmRvbVBsYXlzQmVmb3JlUmVwZWF0KXtcbiAgICAgICAgICAgICAgICB0aGlzLnJhbmRvbVNvdW5kcy5zcGxpY2Uoc291bmRJbmRleCwgMSlcbiAgICAgICAgICAgICAgICB0aGlzLndhaXRpbmdTb3VuZHMucHVzaCh7cGxheXM6IHRoaXMucmFuZG9tUGxheXNCZWZvcmVSZXBlYXQsIHNvdW5kOiBzb3VuZH0pXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gc291bmQucGxheShhcmdzKVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgcGxheWluZ1NvdW5kID0gdGhpcy5zb3VuZHNbdGhpcy5pbmRleF0gPyB0aGlzLnNvdW5kc1t0aGlzLmluZGV4XS5wbGF5KGFyZ3MpIDogdW5kZWZpbmVkXG4gICAgICAgICAgICB0aGlzLmluZGV4ICs9IDFcbiAgICAgICAgICAgIGlmKHRoaXMuaW5kZXggPj0gdGhpcy5zb3VuZHMubGVuZ3RoKXtcbiAgICAgICAgICAgICAgICB0aGlzLmluZGV4ID0gMFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIHBsYXlpbmdTb3VuZCAgICBcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFkZChzb3VuZCl7XG4gICAgICAgIGlmKCFzb3VuZC5wbGF5KXtcbiAgICAgICAgICAgIHNvdW5kID0gbmV3IHRoaXMuV2FkKHtzb3VyY2U6IHNvdW5kfSlcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNvdW5kcy5wdXNoKHNvdW5kKVxuICAgICAgICB0aGlzLnJhbmRvbVNvdW5kcy5wdXNoKHNvdW5kKVxuICAgICAgICByZXR1cm4gdGhpc1xuICAgIH1cblxuICAgIHJlbW92ZShzb3VuZCl7XG4gICAgICAgIGNvbnN0IHNvdW5kSW5kZXggPSB0aGlzLnNvdW5kcy5pbmRleE9mKHNvdW5kKVxuICAgICAgICBpZihzb3VuZEluZGV4ID09PSAtMSl7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFRoYXQgc291bmQgZG9lcyBub3QgZXhpc3Q6ICR7c291bmR9YClcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNvdW5kcy5zcGxpY2Uoc291bmRJbmRleCwgMSlcbiAgICAgICAgY29uc3QgcmFuZG9tU291bmRJbmRleCA9IHRoaXMucmFuZG9tU291bmRzLmluZGV4T2Yoc291bmQpXG4gICAgICAgIGlmKHJhbmRvbVNvdW5kSW5kZXggPT09IC0xKXtcbiAgICAgICAgICAgIHRoaXMud2FpdGluZ1NvdW5kcyA9IHRoaXMud2FpdGluZ1NvdW5kcy5maWx0ZXIob2JqID0+IG9iai5zb3VuZCA9PT0gc291bmQgPyBmYWxzZSA6IHRydWUpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnJhbmRvbVNvdW5kcy5zcGxpY2UocmFuZG9tU291bmRJbmRleCwgMSlcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpc1xuICAgIH1cbn1cbiovXG5cbi8vIHN0YXJ0IG9mIEVTNVxuJ3VzZSBzdHJpY3QnO1xuXG5mdW5jdGlvbiBfaW5zdGFuY2VvZihsZWZ0LCByaWdodCkgeyBpZiAocmlnaHQgIT0gbnVsbCAmJiB0eXBlb2YgU3ltYm9sICE9PSAndW5kZWZpbmVkJyAmJiByaWdodFtTeW1ib2wuaGFzSW5zdGFuY2VdKSB7IHJldHVybiByaWdodFtTeW1ib2wuaGFzSW5zdGFuY2VdKGxlZnQpOyB9IGVsc2UgeyByZXR1cm4gbGVmdCBpbnN0YW5jZW9mIHJpZ2h0OyB9IH1cblxuZnVuY3Rpb24gX2NsYXNzQ2FsbENoZWNrKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikgeyBpZiAoIV9pbnN0YW5jZW9mKGluc3RhbmNlLCBDb25zdHJ1Y3RvcikpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcignQ2Fubm90IGNhbGwgYSBjbGFzcyBhcyBhIGZ1bmN0aW9uJyk7IH0gfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIHByb3BzKSB7IGZvciAodmFyIGkgPSAwOyBpIDwgcHJvcHMubGVuZ3RoOyBpKyspIHsgdmFyIGRlc2NyaXB0b3IgPSBwcm9wc1tpXTsgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlOyBkZXNjcmlwdG9yLmNvbmZpZ3VyYWJsZSA9IHRydWU7IGlmICgndmFsdWUnIGluIGRlc2NyaXB0b3IpIGRlc2NyaXB0b3Iud3JpdGFibGUgPSB0cnVlOyBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBkZXNjcmlwdG9yLmtleSwgZGVzY3JpcHRvcik7IH0gfVxuXG5mdW5jdGlvbiBfY3JlYXRlQ2xhc3MoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7IGlmIChwcm90b1Byb3BzKSBfZGVmaW5lUHJvcGVydGllcyhDb25zdHJ1Y3Rvci5wcm90b3R5cGUsIHByb3RvUHJvcHMpOyBpZiAoc3RhdGljUHJvcHMpIF9kZWZpbmVQcm9wZXJ0aWVzKENvbnN0cnVjdG9yLCBzdGF0aWNQcm9wcyk7IHJldHVybiBDb25zdHJ1Y3RvcjsgfVxuXG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuXG52YXIgU291bmRJdGVyYXRvciA9XG4vKiNfX1BVUkVfXyovXG5mdW5jdGlvbiAoKSB7XG5cdGZ1bmN0aW9uIFNvdW5kSXRlcmF0b3IoYXJncywgV2FkKSB7XG5cdFx0X2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNvdW5kSXRlcmF0b3IpO1xuXG5cdFx0dGhpcy5XYWQgPSBXYWQ7IC8vcGFzc2VkIGluIGZyb20gdGhlIFdhZCBvYmplY3QgdGhhdCBjcmVhdGVzIHRoaXMgaXRlcmF0b3JcblxuXHRcdGFyZ3MgPSBPYmplY3QuYXNzaWduKHt9LCBTb3VuZEl0ZXJhdG9yLmRlZmF1bHRBcmdzLCBhcmdzKTtcblx0XHR0aGlzLmZpbGVzID0gYXJncy5maWxlcztcblx0XHR0aGlzLnNvdW5kcyA9IHRoaXMuZmlsZXMubWFwKGZ1bmN0aW9uIChmKSB7XG5cdFx0XHRyZXR1cm4gZi5wbGF5ID8gZiA6IG5ldyBXYWQoe1xuXHRcdFx0XHRzb3VyY2U6IGZcblx0XHRcdH0pO1xuXHRcdH0pOyAvLyBjaGVja3MgaWYgdGhlIGl0ZW0gaW4gdGhlIGxpc3QgaXMgYSB3YWQgb3Igbm90LlxuXG5cdFx0dGhpcy5yYW5kb21Tb3VuZHMgPSB0aGlzLnNvdW5kcy5zbGljZSgpOyAvL2NyZWF0ZXMgYSBsaXN0IG9mIHNvdW5kcyB0aGF0IGNhbiBiZSBtdXRhdGVkIGlmIHRoZXJlIGFyZSByYW5kb20gc291bmRzXG5cblx0XHR0aGlzLnJhbmRvbSA9IGFyZ3MucmFuZG9tO1xuXHRcdHRoaXMucmFuZG9tUGxheXNCZWZvcmVSZXBlYXQgPSB0aGlzLnNvdW5kcy5sZW5ndGggPiAzICYmIGFyZ3MucmFuZG9tUGxheXNCZWZvcmVSZXBlYXQgPCB0aGlzLnNvdW5kcy5sZW5ndGggLSAxID8gYXJncy5yYW5kb21QbGF5c0JlZm9yZVJlcGVhdCA6IDA7XG5cdFx0dGhpcy5pbmRleCA9IDA7IC8vIGtlZXBzIHRyYWNrIG9mIHdoYXQgaXRlbSBpbiB0aGUgbGlzdCBpcyBwbGF5aW5nXG5cblx0XHR0aGlzLndhaXRpbmdTb3VuZHMgPSBbXTsgLy9oYXMgYSBsaXN0IG9mIHRoZSBzb3VuZHMgdGhhdCBhcmUgd2FpdGluZyBmcm9tIHJhbmRvbVBsYXlzQmVmb3JlUmVwZWF0XG5cdH1cblxuXHRfY3JlYXRlQ2xhc3MoU291bmRJdGVyYXRvciwgW3tcblx0XHRrZXk6ICdwbGF5Jyxcblx0XHR2YWx1ZTogZnVuY3Rpb24gcGxheSgpIHtcblx0XHRcdHZhciBfdGhpcyA9IHRoaXM7XG5cblx0XHRcdHZhciBhcmdzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiB7fTtcblx0XHRcdGlmICghdGhpcy5zb3VuZHMubGVuZ3RoKSByZXR1cm4gMDtcblxuXHRcdFx0aWYgKHRoaXMucmFuZG9tKSB7XG5cdFx0XHRcdHZhciBzb3VuZEluZGV4ID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5yYW5kb21Tb3VuZHMubGVuZ3RoKTtcblx0XHRcdFx0dmFyIHNvdW5kID0gdGhpcy5yYW5kb21Tb3VuZHNbc291bmRJbmRleF07XG5cdFx0XHRcdHRoaXMuaW5kZXggPSB0aGlzLnNvdW5kcy5pbmRleE9mKHNvdW5kKTtcblx0XHRcdFx0dGhpcy53YWl0aW5nU291bmRzID0gdGhpcy53YWl0aW5nU291bmRzLmZpbHRlcihmdW5jdGlvbiAoc291bmRPYmopIHtcblx0XHRcdFx0XHRzb3VuZE9iai5wbGF5cyAtPSAxO1xuXG5cdFx0XHRcdFx0aWYgKHNvdW5kT2JqLnBsYXlzIDwgMSkge1xuXHRcdFx0XHRcdFx0X3RoaXMucmFuZG9tU291bmRzLnB1c2goc291bmRPYmouc291bmQpO1xuXG5cdFx0XHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0aWYgKHRoaXMucmFuZG9tUGxheXNCZWZvcmVSZXBlYXQpIHtcblx0XHRcdFx0XHR0aGlzLnJhbmRvbVNvdW5kcy5zcGxpY2Uoc291bmRJbmRleCwgMSk7XG5cdFx0XHRcdFx0dGhpcy53YWl0aW5nU291bmRzLnB1c2goe1xuXHRcdFx0XHRcdFx0cGxheXM6IHRoaXMucmFuZG9tUGxheXNCZWZvcmVSZXBlYXQsXG5cdFx0XHRcdFx0XHRzb3VuZDogc291bmRcblx0XHRcdFx0XHR9KTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBzb3VuZC5wbGF5KGFyZ3MpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFyIHBsYXlpbmdTb3VuZCA9IHRoaXMuc291bmRzW3RoaXMuaW5kZXhdID8gdGhpcy5zb3VuZHNbdGhpcy5pbmRleF0ucGxheShhcmdzKSA6IHVuZGVmaW5lZDtcblx0XHRcdFx0dGhpcy5pbmRleCArPSAxO1xuXG5cdFx0XHRcdGlmICh0aGlzLmluZGV4ID49IHRoaXMuc291bmRzLmxlbmd0aCkge1xuXHRcdFx0XHRcdHRoaXMuaW5kZXggPSAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHBsYXlpbmdTb3VuZDtcblx0XHRcdH1cblx0XHR9XG5cdH0sIHtcblx0XHRrZXk6ICdhZGQnLFxuXHRcdHZhbHVlOiBmdW5jdGlvbiBhZGQoc291bmQpIHtcblx0XHRcdGlmICghc291bmQucGxheSkge1xuXHRcdFx0XHRzb3VuZCA9IG5ldyB0aGlzLldhZCh7XG5cdFx0XHRcdFx0c291cmNlOiBzb3VuZFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5zb3VuZHMucHVzaChzb3VuZCk7XG5cdFx0XHR0aGlzLnJhbmRvbVNvdW5kcy5wdXNoKHNvdW5kKTtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblx0fSwge1xuXHRcdGtleTogJ3JlbW92ZScsXG5cdFx0dmFsdWU6IGZ1bmN0aW9uIHJlbW92ZShzb3VuZCkge1xuXHRcdFx0dmFyIHNvdW5kSW5kZXggPSB0aGlzLnNvdW5kcy5pbmRleE9mKHNvdW5kKTtcblxuXHRcdFx0aWYgKHNvdW5kSW5kZXggPT09IC0xKSB7XG5cdFx0XHRcdHRocm93IG5ldyBFcnJvcignVGhhdCBzb3VuZCBkb2VzIG5vdCBleGlzdDogJy5jb25jYXQoc291bmQpKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5zb3VuZHMuc3BsaWNlKHNvdW5kSW5kZXgsIDEpO1xuXHRcdFx0dmFyIHJhbmRvbVNvdW5kSW5kZXggPSB0aGlzLnJhbmRvbVNvdW5kcy5pbmRleE9mKHNvdW5kKTtcblxuXHRcdFx0aWYgKHJhbmRvbVNvdW5kSW5kZXggPT09IC0xKSB7XG5cdFx0XHRcdHRoaXMud2FpdGluZ1NvdW5kcyA9IHRoaXMud2FpdGluZ1NvdW5kcy5maWx0ZXIoZnVuY3Rpb24gKG9iaikge1xuXHRcdFx0XHRcdHJldHVybiBvYmouc291bmQgPT09IHNvdW5kID8gZmFsc2UgOiB0cnVlO1xuXHRcdFx0XHR9KTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMucmFuZG9tU291bmRzLnNwbGljZShyYW5kb21Tb3VuZEluZGV4LCAxKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHR9XSk7XG5cblx0cmV0dXJuIFNvdW5kSXRlcmF0b3I7XG59KCk7XG5cbl9kZWZpbmVQcm9wZXJ0eShTb3VuZEl0ZXJhdG9yLCAnZGVmYXVsdEFyZ3MnLCB7XG5cdGZpbGVzOiBbXSxcblx0Ly8gZWl0aGVyIHNvdW5kIGZpbGVzIG9yIFdhZCBhdWRpbyBvYmplY3RzXG5cdHJhbmRvbTogZmFsc2UsXG5cdC8vIGVpdGhlciBwbGF5IGEgcmFuZG9tIG9yZGVyICh0cnVlKSwgb3IgcGxheSBpbiB0aGUgb3JkZXIgb2YgdGhlIGxpc3QgKGZhbHNlKVxuXHRyYW5kb21QbGF5c0JlZm9yZVJlcGVhdDogMCAvLyBUaGlzIHZhbHVlIHNheXMgdGhlIGFtb3VudCBvZiBwbGF5cyB0aGF0IG5lZWQgdG8gaGFwcGVuIGJlZm9yZSBhIHNvdW5kIGNhbiBiZSByZXBlYXRlZC4gVGhpcyBvbmx5IHdvcmtzIGlmIHRoZSBsZW5ndGggb2YgdGhlIGl0ZXJhdG9yIGlzIDMgb3IgbW9yZSwgYW5kIHRoaXMgdmFsdWUgaXMgbWF4IDEgbGVzcyB0aGFuIHRoZSBsZW5ndGggb2YgdGhlIHNvdW5kIGxpc3QuXG5cbn0pO1xuZXhwb3J0IGRlZmF1bHQgU291bmRJdGVyYXRvcjtcbiIsImxldCBwcmVzZXRzID0ge1xuXHRoaUhhdENsb3NlZCA6IHsgc291cmNlIDogJ25vaXNlJywgZW52IDogeyBhdHRhY2sgOiAuMDAxLCBkZWNheSA6IC4wMDgsIHN1c3RhaW4gOiAuMiwgaG9sZCA6IC4wMywgcmVsZWFzZSA6IC4wMX0sIGZpbHRlciA6IHsgdHlwZSA6ICdoaWdocGFzcycsIGZyZXF1ZW5jeSA6IDQwMCwgcSA6IDEgfSB9LFxuXHRzbmFyZSA6IHsgc291cmNlIDogJ25vaXNlJywgZW52IDoge2F0dGFjayA6IC4wMDEsIGRlY2F5IDogLjAxLCBzdXN0YWluIDogLjIsIGhvbGQgOiAuMDMsIHJlbGVhc2UgOiAuMDJ9LCBmaWx0ZXIgOiB7dHlwZSA6ICdiYW5kcGFzcycsIGZyZXF1ZW5jeSA6IDMwMCwgcSA6IC4xODAgfSB9LFxuXHRoaUhhdE9wZW4gOiB7IHNvdXJjZSA6ICdub2lzZScsIGVudiA6IHsgYXR0YWNrIDogLjAwMSwgZGVjYXkgOiAuMDA4LCBzdXN0YWluIDogLjIsIGhvbGQgOiAuNDMsIHJlbGVhc2UgOiAuMDF9LCBmaWx0ZXIgOiB7IHR5cGUgOiAnaGlnaHBhc3MnLCBmcmVxdWVuY3kgOiAxMDAsIHEgOiAuMiB9IH0sXG5cdGdob3N0IDogeyBzb3VyY2UgOiAnc3F1YXJlJywgdm9sdW1lIDogLjMsIGVudiA6IHsgYXR0YWNrIDogLjAxLCBkZWNheSA6IC4wMDIsIHN1c3RhaW4gOiAuNSwgaG9sZCA6IDIuNSwgcmVsZWFzZSA6IC4zIH0sIGZpbHRlciA6IHsgdHlwZSA6ICdsb3dwYXNzJywgZnJlcXVlbmN5IDogNjAwLCBxIDogNywgZW52IDogeyBhdHRhY2sgOiAuNywgZnJlcXVlbmN5IDogMTYwMCB9IH0sIHZpYnJhdG8gOiB7IGF0dGFjayA6IDgsIHNwZWVkIDogOCwgbWFnbml0dWRlIDogMTAwIH0gfSxcblx0cGlhbm8gOiB7IHNvdXJjZSA6ICdzcXVhcmUnLCB2b2x1bWUgOiAxLjQsIGVudiA6IHsgYXR0YWNrIDogLjAxLCBkZWNheSA6IC4wMDUsIHN1c3RhaW4gOiAuMiwgaG9sZCA6IC4wMTUsIHJlbGVhc2UgOiAuMyB9LCBmaWx0ZXIgOiB7IHR5cGUgOiAnbG93cGFzcycsIGZyZXF1ZW5jeSA6IDEyMDAsIHEgOiA4LjUsIGVudiA6IHsgYXR0YWNrIDogLjIsIGZyZXF1ZW5jeSA6IDYwMCB9IH0gfVxufTtcblxuZXhwb3J0IGRlZmF1bHQgcHJlc2V0cztcbiIsIi8qVGhpcyBtb2R1bGUgd3JhcHMgdGhlIGF1ZGlvIGxpc3RlbmVyIHRvIGNyZWF0ZSBhIHVuaWZvcm0gaW50ZXJmYWNlIGJldHdlZW4gYnJvd3NlcnMsIG1haW5seSBTYWZhcmkgYW5kIG90aGVyIGJyb3dzZXJzOlxuaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvQVBJL0F1ZGlvTGlzdGVuZXJcbiovXG5cbmNsYXNzIEF1ZGlvUGFyYW17XG5cdC8vIHRoaXMgaXMgYSB3cmFwcGVyIGZvciBTYWZhcmkgaWYgdGhlIGJyb3dzZXIgZG9lcyBub3Qgc3VwcG9ydCBsaXN0ZW5lci5wb3NpdGlvblggb3IgdGhlIG90aGVyIHByb3BlcnRpZXNcblx0Y29uc3RydWN0b3IodmFsdWUsIHNldEZ1bmMpe1xuXHRcdHRoaXMuX3NldEZ1bmMgPSBzZXRGdW5jO1xuXHRcdHRoaXMuQXVkaW9QYXJhbWF1dG9tYXRpb25SYXRlID0gJ2EtcmF0ZSc7XG5cdFx0dGhpcy5kZWZhdWx0VmFsdWUgPSB2YWx1ZTtcblx0XHR0aGlzLm1heFZhbHVlID0gMy40MDI4MjM0NjYzODUyODg2ZSszODtcblx0XHR0aGlzLm1pblZhbHVlID0gLTMuNDAyODIzNDY2Mzg1Mjg4NmUrMzg7XG5cdFx0dGhpcy5fdmFsdWUgPSB0aGlzLmRlZmF1bHRWYWx1ZTtcblx0fVxuXG5cdGdldCB2YWx1ZSgpe1xuXHRcdHJldHVybiB0aGlzLl92YWx1ZTtcblx0fVxuXG5cdHNldCB2YWx1ZSh2KXtcblx0XHR0aGlzLl9zZXRGdW5jKHYpO1xuXHRcdHRoaXMuX3ZhbHVlID0gdjtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBdWRpb0xpc3RlbmVye1xuXHRjb25zdHJ1Y3Rvcihjb250ZXh0KXtcblx0XHR0aGlzLl9saXN0ZW5lciA9IGNvbnRleHQubGlzdGVuZXI7XG5cdFx0d2luZG93Lmxpc3RlbmVyID0gdGhpcy5fbGlzdGVuZXI7XG5cdFx0dGhpcy5wb3NpdGlvblggPSB0aGlzLl9saXN0ZW5lci5wb3NpdGlvblggfHwgbmV3IEF1ZGlvUGFyYW0oMCwgdj0+dGhpcy5fbGlzdGVuZXIuc2V0UG9zaXRpb24odiwgdGhpcy5wb3NpdGlvblkudmFsdWUsIHRoaXMucG9zaXRpb25aLnZhbHVlKSk7XG5cdFx0dGhpcy5wb3NpdGlvblkgPSB0aGlzLl9saXN0ZW5lci5wb3NpdGlvblkgfHwgbmV3IEF1ZGlvUGFyYW0oMCwgdj0+dGhpcy5fbGlzdGVuZXIuc2V0UG9zaXRpb24odGhpcy5wb3NpdGlvblgudmFsdWUsIHYsIHRoaXMucG9zaXRpb25aLnZhbHVlKSk7XG5cdFx0dGhpcy5wb3NpdGlvblogPSB0aGlzLl9saXN0ZW5lci5wb3NpdGlvblogfHwgbmV3IEF1ZGlvUGFyYW0oMCwgdj0+dGhpcy5fbGlzdGVuZXIuc2V0UG9zaXRpb24odGhpcy5wb3NpdGlvblgudmFsdWUsIHRoaXMucG9zaXRpb25ZLnZhbHVlLCB2KSk7XG5cdFx0dGhpcy5mb3J3YXJkWCA9IHRoaXMuX2xpc3RlbmVyLmZvcndhcmRYIHx8IG5ldyBBdWRpb1BhcmFtKDAsIHY9PnRoaXMuX2xpc3RlbmVyLnNldE9yaWVudGF0aW9uKHYsIHRoaXMuZm9yd2FyZFkudmFsdWUsIHRoaXMuZm9yd2FyZFoudmFsdWUsIHRoaXMudXBYLnZhbHVlLCB0aGlzLnVwWS52YWx1ZSwgdGhpcy51cFoudmFsdWUpKTtcblx0XHR0aGlzLmZvcndhcmRZID0gdGhpcy5fbGlzdGVuZXIuRm9yd2FyZFkgfHwgbmV3IEF1ZGlvUGFyYW0oMCwgdj0+dGhpcy5fbGlzdGVuZXIuc2V0T3JpZW50YXRpb24odGhpcy5mb3J3YXJkWC52YWx1ZSwgdiwgdGhpcy5mb3J3YXJkWi52YWx1ZSwgdGhpcy51cFgudmFsdWUsIHRoaXMudXBZLnZhbHVlLCB0aGlzLnVwWi52YWx1ZSkpO1xuXHRcdHRoaXMuZm9yd2FyZFogPSB0aGlzLl9saXN0ZW5lci5mb3J3YXJkWiB8fCBuZXcgQXVkaW9QYXJhbSgtMSwgdj0+dGhpcy5fbGlzdGVuZXIuc2V0T3JpZW50YXRpb24odGhpcy5mb3J3YXJkWC52YWx1ZSwgdGhpcy5mb3J3YXJkWS52YWx1ZSwgdiwgdGhpcy51cFgudmFsdWUsIHRoaXMudXBZLnZhbHVlLCB0aGlzLnVwWi52YWx1ZSkpO1xuXHRcdHRoaXMudXBYID0gdGhpcy5fbGlzdGVuZXIudXBaIHx8IG5ldyBBdWRpb1BhcmFtKDAsIHY9PnRoaXMuX2xpc3RlbmVyLnNldE9yaWVudGF0aW9uKHRoaXMuZm9yd2FyZFgudmFsdWUsIHRoaXMuZm9yd2FyZFkudmFsdWUsIHRoaXMuZm9yd2FyZFoudmFsdWUsIHYsIHRoaXMudXBZLnZhbHVlLCB0aGlzLnVwWi52YWx1ZSkpO1xuXHRcdHRoaXMudXBZID0gdGhpcy5fbGlzdGVuZXIudXBZIHx8IG5ldyBBdWRpb1BhcmFtKDEsIHY9PnRoaXMuX2xpc3RlbmVyLnNldE9yaWVudGF0aW9uKHRoaXMuZm9yd2FyZFgudmFsdWUsIHRoaXMuZm9yd2FyZFkudmFsdWUsIHRoaXMuZm9yd2FyZFoudmFsdWUsIHRoaXMudXBYLnZhbHVlLCB2LCB0aGlzLnVwWi52YWx1ZSkpO1xuXHRcdHRoaXMudXBaID0gdGhpcy5fbGlzdGVuZXIudXBaIHx8IG5ldyBBdWRpb1BhcmFtKDAsIHY9PnRoaXMuX2xpc3RlbmVyLnNldE9yaWVudGF0aW9uKHRoaXMuZm9yd2FyZFgudmFsdWUsIHRoaXMuZm9yd2FyZFkudmFsdWUsIHRoaXMuZm9yd2FyZFoudmFsdWUsIHRoaXMudXBYLnZhbHVlLCB0aGlzLnVwWS52YWx1ZSwgdikpO1xuXHR9XG5cblx0c2V0UG9zaXRpb24oeCwgeSwgeil7XG5cdFx0dGhpcy5wb3NpdGlvblgudmFsdWUgPSB4O1xuXHRcdHRoaXMucG9zaXRpb25ZLnZhbHVlID0geTtcblx0XHR0aGlzLnBvc2l0aW9uWi52YWx1ZSA9IHo7XG5cdH1cblxuXHRnZXRQb3NpdGlvbigpe1xuXHRcdHJldHVybiBbdGhpcy5wb3NpdGlvblgudmFsdWUsIHRoaXMucG9zaXRpb25ZLnZhbHVlLCB0aGlzLnBvc2l0aW9uWi52YWx1ZV07XG5cdH1cblxuXHRzZXRPcmllbnRhdGlvbihmb3J3YXJkWCwgZm9yd2FyZFksIGZvcndhcmRaLCB1cFgsIHVwWSwgdXBaKXtcblx0XHR0aGlzLmZvcndhcmRYLnZhbHVlID0gZm9yd2FyZFg7XG5cdFx0dGhpcy5mb3J3YXJkWS52YWx1ZSA9IGZvcndhcmRZO1xuXHRcdHRoaXMuZm9yd2FyZFoudmFsdWUgPSBmb3J3YXJkWjtcblx0XHR0aGlzLnVwWC52YWx1ZSA9IHVwWDtcblx0XHR0aGlzLnVwWS52YWx1ZSA9IHVwWTtcblx0XHR0aGlzLnVwWi52YWx1ZSA9IHVwWjtcblx0fVxuXG5cdGdldE9yaWVudGF0aW9uKCl7XG5cdFx0cmV0dXJuIFt0aGlzLmZvcndhcmRYLnZhbHVlLCB0aGlzLmZvcndhcmRZLnZhbHVlLCB0aGlzLmZvcndhcmRaLnZhbHVlLCB0aGlzLnVwWC52YWx1ZSwgdGhpcy51cFkudmFsdWUsIHRoaXMudXBaLnZhbHVlXTtcblx0fVxufSIsImltcG9ydCBUdW5hIGZyb20gJ3R1bmFqcyc7XG5pbXBvcnQgQXVkaW9MaXN0ZW5lciBmcm9tICcuL2F1ZGlvX2xpc3RlbmVyJztcbmltcG9ydCB7XG5cdGxvZ01lc3NhZ2UsXG5cdGNvbnRleHQsXG5cdG5vaXNlQnVmZmVyLFxuXHRpc0FycmF5LFxuXHR2YWx1ZU9yRGVmYXVsdCxcblx0Y29uc3RydWN0RW52LFxuXHRjb25zdHJ1Y3RGaWx0ZXIsXG5cdHJlcXVlc3RBdWRpb0ZpbGUsXG5cdGNvbnN0cnVjdFZpYnJhdG8sXG5cdGNvbnN0cnVjdFRyZW1vbG8sXG5cdGNvbnN0cnVjdFJldmVyYixcblx0Y29uc3RydWN0UGFubmluZyxcblx0Y29uc3RydWN0RGVsYXksXG5cdGdldENvbnNlbnQsXG5cdHBlcm1pc3Npb25zR3JhbnRlZCxcblx0c2V0VXBNaWMsXG5cdHNldFVwUGFubmluZ09uUGxheSxcblx0c2V0VXBWaWJyYXRvT25QbGF5LFxuXHRzZXRVcFRyZW1vbG9PblBsYXksXG5cdHNldFVwRGVsYXlPblBsYXksXG5cdHNldFVwVHVuYU9uUGxheSxcblx0cGx1Z0VtSW4sXG5cdHBsdWdFbU91dCxcblx0c2V0VXBFbnZPblBsYXksXG5cdHNldFVwRmlsdGVyT25QbGF5LFxuXHRzZXRVcFJldmVyYk9uUGxheSxcblx0ZmlsdGVyRW52LFxuXHRwbGF5RW52LFxuXHRzZXRVcE9zY2lsbGF0b3IsXG59IGZyb20gJy4vY29tbW9uJztcblxubGV0IFdhZCA9IGZ1bmN0aW9uKGFyZyl7XG5cdC8qKiBTZXQgYmFzaWMgV2FkIHByb3BlcnRpZXMgKiovXG5cdHRoaXMuc291cmNlICAgICAgICA9IGFyZy5zb3VyY2U7XG5cdHRoaXMuZGVzdGluYXRpb24gICA9IGFyZy5kZXN0aW5hdGlvbiB8fCBjb250ZXh0LmRlc3RpbmF0aW9uOyAvLyB0aGUgbGFzdCBub2RlIHRoZSBzb3VuZCBpcyByb3V0ZWQgdG9cblx0dGhpcy52b2x1bWUgICAgICAgID0gdmFsdWVPckRlZmF1bHQoYXJnLnZvbHVtZSwgMSk7IC8vIHBlYWsgdm9sdW1lLiBtaW46MCwgbWF4OjEgKGFjdHVhbGx5IG1heCBpcyBpbmZpbml0ZSwgYnV0IC4uLmp1c3Qga2VlcCBpdCBhdCBvciBiZWxvdyAxKVxuXHR0aGlzLmRlZmF1bHRWb2x1bWUgPSB0aGlzLnZvbHVtZTtcblx0dGhpcy5wbGF5YWJsZSAgICAgID0gMTsgLy8gaWYgdGhpcyBpcyBsZXNzIHRoYW4gMSwgdGhpcyBXYWQgaXMgc3RpbGwgd2FpdGluZyBmb3IgYSBmaWxlIHRvIGRvd25sb2FkIGJlZm9yZSBpdCBjYW4gcGxheVxuXHR0aGlzLnBpdGNoICAgICAgICAgPSBXYWQucGl0Y2hlc1thcmcucGl0Y2hdIHx8IGFyZy5waXRjaCB8fCA0NDA7XG5cdHRoaXMuZ2FpbiAgICAgICAgICA9IFtdO1xuXHR0aGlzLmRldHVuZSAgICAgICAgPSBhcmcuZGV0dW5lIHx8IDA7IC8vIEluIENlbnRzLlxuXHR0aGlzLm9mZnNldCAgICAgICAgPSBhcmcub2Zmc2V0IHx8IDA7XG5cdHRoaXMubG9vcCAgICAgICAgICA9IGFyZy5sb29wICAgfHwgZmFsc2U7XG5cdHRoaXMudHVuYSAgICAgICAgICA9IGFyZy50dW5hICAgfHwgbnVsbDtcblx0dGhpcy5yYXRlICAgICAgICAgID0gYXJnLnJhdGUgICB8fCAxO1xuXHR0aGlzLnNwcml0ZSAgICAgICAgPSBhcmcuc3ByaXRlIHx8IG51bGw7XG5cdGNvbnN0cnVjdEVudih0aGlzLCBhcmcpO1xuXHRjb25zdHJ1Y3RGaWx0ZXIodGhpcywgYXJnKTtcblx0Y29uc3RydWN0VmlicmF0byh0aGlzLCBhcmcpO1xuXHRjb25zdHJ1Y3RUcmVtb2xvKHRoaXMsIGFyZyk7XG5cdGNvbnN0cnVjdFJldmVyYih0aGlzLCBhcmcpO1xuXHR0aGlzLmNvbnN0cnVjdEV4dGVybmFsRngoYXJnLCBjb250ZXh0KTtcblx0Y29uc3RydWN0UGFubmluZyh0aGlzLCBhcmcpO1xuXHRjb25zdHJ1Y3REZWxheSh0aGlzLCBhcmcpO1xuXHR0aGlzLmR1cmF0aW9uID0gKHRoaXMuZW52LmF0dGFjayArIHRoaXMuZW52LmRlY2F5ICsgdGhpcy5lbnYuaG9sZCArIHRoaXMuZW52LnJlbGVhc2UpICogKDEvKHRoaXMucmF0ZSkpICogMTAwMDtcblx0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG5cdC8qKiBJZiB0aGUgV2FkJ3Mgc291cmNlIGlzIG5vaXNlLCBzZXQgdGhlIFdhZCdzIGJ1ZmZlciB0byB0aGUgbm9pc2UgYnVmZmVyIHdlIGNyZWF0ZWQgZWFybGllci4gKiovXG5cdGlmICggdGhpcy5zb3VyY2UgPT09ICdub2lzZScgKSB7XG5cdFx0dGhpcy5kZWNvZGVkQnVmZmVyID0gbm9pc2VCdWZmZXI7XG5cdH1cblx0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cblxuXG5cdC8qKiBJZiB0aGUgV2FkJ3Mgc291cmNlIGlzIHRoZSBtaWNyb3Bob25lLCB0aGUgcmVzdCBvZiB0aGUgc2V0dXAgaGFwcGVucyBoZXJlLiAqKi9cblx0ZWxzZSBpZiAoIHRoaXMuc291cmNlID09PSAnbWljJyApIHtcblx0XHRnZXRDb25zZW50KHRoaXMsIGFyZyk7XG5cdH1cblx0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cblx0LyoqIElmIHRoZSBzb3VyY2UgaXMgbm90IGEgcHJlLWRlZmluZWQgdmFsdWUsIGFzc3VtZSBpdCBpcyBhIFVSTCBmb3IgYW4gYXVkaW8gZmlsZSwgYW5kIGdyYWIgaXQgbm93LiAqKi9cblx0ZWxzZSBpZiAoICEoIHRoaXMuc291cmNlIGluIHsgJ3NpbmUnIDogMCwgJ3Nhd3Rvb3RoJyA6IDAsICdzcXVhcmUnIDogMCwgJ3RyaWFuZ2xlJyA6IDAgfSApICkge1xuXHRcdHJlcXVlc3RBdWRpb0ZpbGUodGhpcywgYXJnLmNhbGxiYWNrKTtcblxuXHRcdGlmICggdGhpcy5zcHJpdGUgKSB7XG5cdFx0XHR2YXIgdGhhdFdhZCA9IHRoaXM7XG5cdFx0XHRmb3IgKCB2YXIgc3ByaXRlIGluIHRoaXMuc3ByaXRlICkge1xuXHRcdFx0XHR0aGlzW3Nwcml0ZV0gPSB7XG5cdFx0XHRcdFx0c3ByaXRlOiB0aGlzLnNwcml0ZVtzcHJpdGVdLFxuXHRcdFx0XHRcdHBsYXk6IGZ1bmN0aW9uKGFyZyl7XG5cdFx0XHRcdFx0XHRhcmcgPSBhcmcgfHwge307XG5cdFx0XHRcdFx0XHRhcmcuZW52ID0gYXJnLmVudiB8fCB7fTtcblx0XHRcdFx0XHRcdGFyZy5lbnYuaG9sZCA9IHRoaXMuc3ByaXRlWzFdIC0gdGhpcy5zcHJpdGVbMF07XG5cdFx0XHRcdFx0XHRhcmcub2Zmc2V0ID0gdGhpcy5zcHJpdGVbMF07XG5cblx0XHRcdFx0XHRcdHJldHVybiB0aGF0V2FkLnBsYXkoYXJnKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cdGVsc2UgeyBhcmcuY2FsbGJhY2sgJiYgYXJnLmNhbGxiYWNrKHRoaXMpOyB9XG5cdFdhZC5hbGxXYWRzLnB1c2godGhpcyk7XG59O1xuV2FkLmFsbFdhZHMgPSBbXTtcbldhZC5hdWRpb0NvbnRleHQgPSBjb250ZXh0O1xuV2FkLmxpc3RlbmVyID0gbmV3IEF1ZGlvTGlzdGVuZXIoY29udGV4dCk7XG5pZiAoIHR5cGVvZiBUdW5hICE9IHVuZGVmaW5lZCApIHtcblx0V2FkLnR1bmEgPSBuZXcgVHVuYShXYWQuYXVkaW9Db250ZXh0KTtcbn1cblxuLyoqIE1ldGhvZCB0byBhbGxvdyB1c2VycyB0byBzZXR1cCBleHRlcm5hbCBmeCBpbiB0aGUgY29uc3RydWN0b3IgKiovXG5XYWQucHJvdG90eXBlLmNvbnN0cnVjdEV4dGVybmFsRnggPSBmdW5jdGlvbihhcmcsIGNvbnRleHQpe1xuXHQvL292ZXJyaWRlIG1lIGluIHlvdXIgb3duIGNvZGVcbn07XG5cblxuLyoqIFRvIGJlIG92ZXJyaWRlZCBieSB0aGUgdXNlciAqKi9cbldhZC5wcm90b3R5cGUuc2V0VXBFeHRlcm5hbEZ4T25QbGF5ID0gZnVuY3Rpb24oYXJnLCBjb250ZXh0KXtcblx0Ly91c2VyIGRvZXMgd2hhdCBpcyBuZWNlc3NhcnkgaGVyZSwgYW5kIHRoZW4gbWF5YmUgZG9lcyBzb21ldGhpbmcgbGlrZTpcblx0Ly8gdGhpcy5ub2Rlcy5wdXNoKGV4dGVybmFsRlgpXG59O1xuXG5cbi8qKiB0aGUgcGxheSgpIG1ldGhvZCB3aWxsIGNyZWF0ZSB0aGUgdmFyaW91cyBub2RlcyB0aGF0IGFyZSByZXF1aXJlZCBmb3IgdGhpcyBXYWQgdG8gcGxheSxcbnNldCBwcm9wZXJ0aWVzIG9uIHRob3NlIG5vZGVzIGFjY29yZGluZyB0byB0aGUgY29uc3RydWN0b3IgYXJndW1lbnRzIGFuZCBwbGF5KCkgYXJndW1lbnRzLFxucGx1ZyB0aGUgbm9kZXMgaW50byBlYWNoIG90aGVyIHdpdGggcGx1Z0VtSW4oKSxcbnRoZW4gZmluYWxseSBwbGF5IHRoZSBzb3VuZCBieSBjYWxsaW5nIHBsYXlFbnYoKSAqKi9cbldhZC5wcm90b3R5cGUucGxheSA9IGZ1bmN0aW9uKGFyZyl7XG5cdGFyZyA9IGFyZyB8fCB7IGFyZyA6IG51bGwgfTtcblx0aWYgKCB0aGlzLnBsYXlhYmxlIDwgMSApIHtcblx0XHR0aGlzLnBsYXlPbkxvYWQgICAgPSB0cnVlO1xuXHRcdHRoaXMucGxheU9uTG9hZEFyZyA9IGFyZztcblx0fVxuXG5cdGVsc2UgaWYgKCB0aGlzLnNvdXJjZSA9PT0gJ21pYycgKSB7XG5cdFx0aWYgKCBwZXJtaXNzaW9uc0dyYW50ZWQubWljQ29uc2VudCApIHtcblx0XHRcdGlmICggYXJnLmFyZyA9PT0gbnVsbCApIHtcblx0XHRcdFx0cGx1Z0VtSW4odGhpcywgYXJnKTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRjb25zdHJ1Y3RGaWx0ZXIodGhpcywgYXJnKTtcblx0XHRcdFx0Y29uc3RydWN0VmlicmF0byh0aGlzLCBhcmcpO1xuXHRcdFx0XHRjb25zdHJ1Y3RUcmVtb2xvKHRoaXMsIGFyZyk7XG5cdFx0XHRcdGNvbnN0cnVjdFJldmVyYih0aGlzLCBhcmcpO1xuXHRcdFx0XHR0aGlzLmNvbnN0cnVjdEV4dGVybmFsRngoYXJnLCBjb250ZXh0KTtcblx0XHRcdFx0Y29uc3RydWN0UGFubmluZyh0aGlzLCBhcmcpO1xuXHRcdFx0XHRjb25zdHJ1Y3REZWxheSh0aGlzLCBhcmcpO1xuXHRcdFx0XHRzZXRVcE1pYyh0aGlzLCBhcmcpO1xuXHRcdFx0XHRwbHVnRW1Jbih0aGlzLCBhcmcpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRlbHNlIHsgXG5cdFx0XHRsb2dNZXNzYWdlKCdZb3UgaGF2ZSBub3QgZ2l2ZW4geW91ciBicm93c2VyIHBlcm1pc3Npb24gdG8gdXNlIHlvdXIgbWljcm9waG9uZS4nKTtcblx0XHRcdGdldENvbnNlbnQodGhpcywgYXJnKS50aGVuKCgpID0+e1xuXHRcdFx0XHR0aGlzLnBsYXkoYXJnKTtcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdGVsc2UgeyAvLyBzZXR1cCBvc2NpbGxhdG9ycyBvciBhdWRpbyBjbGlwc1xuXHRcdHRoaXMubm9kZXMgPSBbXTtcblx0XHRpZiAoICFhcmcud2FpdCApIHsgYXJnLndhaXQgPSAwOyB9XG5cdFx0aWYgKCBhcmcudm9sdW1lICkgeyB0aGlzLnZvbHVtZSA9IGFyZy52b2x1bWU7IH1cblx0XHRlbHNlIHsgdGhpcy52b2x1bWUgPSB0aGlzLmRlZmF1bHRWb2x1bWU7IH1cblx0XHRhcmcub2Zmc2V0ID0gYXJnLm9mZnNldCB8fCB0aGlzLm9mZnNldCB8fCAwO1xuXG5cblx0XHRpZiAoIHRoaXMuc291cmNlIGluIHsgJ3NpbmUnIDogMCwgJ3Nhd3Rvb3RoJyA6IDAsICdzcXVhcmUnIDogMCwgJ3RyaWFuZ2xlJyA6IDAgfSApIHtcblx0XHRcdHNldFVwT3NjaWxsYXRvcih0aGlzLCBhcmcpO1xuXHRcdH1cblxuXHRcdGVsc2Uge1xuXHRcdFx0dGhpcy5zb3VuZFNvdXJjZSA9IGNvbnRleHQuY3JlYXRlQnVmZmVyU291cmNlKCk7XG5cdFx0XHR0aGlzLnNvdW5kU291cmNlLmJ1ZmZlciA9IHRoaXMuZGVjb2RlZEJ1ZmZlcjtcblx0XHRcdGlmICggdGhpcy5zb3VyY2UgPT09ICdub2lzZScgfHwgdGhpcy5sb29wIHx8IGFyZy5sb29wICkge1xuXHRcdFx0XHR0aGlzLnNvdW5kU291cmNlLmxvb3AgPSB0cnVlO1xuXHRcdFx0fVxuXHRcdFx0XG5cdFx0fVxuXG5cblx0XHRpZiAoIHRoaXMuc291bmRTb3VyY2UuZGV0dW5lICkge1xuXHRcdFx0dGhpcy5zb3VuZFNvdXJjZS5kZXR1bmUudmFsdWUgPSBhcmcuZGV0dW5lIHx8IHRoaXMuZGV0dW5lO1xuXHRcdH1cblxuXHRcdGlmICggYXJnLndhaXQgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGFyZy53YWl0ID0gMDtcblx0XHR9XG5cdFx0aWYgKGFyZy5leGFjdFRpbWUgPT09IHVuZGVmaW5lZCkge1xuXHRcdFx0YXJnLmV4YWN0VGltZSA9IGNvbnRleHQuY3VycmVudFRpbWUgKyBhcmcud2FpdDtcblx0XHR9XG5cdFx0dGhpcy5sYXN0UGxheWVkVGltZSA9IGFyZy5leGFjdFRpbWUgLSBhcmcub2Zmc2V0O1xuXG5cdFx0dGhpcy5ub2Rlcy5wdXNoKHRoaXMuc291bmRTb3VyY2UpO1xuXG5cblx0XHQvKiogIHNldHMgdGhlIHZvbHVtZSBlbnZlbG9wZSBiYXNlZCBvbiB0aGUgcGxheSgpIGFyZ3VtZW50cyBpZiBwcmVzZW50LFxub3IgZGVmYXVsdHMgdG8gdGhlIGNvbnN0cnVjdG9yIGFyZ3VtZW50cyBpZiB0aGUgdm9sdW1lIGVudmVsb3BlIGlzIG5vdCBzZXQgb24gcGxheSgpICoqL1xuXHRcdHNldFVwRW52T25QbGF5KHRoaXMsIGFyZyk7XG5cdFx0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cdFx0aWYgKCB0aGlzLnNvdW5kU291cmNlLnBsYXliYWNrUmF0ZSApIHtcblx0XHRcdHRoaXMuc291bmRTb3VyY2UucGxheWJhY2tSYXRlLnZhbHVlID0gYXJnLnJhdGUgfHwgdGhpcy5yYXRlO1xuXHRcdFx0dGhpcy5lbnYuaG9sZCA9IHRoaXMuZW52LmhvbGQgKiAoMS90aGlzLnNvdW5kU291cmNlLnBsYXliYWNrUmF0ZS52YWx1ZSk7XG5cdFx0fVxuXG5cdFx0LyoqICBzZXRzIHVwIHRoZSBmaWx0ZXIgYW5kIGZpbHRlciBlbnZlbG9wZSBiYXNlZCBvbiB0aGUgcGxheSgpIGFyZ3VtZW50IGlmIHByZXNlbnQsXG5vciBkZWZhdWx0cyB0byB0aGUgY29uc3RydWN0b3IgYXJndW1lbnQgaWYgdGhlIGZpbHRlciBhbmQgZmlsdGVyIGVudmVsb3BlIGFyZSBub3Qgc2V0IG9uIHBsYXkoKSAqKi9cblx0XHRzZXRVcEZpbHRlck9uUGxheSh0aGlzLCBhcmcpO1xuXHRcdC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXHRcdHNldFVwVHVuYU9uUGxheSh0aGlzLCBhcmcpO1xuXG5cdFx0dGhpcy5zZXRVcEV4dGVybmFsRnhPblBsYXkoYXJnLCBjb250ZXh0KTtcblxuXG5cdFx0dGhpcy5nYWluLnVuc2hpZnQoY29udGV4dC5jcmVhdGVHYWluKCkpOyAvLyBzZXRzIHVwIHRoZSBnYWluIG5vZGVcblx0XHR0aGlzLmdhaW5bMF0ubGFiZWwgPSBhcmcubGFiZWw7XG5cdFx0dGhpcy5nYWluWzBdLnNvdW5kU291cmNlID0gdGhpcy5zb3VuZFNvdXJjZTtcblx0XHR0aGlzLm5vZGVzLnB1c2godGhpcy5nYWluWzBdKTtcblxuXHRcdGlmICggdGhpcy5nYWluLmxlbmd0aCA+IDE1ICkge1xuXHRcdFx0dGhpcy5nYWluLmxlbmd0aCA9IDE1O1xuXHRcdH1cblxuXHRcdC8vIHNldHMgdXAgcmV2ZXJiXG5cdFx0aWYgKCB0aGlzLnJldmVyYiApIHsgc2V0VXBSZXZlcmJPblBsYXkodGhpcywgYXJnKTsgfVxuXG5cdFx0LyoqICBzZXRzIHBhbm5pbmcgYmFzZWQgb24gdGhlIHBsYXkoKSBhcmd1bWVudCBpZiBwcmVzZW50LCBvciBkZWZhdWx0cyB0byB0aGUgY29uc3RydWN0b3IgYXJndW1lbnQgaWYgcGFubmluZyBpcyBub3Qgc2V0IG9uIHBsYXkgKiovXG5cdFx0c2V0VXBQYW5uaW5nT25QbGF5KHRoaXMsIGFyZyk7XG5cdFx0Ly8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cblxuXHRcdHNldFVwRGVsYXlPblBsYXkodGhpcywgYXJnKTtcblxuXHRcdHBsdWdFbUluKHRoaXMsIGFyZyk7XG5cblx0XHRpZiAoIHRoaXMuZmlsdGVyICYmIHRoaXMuZmlsdGVyWzBdLmVudiApIHsgZmlsdGVyRW52KHRoaXMsIGFyZyk7IH1cblx0XHRwbGF5RW52KHRoaXMsIGFyZyk7XG5cblx0XHQvL3NldHMgdXAgdmlicmF0byBMRk9cblx0XHRpZiAoIHRoaXMudmlicmF0byApIHsgc2V0VXBWaWJyYXRvT25QbGF5KHRoaXMsIGFyZywgV2FkKTsgfVxuXG5cdFx0Ly9zZXRzIHVwIHRyZW1vbG8gTEZPXG5cdFx0aWYgKCB0aGlzLnRyZW1vbG8gKSB7IHNldFVwVHJlbW9sb09uUGxheSh0aGlzLCBhcmcsIFdhZCk7IH1cblxuXHRcdHZhciB0aGF0V2FkID0gdGhpcztcblx0XHR0aGlzLnNvdW5kU291cmNlLmxpbmtOb2RlPVtdO1xuXHRcdHRoaXMubm9kZXMuZm9yRWFjaChub2RlPT57XG5cdFx0XHR0aGlzLnNvdW5kU291cmNlLmxpbmtOb2RlLnB1c2gobm9kZSk7XG5cdFx0fSlcblx0XHRsZXQgX2Rlc3RpbmF0aW9uPXRoaXMuZGVzdGluYXRpb247XG5cdFx0dGhpcy5zb3VuZFNvdXJjZS5vbmVuZGVkID0gZnVuY3Rpb24oZXZlbnQpe1xuXHRcdFx0dGhhdFdhZC5wbGF5UHJvbWlzZVJlc29sdmUodGhhdFdhZCk7XG5cdFx0XHRsZXQgc3M9ZXZlbnQudGFyZ2V0O1xuXHRcdFx0aWYoc3MubGlua05vZGUpe1xuXHRcdFx0XHRzZXRUaW1lb3V0KCgpPT57cGx1Z0VtT3V0KHNzLmxpbmtOb2RlLF9kZXN0aW5hdGlvbik7fSwyMDAwKTtcblx0XHRcdH1cblx0XHR9O1xuXG5cdFx0aWYgKCAhYXJnLnVucGF1c2UgKSB7XG5cdFx0XHR0aGlzLnBsYXlQcm9taXNlID0gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KXtcblx0XHRcdFx0dGhhdFdhZC5wbGF5UHJvbWlzZVJlc29sdmUgPSByZXNvbHZlO1xuXHRcdFx0fSk7XG5cdFx0XHRyZXR1cm4gdGhpcy5wbGF5UHJvbWlzZTtcblx0XHR9XG5cdH1cblxuXHRpZiAoIGFyZy5jYWxsYmFjayApIHsgYXJnLmNhbGxiYWNrKHRoaXMpOyB9XG5cbn07XG5cbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xuXG5cbi8qKiBDaGFuZ2UgdGhlIHZvbHVtZSBvZiBhIHdhZCBhdCBhbnkgdGltZSwgaW5jbHVkaW5nIGR1cmluZyBwbGF5YmFjayAqKi9cbldhZC5wcm90b3R5cGUuc2V0Vm9sdW1lID0gZnVuY3Rpb24odm9sdW1lLCB0aW1lQ29uc3RhbnQsIGxhYmVsKXtcblx0dGltZUNvbnN0YW50ID0gdGltZUNvbnN0YW50IHx8IC4wMTtcblx0aWYgKCBsYWJlbCApIHtcblx0XHRpZiAoIHRoaXMuZ2Fpbi5sZW5ndGggPiAwICkge1xuXHRcdFx0Zm9yICggbGV0IGkgPSAwOyBpIDwgdGhpcy5nYWluLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIHRoaXMuZ2FpbltpXS5sYWJlbCA9PT0gbGFiZWwgKSB7XG5cdFx0XHRcdFx0dGhpcy5nYWluW2ldLmdhaW4uc2V0VmFsdWVBdFRpbWUodm9sdW1lLCBjb250ZXh0LmN1cnJlbnRUaW1lKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRlbHNlIHtcblx0XHR0aGlzLmRlZmF1bHRWb2x1bWUgPSB2b2x1bWU7XG5cdFx0aWYgKCB0aGlzLmdhaW4ubGVuZ3RoID4gMCApIHsgdGhpcy5nYWluWzBdLmdhaW4uc2V0VmFsdWVBdFRpbWUodm9sdW1lLCBjb250ZXh0LmN1cnJlbnRUaW1lKTsgfVxuXHR9XG5cdHJldHVybiB0aGlzO1xufTtcblxuLyoqXG5DaGFuZ2UgdGhlIHBsYXliYWNrIHJhdGUgb2YgYSBXYWQgZHVyaW5nIHBsYXliYWNrLlxuaW5wdXRTcGVlZCBpcyBhIHZhbHVlIG9mIDAgPCBzcGVlZCwgYW5kIGlzIHRoZSByYXRlIG9mIHBsYXliYWNrIG9mIHRoZSBhdWRpby5cbkUuZy4gaWYgaW5wdXQgc3BlZWQgPSAyLjAsIHRoZSBwbGF5YmFjayB3aWxsIGJlIHR3aWNlIGFzIGZhc3RcbioqL1xuV2FkLnByb3RvdHlwZS5zZXRSYXRlID0gZnVuY3Rpb24oaW5wdXRTcGVlZCkge1xuXG5cdC8vQ2hlY2svU2F2ZSB0aGUgaW5wdXRcblx0dmFyIHNwZWVkO1xuXHRpZihpbnB1dFNwZWVkICYmIGlucHV0U3BlZWQgPiAwKSBzcGVlZCA9IGlucHV0U3BlZWQ7XG5cdGVsc2Ugc3BlZWQgPSAwO1xuXG5cdC8vQ2hlY2sgaWYgd2UgaGF2ZSBhIHNvdW5kc291cmNlIChUaG91Z2ggd2UgYWx3YXlzIHNob3VsZClcblx0aWYodGhpcy5zb3VuZFNvdXJjZSkge1xuXG5cdFx0Ly9TZXQgdGhlIHZhbHVlXG5cdFx0dGhpcy5zb3VuZFNvdXJjZS5wbGF5YmFja1JhdGUudmFsdWUgPSBzcGVlZDtcblx0fVxuXHRlbHNlIHtcblxuXHRcdC8vSW5mb3JtIHRoYXQgdGhlcmUgaXMgbm8gc291bmQgc291cmNlIG9uIHRoZSBjdXJyZW50IHdhZFxuXHRcdGxvZ01lc3NhZ2UoJ1NvcnJ5LCBidXQgdGhlIHdhZCBkb2VzIG5vdCBjb250YWluIGEgc291bmRTb3VyY2UhJyk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cbldhZC5wcm90b3R5cGUuc2V0UGl0Y2ggPSBmdW5jdGlvbihwaXRjaCwgdGltZUNvbnN0YW50LCBsYWJlbCl7XG5cdHRpbWVDb25zdGFudCA9IHRpbWVDb25zdGFudCB8fCAuMDE7XG5cdGlmICggbGFiZWwgKSB7XG5cdFx0Zm9yICggbGV0IGkgPSAwOyBpIDwgdGhpcy5nYWluLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0aWYgKCB0aGlzLmdhaW5baV0ubGFiZWwgPT09IGxhYmVsICkge1xuXHRcdFx0XHRpZiAoIHBpdGNoIGluIFdhZC5waXRjaGVzICkge1xuXHRcdFx0XHRcdHRoaXMuZ2FpbltpXS5zb3VuZFNvdXJjZS5mcmVxdWVuY3kuc2V0VGFyZ2V0QXRUaW1lKFdhZC5waXRjaGVzW3BpdGNoXSwgY29udGV4dC5jdXJyZW50VGltZSwgdGltZUNvbnN0YW50KTtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHR0aGlzLnNvdW5kU291cmNlLmZyZXF1ZW5jeS5zZXR0YXJnZXRBdFRpbWUocGl0Y2gsIGNvbnRleHQuY3VycmVudFRpbWUsIHRpbWVDb25zdGFudCk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblx0ZWxzZSB7XG5cdFx0aWYgKCBwaXRjaCBpbiBXYWQucGl0Y2hlcyApIHtcblx0XHRcdGlmICggdGhpcy5zb3VuZFNvdXJjZSApIHtcblx0XHRcdFx0dGhpcy5zb3VuZFNvdXJjZS5mcmVxdWVuY3kudmFsdWUgPSBXYWQucGl0Y2hlc1twaXRjaF07XG5cdFx0XHR9XG5cdFx0XHR0aGlzLnBpdGNoID0gV2FkLnBpdGNoZXNbcGl0Y2hdO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdGlmICggdGhpcy5zb3VuZFNvdXJjZSApIHtcblx0XHRcdFx0dGhpcy5zb3VuZFNvdXJjZS5mcmVxdWVuY3kudmFsdWUgPSBwaXRjaDtcblx0XHRcdH1cblx0XHRcdHRoaXMucGl0Y2ggPSBwaXRjaDtcblx0XHR9XG5cdH1cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5XYWQucHJvdG90eXBlLnNldERldHVuZSA9IGZ1bmN0aW9uKGRldHVuZSwgdGltZUNvbnN0YW50LCBsYWJlbCl7XG5cdHRpbWVDb25zdGFudCA9IHRpbWVDb25zdGFudCB8fCAuMDE7XG5cdGlmICggbGFiZWwgKSB7XG5cdFx0Zm9yICggbGV0IGkgPSAwOyBpIDwgdGhpcy5nYWluLmxlbmd0aDsgaSsrICkge1xuXHRcdFx0aWYgKCB0aGlzLmdhaW5baV0ubGFiZWwgPT09IGxhYmVsICkge1xuXHRcdFx0XHR0aGlzLmdhaW5baV0uc291bmRTb3VyY2UuZGV0dW5lLnNldFRhcmdldEF0VGltZShkZXR1bmUsIGNvbnRleHQuY3VycmVudFRpbWUsIHRpbWVDb25zdGFudCk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cdGVsc2Uge1xuXHRcdHRoaXMuc291bmRTb3VyY2UuZGV0dW5lLnNldFRhcmdldEF0VGltZShkZXR1bmUsIGNvbnRleHQuY3VycmVudFRpbWUsIHRpbWVDb25zdGFudCk7XG5cdH1cblx0cmV0dXJuIHRoaXM7XG59O1xuXG4vKiogQ2hhbmdlIHRoZSBwYW5uaW5nIG9mIGEgV2FkIGF0IGFueSB0aW1lLCBpbmNsdWRpbmcgZHVyaW5nIHBsYXliYWNrICoqL1xuV2FkLnByb3RvdHlwZS5zZXRQYW5uaW5nID0gZnVuY3Rpb24ocGFubmluZywgdGltZUNvbnN0YW50LCBsYWJlbCl7XG5cdHRpbWVDb25zdGFudCA9IHRpbWVDb25zdGFudCB8fCAuMDE7XG5cdGlmICggdHlwZW9mIHBhbm5pbmcgPT09ICdudW1iZXInICYmICFjb250ZXh0LmNyZWF0ZVN0ZXJlb1Bhbm5lciApIHtcblx0XHRwYW5uaW5nID0gW3Bhbm5pbmcsIDAsIDBdO1xuXHR9XG5cblx0dGhpcy5wYW5uaW5nLmxvY2F0aW9uID0gcGFubmluZztcblx0aWYgKCBpc0FycmF5KHBhbm5pbmcpICYmIHRoaXMucGFubmluZy50eXBlID09PSAnM2QnICYmIHRoaXMucGFubmluZy5ub2RlICkge1xuXHRcdHRoaXMucGFubmluZy5ub2RlLnNldFBvc2l0aW9uKHBhbm5pbmdbMF0sIHBhbm5pbmdbMV0sIHBhbm5pbmdbMl0pO1xuXG5cdH1cblx0ZWxzZSBpZiAoIHR5cGVvZiBwYW5uaW5nID09PSAnbnVtYmVyJyAmJiB0aGlzLnBhbm5pbmcudHlwZSA9PT0gJ3N0ZXJlbycgJiYgdGhpcy5wYW5uaW5nLm5vZGUpIHtcblx0XHR0aGlzLnBhbm5pbmcubm9kZS5wYW4uc2V0VGFyZ2V0QXRUaW1lKHBhbm5pbmcsIGNvbnRleHQuY3VycmVudFRpbWUsIHRpbWVDb25zdGFudCk7XG5cdH1cblxuXHRpZiAoIGlzQXJyYXkocGFubmluZykgKSB7IHRoaXMucGFubmluZy50eXBlID0gJzNkJzsgfVxuXHRlbHNlIGlmICggdHlwZW9mIHBhbm5pbmcgPT09ICdudW1iZXInICkgeyB0aGlzLnBhbm5pbmcudHlwZSA9ICdzdGVyZW8nOyB9XG5cdHJldHVybiB0aGlzO1xufTtcblxuLyoqXG5DaGFuZ2UgdGhlIFJldmVyYiBvZiBhIFdhZCBhdCBhbnkgdGltZSwgaW5jbHVkaW5nIGR1cmluZyBwbGF5YmFjay5cbmlucHV0V2V0IGlzIGEgdmFsdWUgb2YgMCA8IHdldG5lc3MvZ2FpbiA8IDFcbioqL1xuV2FkLnByb3RvdHlwZS5zZXRSZXZlcmIgPSBmdW5jdGlvbihpbnB1dFdldCkge1xuXG5cdC8vQ2hlY2svU2F2ZSB0aGUgaW5wdXRcblxuXHR2YXIgd2V0O1xuXHRpZihpbnB1dFdldCAmJiBpbnB1dFdldCA+IDAgJiYgaW5wdXRXZXQgPCAxKSB3ZXQgPSBpbnB1dFdldDtcblx0ZWxzZSBpZihpbnB1dFdldCA+PSAxKSB3ZXQgPSAxO1xuXHRlbHNlIHdldCA9IDA7XG5cblx0Ly9DaGVjayBpZiB3ZSBoYXZlIGRlbGF5XG5cdGlmKHRoaXMucmV2ZXJiKSB7XG5cblx0XHQvL1NldCB0aGUgdmFsdWVcblx0XHR0aGlzLnJldmVyYi53ZXQgPSB3ZXQ7XG5cblx0XHQvL1NldCB0aGUgbm9kZSdzIHZhbHVlLCBpZiBpdCBleGlzdHNcblx0XHRpZih0aGlzLnJldmVyYi5ub2RlKSB7XG5cblx0XHRcdHRoaXMucmV2ZXJiLm5vZGUud2V0LmdhaW4udmFsdWUgPSB3ZXQ7XG5cdFx0fVxuXHR9XG5cdGVsc2Uge1xuXG5cdFx0Ly9JbmZvcm0gdGhhdCB0aGVyZSBpcyBubyByZXZlcmIgb24gdGhlIGN1cnJlbnQgd2FkXG5cdFx0bG9nTWVzc2FnZSgnU29ycnksIGJ1dCB0aGUgd2FkIGRvZXMgbm90IGNvbnRhaW4gUmV2ZXJiIScpO1xuXHR9XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5cbi8qKlxuQ2hhbmdlIHRoZSBEZWxheSBvZiBhIFdhZCBhdCBhbnkgdGltZSwgaW5jbHVkaW5nIGR1cmluZyBwbGF5YmFjay5cbmlucHV0VGltZSBpcyBhIHZhbHVlIG9mIHRpbWUgPiAwLCBhbmQgaXMgdGhlIHRpbWUgaW4gc2Vjb25kcyBiZXR3ZWVuIGVhY2ggZGVsYXllZCBwbGF5YmFjay5cbmlucHV0V2V0IGlzIGEgdmFsdWUgb2YgZ2FpbiAwIDwgaW5wdXRXZXQgPCAxLCBhbmQgaXMgUmVsYXRpdmUgdm9sdW1lIGNoYW5nZSBiZXR3ZWVuIHRoZSBvcmlnaW5hbCBzb3VuZCBhbmQgdGhlIGZpcnN0IGRlbGF5ZWQgcGxheWJhY2suXG5pbnB1dEZlZWRiYWNrIGlzIGEgdmFsdWUgb2YgZ2FpbiAwIDwgaW5wdXRGZWVkYmFjayA8IDEsIGFuZCBpcyBSZWxhdGl2ZSB2b2x1bWUgY2hhbmdlIGJldHdlZW4gZWFjaCBkZWxheWVkIHBsYXliYWNrIGFuZCB0aGUgbmV4dC5cbioqL1xuV2FkLnByb3RvdHlwZS5zZXREZWxheSA9IGZ1bmN0aW9uKGlucHV0VGltZSwgaW5wdXRXZXQsIGlucHV0RmVlZGJhY2spe1xuXG5cdC8vQ2hlY2svU2F2ZSB0aGUgaW5wdXRcblx0dmFyIHRpbWU7XG5cdGlmKGlucHV0VGltZSAmJiBpbnB1dFRpbWUgPiAwKSB0aW1lID0gaW5wdXRUaW1lO1xuXHRlbHNlIHRpbWUgPSAwO1xuXG5cdHZhciB3ZXQ7XG5cdGlmKGlucHV0V2V0ICYmIGlucHV0V2V0ID4gMCAmJiBpbnB1dFdldCA8IDEpIHdldCA9IGlucHV0V2V0O1xuXHRlbHNlIGlmKGlucHV0V2V0ID49IDEpIHdldCA9IDE7XG5cdGVsc2Ugd2V0ID0gMDtcblxuXHR2YXIgZmVlZGJhY2s7XG5cdGlmKGlucHV0RmVlZGJhY2sgJiYgaW5wdXRGZWVkYmFjayA+IDAgJiYgaW5wdXRGZWVkYmFjayA8IDEpIGZlZWRiYWNrID0gaW5wdXRGZWVkYmFjaztcblx0ZWxzZSBpZihpbnB1dEZlZWRiYWNrID49IDEpIGZlZWRiYWNrID0gMTtcblx0ZWxzZSBmZWVkYmFjayA9IDA7XG5cblx0Ly9DaGVjayBpZiB3ZSBoYXZlIGRlbGF5XG5cdGlmKHRoaXMuZGVsYXkpIHtcblxuXHRcdC8vU2V0IHRoZSB2YWx1ZVxuXHRcdHRoaXMuZGVsYXkuZGVsYXlUaW1lID0gdGltZTtcblx0XHR0aGlzLmRlbGF5LndldCA9IHdldDtcblx0XHR0aGlzLmRlbGF5LmZlZWRiYWNrID0gZmVlZGJhY2s7XG5cblx0XHQvL1NldCB0aGUgbm9kZSdzIHZhbHVlLCBpZiBpdCBleGlzdHNcblx0XHRpZih0aGlzLmRlbGF5LmRlbGF5Tm9kZSkge1xuXG5cdFx0XHR0aGlzLmRlbGF5LmRlbGF5Tm9kZS5kZWxheU5vZGUuZGVsYXlUaW1lLnZhbHVlID0gdGltZTtcblx0XHRcdHRoaXMuZGVsYXkuZGVsYXlOb2RlLndldE5vZGUuZ2Fpbi52YWx1ZSA9IHdldDtcblx0XHRcdHRoaXMuZGVsYXkuZGVsYXlOb2RlLmZlZWRiYWNrTm9kZS5nYWluLnZhbHVlID0gZmVlZGJhY2s7XG5cdFx0fVxuXHR9XG5cdGVsc2Uge1xuXG5cdFx0Ly9JbmZvcm0gdGhhdCB0aGVyZSBpcyBubyBkZWxheSBvbiB0aGUgY3VycmVudCB3YWRcblx0XHRsb2dNZXNzYWdlKCdTb3JyeSwgYnV0IHRoZSB3YWQgZG9lcyBub3QgY29udGFpbiBkZWxheSEnLCAyKTtcblx0fVxuXG5cdHJldHVybiB0aGlzO1xufTtcblxuXG5XYWQucHJvdG90eXBlLnBhdXNlID0gZnVuY3Rpb24obGFiZWwpe1xuXHR0aGlzLnBhdXNlVGltZSA9IGNvbnRleHQuY3VycmVudFRpbWU7XG5cdHRoaXMuc291bmRTb3VyY2Uub25lbmRlZCA9IG51bGw7XG5cdHRoaXMuc3RvcChsYWJlbCk7XG5cbn07XG5XYWQucHJvdG90eXBlLnVucGF1c2UgPSBmdW5jdGlvbihhcmcpe1xuXHRhcmcgPSBhcmcgfHwge307XG5cdGFyZy51bnBhdXNlID0gdHJ1ZTtcblx0aWYgKCB0aGlzLnBhdXNlVGltZSAmJiAodGhpcy5sYXN0UGxheWVkVGltZSAhPSBudWxsKSApIHtcblx0XHRhcmcub2Zmc2V0ID0gdGhpcy5wYXVzZVRpbWUgLSB0aGlzLmxhc3RQbGF5ZWRUaW1lO1xuXHR9XG5cdGVsc2UgeyBcblx0XHRsb2dNZXNzYWdlKCdZb3UgdHJpZWQgdG8gdW5wYXVzZSBhIHdhZCB0aGF0IHdhcyBub3QgcGxheWVkIGFuZCBwYXVzZWQsIHNvIGl0IGp1c3QgcGxheWVkIG5vcm1hbGx5IGluc3RlYWQuJywgMik7XG5cdH1cblx0dGhpcy5wbGF5KGFyZyk7XG59O1xuXG4vKiogSWYgbXVsdGlwbGUgaW5zdGFuY2VzIG9mIGEgc291bmQgYXJlIHBsYXlpbmcgc2ltdWx0YW5lb3VzbHksIHN0b3AoKSBvbmx5IGNhbiBzdG9wIHRoZSBtb3N0IHJlY2VudCBvbmUgKiovXG5XYWQucHJvdG90eXBlLnN0b3AgPSBmdW5jdGlvbihsYWJlbCl7XG5cdGlmICggISggdGhpcy5zb3VyY2UgPT09ICdtaWMnICkgKSB7XG5cdFx0aWYgKCAhKHRoaXMuZ2FpbiAmJiB0aGlzLmdhaW4ubGVuZ3RoKSApe1xuXHRcdFx0bG9nTWVzc2FnZSgnWW91IHRyaWVkIHRvIHN0b3AgYSBXYWQgdGhhdCBuZXZlciBwbGF5ZWQuICcsIDIpO1xuXHRcdFx0bG9nTWVzc2FnZSh0aGlzLCAyKTtcblx0XHRcdHJldHVybjsgLy8gaWYgdGhlIHdhZCBoYXMgbmV2ZXIgYmVlbiBwbGF5ZWQsIHRoZXJlJ3Mgbm8gbmVlZCB0byBzdG9wIGl0XG5cdFx0fVxuXHRcdGVsc2UgaWYgKCBsYWJlbCApIHtcblx0XHRcdGZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMuZ2Fpbi5sZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCB0aGlzLmdhaW5baV0ubGFiZWwgPT09IGxhYmVsICkge1xuXHRcdFx0XHRcdHRoaXMuZ2FpbltpXS5nYWluLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhjb250ZXh0LmN1cnJlbnRUaW1lKTtcblx0XHRcdFx0XHR0aGlzLmdhaW5baV0uZ2Fpbi5zZXRWYWx1ZUF0VGltZSh0aGlzLmdhaW5baV0uZ2Fpbi52YWx1ZSwgY29udGV4dC5jdXJyZW50VGltZSk7XG5cdFx0XHRcdFx0dGhpcy5nYWluW2ldLmdhaW4ubGluZWFyUmFtcFRvVmFsdWVBdFRpbWUoLjAwMDEsIGNvbnRleHQuY3VycmVudFRpbWUgKyB0aGlzLmVudi5yZWxlYXNlKTtcblxuXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSBpZiAoICFsYWJlbCApIHtcblx0XHRcdHRoaXMuZ2FpblswXS5nYWluLmNhbmNlbFNjaGVkdWxlZFZhbHVlcyhjb250ZXh0LmN1cnJlbnRUaW1lKTtcblx0XHRcdHRoaXMuZ2FpblswXS5nYWluLnNldFZhbHVlQXRUaW1lKHRoaXMuZ2FpblswXS5nYWluLnZhbHVlLCBjb250ZXh0LmN1cnJlbnRUaW1lKTtcblx0XHRcdHRoaXMuZ2FpblswXS5nYWluLmxpbmVhclJhbXBUb1ZhbHVlQXRUaW1lKC4wMDAxLCBjb250ZXh0LmN1cnJlbnRUaW1lICsgdGhpcy5lbnYucmVsZWFzZSk7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHR0aGlzLnNvdW5kU291cmNlLnN0b3AoY29udGV4dC5jdXJyZW50VGltZSArIHRoaXMuZW52LnJlbGVhc2UpO1xuXHRcdFx0fVxuXHRcdFx0Y2F0Y2goZSl7XG5cdFx0XHRcdC8qXG5cdFx0XHRcdFx0U2FmYXJpIGZvciBpT1MgKGFuZCBtYXliZSBvdGhlciBicm93c2Vycylcblx0XHRcdFx0XHRjYW4ndCBzZWVtIHRvIGhhbmRsZSBjYWxsaW5nIHN0b3AoKSBvbiBhIHNvdW5kU291cmNlIHRoYXQgYWxyZWFkeSBoYWQgc3RvcCgpIHNjaGVkdWxlZC5cblx0XHRcdFx0XHRUaGUgc3BlYyBzYXlzIGl0IHNob3VsZCBiZSBmaW5lLCBhbmQgY2FuY2VsIHByZXZpb3VzIGNhbGxzIHRvIHN0b3AsIFxuXHRcdFx0XHRcdGJ1dCBTYWZhcmkgaXMgdGhyb3dpbmcgYW4gZXJyb3IgLS0gSW52YWxpZFN0YXRlRXJyb3I6IFRoZSBvYmplY3QgaXMgaW4gYW4gaW52YWxpZCBzdGF0ZS5cblx0XHRcdFx0XHRJJ20gbm90IHJlYWxseSBzdXJlIHdoeSB0aGlzIGlzIGhhcHBlbmluZywgYnV0IGF0IGxlYXN0IHdlIGNhbiBtYW51YWxseSBydW4gdGhlIGVuZGVkIGV2ZW50IGhhbmRsZXIuXG5cdFx0XHRcdCovXG5cdFx0XHRcdGxvZ01lc3NhZ2UoZSwyKTtcblx0XHRcdFx0dmFyIHRoYXQgPSB0aGlzO1xuXHRcdFx0XHRzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG5cdFx0XHRcdFx0dGhhdC5zb3VuZFNvdXJjZS5kaXNwYXRjaEV2ZW50KG5ldyBFdmVudCgnZW5kZWQnKSk7XG5cdFx0XHRcdFx0dGhhdC5zb3VuZFNvdXJjZS5vbmVuZGVkID0gbnVsbDtcblx0XHRcdFx0fSwgdGhpcy5lbnYucmVsZWFzZSAqIDEwMDApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXHRlbHNlIGlmIChwZXJtaXNzaW9uc0dyYW50ZWQubWljQ29uc2VudCApIHtcblx0XHR0aGlzLm1lZGlhU3RyZWFtU291cmNlLmRpc2Nvbm5lY3QoMCk7XG5cdH1cblx0ZWxzZSB7IGxvZ01lc3NhZ2UoJ1lvdSBoYXZlIG5vdCBnaXZlbiB5b3VyIGJyb3dzZXIgcGVybWlzc2lvbiB0byB1c2UgeW91ciBtaWNyb3Bob25lLicpO31cblx0aWYgKCB0aGlzLnRyZW1vbG8gKSB7XG5cdFx0dGhpcy50cmVtb2xvLndhZC5zdG9wKCk7XG5cdH1cbn07XG5cbldhZC5zdG9wQWxsID0gZnVuY3Rpb24obGFiZWwpe1xuXHRmb3IgKCB2YXIgaSA9IDA7IGkgPCBXYWQuYWxsV2Fkcy5sZW5ndGg7IGkrKyApIHtcblx0XHRXYWQuYWxsV2Fkc1tpXS5zdG9wKGxhYmVsKTtcblx0fVxufTtcbldhZC5zZXRWb2x1bWUgPSBmdW5jdGlvbih2b2x1bWUpe1xuXHRmb3IgKCB2YXIgaSA9IDA7IGkgPCBXYWQuYWxsV2Fkcy5sZW5ndGg7IGkrKyApIHtcblx0XHRXYWQuYWxsV2Fkc1tpXS5zZXRWb2x1bWUodm9sdW1lKTtcblx0fVxufTtcblxuZXhwb3J0IGRlZmF1bHQgV2FkO1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbihvcmlnaW5hbE1vZHVsZSkge1xuXHRpZiAoIW9yaWdpbmFsTW9kdWxlLndlYnBhY2tQb2x5ZmlsbCkge1xuXHRcdHZhciBtb2R1bGUgPSBPYmplY3QuY3JlYXRlKG9yaWdpbmFsTW9kdWxlKTtcblx0XHQvLyBtb2R1bGUucGFyZW50ID0gdW5kZWZpbmVkIGJ5IGRlZmF1bHRcblx0XHRpZiAoIW1vZHVsZS5jaGlsZHJlbikgbW9kdWxlLmNoaWxkcmVuID0gW107XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJsb2FkZWRcIiwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGdldDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBtb2R1bGUubDtcblx0XHRcdH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobW9kdWxlLCBcImlkXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWUsXG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gbW9kdWxlLmk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KG1vZHVsZSwgXCJleHBvcnRzXCIsIHtcblx0XHRcdGVudW1lcmFibGU6IHRydWVcblx0XHR9KTtcblx0XHRtb2R1bGUud2VicGFja1BvbHlmaWxsID0gMTtcblx0fVxuXHRyZXR1cm4gbW9kdWxlO1xufTtcbiIsIi8vaW1wb3J0IFdhZCBmcm9tICd3ZWItYXVkaW8tZGF3JztcclxuaW1wb3J0IFdhZCBmcm9tICcuL3dhZC9tYWluJztcclxuaW1wb3J0IEluc3RydW1lbnQgZnJvbSAnLi90cmlnb25faW5zdHJ1bWVudCc7XHJcbnZhciBTVEFURT17XHJcbiAgICBJTklUOjAsXHJcbiAgICBSVU5OSU5HOjEsXHJcbiAgICBQQVVTRToyLFxyXG4gICAgU1RPUDozXHJcbn1cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3N7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe1xyXG4gICAgICAgIHRoaXMudHJhY2tzPVtdXHJcbiAgICAgICAgdGhpcy5pbnRlcnZhbD1udWxsO1xyXG4gICAgICAgIHRoaXMuc3RlcD0wO1xyXG4gICAgICAgIHRoaXMuYnBtPTYwO1xyXG4gICAgICAgIHRoaXMuc3RhdGU9U1RBVEUuSU5JVDtcclxuICAgICAgICB0aGlzLl9mcmFtZUNvdW50PTA7XHJcbiAgICAgICAgdGhpcy5fc2tpcEZyYW1lPTYwO1xyXG4gICAgICAgIHRoaXMuX3N0b3BNYXJrPWZhbHNlO1xyXG4gICAgICAgIHRoaXMuX25hbWU9XCJ0cmlnb25cIjtcclxuICAgICAgICB0aGlzLl9jcmVhdGU9bnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBzaW5lKGFyZ3Mpe1xyXG4gICAgICAgIHJldHVybiBuZXcgV2FkKHsgc291cmNlIDogJ3NpbmUnLC4uLmFyZ3N9KTtcclxuICAgIH1cclxuICAgIHNhd3Rvb3RoKGFyZ3Mpe1xyXG4gICAgICAgIHJldHVybiBuZXcgV2FkKHsgc291cmNlIDogJ3Nhd3Rvb3RoJywuLi5hcmdzfSk7XHJcbiAgICB9XHJcbiAgICBzcXVhcmUoYXJncyl7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBXYWQoeyBzb3VyY2UgOiAnc3F1YXJlJywuLi5hcmdzfSk7XHJcbiAgICB9XHJcbiAgICB0cmlhbmdsZShhcmdzKXtcclxuICAgICAgICByZXR1cm4gbmV3IFdhZCh7IHNvdXJjZSA6ICd0cmlhbmdsZScsLi4uYXJnc30pO1xyXG4gICAgfVxyXG4gICAgYmFzZURydW0oYXJncyl7XHJcbiAgICAgICAgdmFyIGluc3Q9bmV3IEluc3RydW1lbnQoKTtcclxuICAgICAgICB2YXIgbWFwPXtcclxuICAgICAgICAgICAgXCJraWNrXCI6bmV3IFdhZCh7c291cmNlIDogJy4vc2FtcGxlcy9kcnVtL2tpY2sud2F2JywuLi5hcmdzfSksXHJcbiAgICAgICAgICAgIFwic25hcmVcIjpuZXcgV2FkKHtzb3VyY2UgOiAnLi9zYW1wbGVzL2RydW0vc25hcmUud2F2JywuLi5hcmdzfSksXHJcbiAgICAgICAgICAgIFwib2hoXCI6bmV3IFdhZCh7c291cmNlIDogJy4vc2FtcGxlcy9kcnVtL29wZW5oaC53YXYnLC4uLmFyZ3N9KSxcclxuICAgICAgICAgICAgXCJjaGhcIjpuZXcgV2FkKHtzb3VyY2UgOiAnLi9zYW1wbGVzL2RydW0vY2xvc2VoaC53YXYnLC4uLmFyZ3N9KSxcclxuICAgICAgICB9XHJcbiAgICAgICAgaW5zdC5zZXRNYXAobWFwKTtcclxuICAgICAgICBpbnN0Lm9uVHJpZ2dlcj1hcmdzPT57XHJcbiAgICAgICAgICAgIHZhciBub3Rlcz1hcmdzW1wicGl0Y2hcIl0uc3BsaXQoXCIrXCIpO1xyXG4gICAgICAgICAgICBub3Rlcy5mb3JFYWNoKG5vdGU9PntcclxuICAgICAgICAgICAgICAgIGluc3QuX3BsYXkobm90ZSxhcmdzKTtcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBpbnN0O1xyXG4gICAgfVxyXG4gICAgYWRkVHJhY2socGF0dGVybil7XHJcbiAgICAgICAgdGhpcy50cmFja3MucHVzaChwYXR0ZXJuKVxyXG4gICAgfVxyXG4gICAgc2V0QnBtKGJwbSl7XHJcbiAgICAgICAgdGhpcy5icG09YnBtO1xyXG4gICAgICAgIHRoaXMuX3NraXBGcmFtZT1NYXRoLnJvdW5kKDYwKjYwL2JwbS8xMClcclxuICAgICAgICBjb25zb2xlLmxvZyh0aGlzLl9za2lwRnJhbWUpXHJcbiAgICB9XHJcbiAgICBzZXRDcmVhdGUoZnVuYyl7XHJcbiAgICAgICAgdGhpcy5fY3JlYXRlPWZ1bmM7XHJcbiAgICB9XHJcbiAgICBwbGF5KCl7XHJcbiAgICAgICAgaWYodGhpcy5zdGF0ZT09U1RBVEUuSU5JVCl7XHJcbiAgICAgICAgICAgIHRoaXMuc3RvcCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZih0aGlzLnN0YXRlIT1TVEFURS5SVU5OSU5HKXtcclxuICAgICAgICAgICAgdGhpcy50cmFja3M9W107XHJcbiAgICAgICAgICAgIGlmKHRoaXMuX2NyZWF0ZSl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jcmVhdGUoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyYWNrLWNvdW50OlwiK3RoaXMudHJhY2tzLmxlbmd0aCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N0b3BNYXJrPWZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlPVNUQVRFLlJVTk5JTkc7XHJcbiAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKT0+e1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb25GcmFtZSgpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIF9vbkZyYW1lKCl7XHJcbiAgICAgICAgaWYoIXRoaXMuX3N0b3BNYXJrKXtcclxuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9vbkZyYW1lKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fZnJhbWVDb3VudCs9MTtcclxuICAgICAgICBpZiAodGhpcy5fZnJhbWVDb3VudCAlICgxICsgdGhpcy5fc2tpcEZyYW1lKSAhPSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGlzU3RvcD10cnVlO1xyXG4gICAgICAgIHRoaXMudHJhY2tzLmZvckVhY2godHJhY2s9PntcclxuICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhcInBsYXk6XCIrdHJhY2submFtZSlcclxuICAgICAgICAgICAgaWYodHJhY2sucGxheSh0aGlzLnN0ZXApKXtcclxuICAgICAgICAgICAgICAgIGlzU3RvcD1mYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuc3RlcCs9MTtcclxuICAgICAgICBpZihpc1N0b3Ape1xyXG4gICAgICAgICAgICB0aGlzLnN0b3AoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbiAgICBwYXVzZSgpe1xyXG4gICAgICAgIHRoaXMuX3N0b3BNYXJrPXRydWU7XHJcbiAgICAgICAgdGhpcy5zdGF0ZT1TVEFURS5QQVVTRTtcclxuICAgIH1cclxuICAgIHN0b3AoKXtcclxuICAgICAgICB0aGlzLl9mcmFtZUNvdW50PTA7XHJcbiAgICAgICAgdGhpcy5zdGVwPTA7XHJcbiAgICAgICAgdGhpcy5fc3RvcE1hcms9dHJ1ZTtcclxuICAgICAgICB0aGlzLnN0YXRlPVNUQVRFLlNUT1A7XHJcbiAgICB9XHJcblxyXG59IiwiLy9pbXBvcnQgV2FkIGZyb20gJ3dlYi1hdWRpby1kYXcnO1xyXG5pbXBvcnQgV2FkIGZyb20gJy4vd2FkL21haW4nO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzc3tcclxuICAgIGNvbnN0cnVjdG9yKCl7XHJcbiAgICAgICAgdGhpcy5fbmFtZT1cIlwiO1xyXG4gICAgICAgIHRoaXMuX3R5cGU9XCJ0cmlnb25faW5zdHJ1bWVudFwiO1xyXG4gICAgICAgIHRoaXMubWFwPXt9O1xyXG4gICAgfVxyXG4gICAgc2V0TWFwKF9tYXApe1xyXG4gICAgICAgIHRoaXMubWFwPV9tYXA7XHJcbiAgICB9XHJcbiAgICBfcGxheShub3RlLGFyZ3Mpe1xyXG4gICAgICAgIHZhciBzeW50aD10aGlzLm1hcFtub3RlXTtcclxuICAgICAgICBpZihzeW50aCl7XHJcbiAgICAgICAgICAgIGlmKHN5bnRoLm9uVHJpZ2dlcil7XHJcbiAgICAgICAgICAgICAgICBzeW50aC5vblRyaWdnZXIoYXJncyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHN5bnRoLnBsYXkoYXJncyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwbGF5KGFyZ3Mpe1xyXG4gICAgICAgIHZhciBub3RlPWFyZ3NbXCJwaXRjaFwiXTtcclxuICAgICAgICB2YXIgbGFiZWw9YXJnc1tcImxhYmVsXCJdO1xyXG4gICAgICAgIGlmKG5vdGUpe1xyXG4gICAgICAgICAgICBpZih0aGlzLm9uVHJpZ2dlcil7XHJcbiAgICAgICAgICAgICAgICB0aGlzLm9uVHJpZ2dlcihhcmdzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcGxheShub3RlLGFyZ3MpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgc3RvcChhcmdzKXtcclxuICAgICAgICBcclxuICAgIH1cclxufSIsIi8vaW1wb3J0IFdhZCBmcm9tICd3ZWItYXVkaW8tZGF3JztcclxuaW1wb3J0IFdhZCBmcm9tICcuL3dhZC9tYWluJztcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3N7XHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lPW51bGwpe1xyXG4gICAgICAgIHRoaXMuZGF0YT1bXTtcclxuICAgICAgICB0aGlzLl9uYW1lPVwidHJpZ29uX3BhdHRlcm5cIjtcclxuICAgICAgICB0aGlzLl9sYXN0U3ludGg9bnVsbDtcclxuICAgICAgICB0aGlzLm5hbWU9bmFtZTtcclxuICAgICAgICB0aGlzLnN0b3BPbk5leHQ9ZmFsc2U7XHJcbiAgICB9XHJcbiAgICBhZGRQYXR0ZXJuKHBhdHRlcm4sbm90ZXM9bnVsbCxvZmZzZXQ9MCl7XHJcbiAgICAgICAgaWYob2Zmc2V0PjApe1xyXG4gICAgICAgICAgICBmb3IodmFyIGk9MDtpPG9mZnNldDtpKyspe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5hZGROb3RlKG51bGwsXCIwXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYocGF0dGVybi5fbmFtZT09XCJ0cmlnb25fcGF0dGVyblwiKXtcclxuICAgICAgICAgICAgdGhpcy5kYXRhPXRoaXMuZGF0YS5jb25jYXQocGF0dGVybi5kYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgbm90ZXMuZm9yRWFjaChub3RlPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFkZE5vdGUocGF0dGVybixub3RlKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBhZGROb3RlKHN5bnRoLG5vdGUsaG9sZCxvZmZzZXQsYXJncz1udWxsKXtcclxuICAgICAgICBpZihvZmZzZXQ+MCl7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaT0wO2k8b2Zmc2V0O2krKyl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGROb3RlKG51bGwsXCIwXCIpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fYWRkTm90ZShzeW50aCxub3RlLGFyZ3MpO1xyXG4gICAgICAgIGlmKGhvbGQ+MCl7XHJcbiAgICAgICAgICAgIGZvcih2YXIgaT0wO2k8aG9sZDtpKyspe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYWRkTm90ZShudWxsLFwiMFwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIF9hZGROb3RlKHN5bnRoLG5vdGUsYXJncz1udWxsKXtcclxuICAgICAgICBsZXQgX3Q9bm90ZS5zcGxpdChcIi9cIik7XHJcbiAgICAgICAgdmFyIG5vdGVfdD00O1xyXG4gICAgICAgIGlmKF90Lmxlbmd0aD4xKXtcclxuICAgICAgICAgICAgbm90ZT1fdFswXTtcclxuICAgICAgICAgICAgbm90ZV90PXBhcnNlSW50KF90WzFdKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuZGF0YS5wdXNoKHtcclxuICAgICAgICAgICAgc3ludGg6c3ludGgsXHJcbiAgICAgICAgICAgIG5vdGU6bm90ZSxcclxuICAgICAgICAgICAgYXJnczphcmdzXHJcbiAgICAgICAgfSlcclxuXHJcbiAgICAgICAgZm9yKGxldCBpPTE7aTxub3RlX3Q7aSsrKXtcclxuICAgICAgICAgICAgdGhpcy5kYXRhLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgc3ludGg6bnVsbCxcclxuICAgICAgICAgICAgICAgIG5vdGU6XCItXCIsXHJcbiAgICAgICAgICAgICAgICBhcmdzOm51bGxcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcGxheShzdGVwKXtcclxuICAgICAgICB2YXIgX2RhdGE9dGhpcy5kYXRhW3N0ZXBdO1xyXG4gICAgICAgIGlmKCFfZGF0YSl7XHJcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHN5bnRoPV9kYXRhLnN5bnRoO1xyXG4gICAgICAgIGxldCBub3RlPV9kYXRhLm5vdGU7XHJcbiAgICAgICAgbGV0IGFyZ3M9X2RhdGEuYXJncztcclxuXHJcbiAgICAgICAgLy8gbGV0IGl0ZW09dGhpcy5kYXRhLnNoaWZ0KCk7XHJcbiAgICAgICAgLy8gaWYoaXRlbT09bnVsbCl7XHJcbiAgICAgICAgLy8gICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gbGV0IHN5bnRoPWl0ZW0uc3ludGg7XHJcbiAgICAgICAgLy8gbGV0IG5vdGU9aXRlbS5ub3RlO1xyXG4gICAgICAgIC8vIGxldCBhcmdzPWl0ZW0uYXJncztcclxuICAgICAgICBpZihub3RlIT1cIjBcIiYmbm90ZSE9XCItXCIpe1xyXG4gICAgICAgICAgICBpZih0aGlzLnN0b3BPbk5leHQmJnRoaXMuX2xhc3RTeW50aCl7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0U3ludGguc3RvcCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmKGFyZ3Mpe1xyXG4gICAgICAgICAgICAgICAgc3ludGgucGxheSh7cGl0Y2ggOiBub3RlLCBsYWJlbCA6IG5vdGUsLi4uYXJnc30pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHN5bnRoLnBsYXkoe3BpdGNoIDogbm90ZSwgbGFiZWwgOiBub3RlfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdGhpcy5fbGFzdFN5bnRoPXN5bnRoO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcInRyYWNrOlwiK3RoaXMubmFtZStcIiBwbGF5OlwiK25vdGUpO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG59IiwiYFxyXG5EZW1vU29uZy1MZW5zaGFuZ1xyXG5jb2RlOkxlbnNoYW5nXHJcbjIwMjAtMDktMjFcclxuYFxyXG5pbXBvcnQgVHJpZ29uIGZyb20gJy4uL2NvcmUvdHJpZ29uLmpzJztcclxuaW1wb3J0IFBhdHRlcm4gZnJvbSAnLi4vY29yZS90cmlnb25fcGF0dGVybi5qcyc7XHJcbnZhciB0cmlnb24gPSBuZXcgVHJpZ29uKCk7XHJcbnRyaWdvbi5zZXRCcG0oMTIwKVxyXG52YXIgdHJhY2sxID0gbnVsbDtcclxudmFyIHRyYWNrMiA9IG51bGw7XHJcbnZhciB0cmFjazM9bnVsbDtcclxudmFyIHRyYWNrND1udWxsO1xyXG4vLyNyZWdpb24gVHJhY2tfc3ludGgxXHJcbnZhciBzZXRUcmFjazE9ZnVuY3Rpb24gKCkge1xyXG4gICAgbGV0IGVudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMC4yLCByZWxlYXNlOiAwLjMgfVxyXG4gICAgbGV0IGRlbGF5ID0geyBkZWxheVRpbWU6IDAuNSwgd2V0OiAwLjI1LCBmZWVkYmFjazogMC4yNSB9XHJcbiAgICBsZXQgc3ludGggPSB0cmlnb24uc3F1YXJlKHsgZmlsdGVyOiB7IHR5cGU6ICdsb3dwYXNzJywgZnJlcXVlbmN5OiAxNTAwLCBxOiAxIH0sIGVudjogZW52LCBkZWxheTogZGVsYXksIHZvbHVtZTogMC4zIH0pXHJcblxyXG4gICAgbGV0IG5vdGUgPSBbXCJBM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJBM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJBM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCJdO1xyXG4gICAgbGV0IGNob3JkID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIGNob3JkLmFkZFBhdHRlcm4oc3ludGgsIG5vdGUpO1xyXG5cclxuICAgIG5vdGUgPSBbXCJHM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJHM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJHM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCJdO1xyXG4gICAgbGV0IGNob3JkMiA9IG5ldyBQYXR0ZXJuKCk7XHJcbiAgICBjaG9yZDIuYWRkUGF0dGVybihzeW50aCwgbm90ZSk7XHJcblxyXG4gICAgbm90ZSA9IFtcIkYzXCIsIFwiQzRcIiwgXCJFNFwiLCBcIkYzXCIsIFwiQzRcIiwgXCJFNFwiLCBcIkYzXCIsIFwiQzRcIiwgXCJFNFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIl07XHJcbiAgICBsZXQgY2hvcmQzID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIGNob3JkMy5hZGRQYXR0ZXJuKHN5bnRoLCBub3RlKTtcclxuXHJcbiAgICBub3RlID0gW1wiRyMzXCIsIFwiQzRcIiwgXCJFNFwiLCBcIkcjM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJHIzNcIiwgXCJDNFwiLCBcIkU0XCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiXTtcclxuICAgIGxldCBjaG9yZDQgPSBuZXcgUGF0dGVybigpO1xyXG4gICAgY2hvcmQ0LmFkZFBhdHRlcm4oc3ludGgsIG5vdGUpO1xyXG5cclxuICAgIGxldCBzeW50aDFfcGF0dGVybiA9IG5ldyBQYXR0ZXJuKCk7XHJcbiAgICBzeW50aDFfcGF0dGVybi5hZGRQYXR0ZXJuKGNob3JkKTtcclxuICAgIHN5bnRoMV9wYXR0ZXJuLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDIpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDIpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDMpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDMpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDIpO1xyXG4gICAgc3ludGgxX3BhdHRlcm4uYWRkUGF0dGVybihjaG9yZDQpO1xyXG5cclxuICAgIHRyYWNrMSA9IG5ldyBQYXR0ZXJuKFwidHIxXCIpXHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihzeW50aDFfcGF0dGVybilcclxuICAgIHRyYWNrMS5hZGRQYXR0ZXJuKHN5bnRoMV9wYXR0ZXJuKVxyXG4gICAgdHJhY2sxLmFkZFBhdHRlcm4oc3ludGgxX3BhdHRlcm4pXHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihzeW50aDFfcGF0dGVybilcclxuICAgIHRyaWdvbi5hZGRUcmFjayh0cmFjazEpO1xyXG59O1xyXG5cclxuXHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuLy8jcmVnaW9uIFRyYWNrX3N5bnRoMlxyXG52YXIgc2V0VHJhY2syID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbGV0IGVudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMC4yLCByZWxlYXNlOiAwLjMgfVxyXG4gICAgbGV0IGRlbGF5ID0geyBkZWxheVRpbWU6IDAuNSwgd2V0OiAwLjI1LCBmZWVkYmFjazogMC4yNSB9XHJcbiAgICBsZXQgc3ludGggPSB0cmlnb24uc2F3dG9vdGgoeyBlbnY6IGVudiwgZGVsYXk6IGRlbGF5LCB2b2x1bWU6IDAuMyB9KVxyXG4gICAgLy9sZXQgbm90ZSA9IFtcIkE0XCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCJdO1xyXG4gICAgbGV0IGNob3JkID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsIFwiQTRcIiwgNyk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLCBcIkU0XCIsIDcpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCwgXCJBM1wiLCA3ICsgOCk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLCBcIkc0XCIsIDcpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCwgXCJENFwiLCA3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsIFwiQjNcIiwgNyArIDgpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCwgXCJGNFwiLCA3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsIFwiQzRcIiwgNyk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLCBcIkEzXCIsIDcgKyA4KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsIFwiRiM0XCIsIDcpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCwgXCJDNFwiLCA3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsIFwiRTRcIiwgNyArIDgpO1xyXG4gICAgdHJhY2syID0gbmV3IFBhdHRlcm4oXCJ0cjJcIilcclxuICAgIHRyYWNrMi5hZGRQYXR0ZXJuKGNob3JkLCBudWxsLCAxMjgpO1xyXG4gICAgdHJhY2syLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgdHJhY2syLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgdHJhY2syLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgdHJhY2syLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgdHJpZ29uLmFkZFRyYWNrKHRyYWNrMik7XHJcbn1cclxuXHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuLy8jcmVnaW9uIFRyYWNrX3N5bnRoM1xyXG52YXIgc2V0VHJhY2szID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbGV0IGVudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMC4yLCByZWxlYXNlOiAwLjMgfVxyXG4gICAgbGV0IGRlbGF5ID0geyBkZWxheVRpbWU6IDAuMjUsIHdldDogMC43LCBmZWVkYmFjazogMC44IH1cclxuICAgIGxldCBzeW50aCA9IHRyaWdvbi50cmlhbmdsZSh7IGVudjogZW52LCBkZWxheTogZGVsYXksIHZvbHVtZTogMC40IH0pXHJcbiAgICBsZXQgY2hvcmQgPSBuZXcgUGF0dGVybigpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCxcIkM0XCIsNyk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLFwiQTNcIiw3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsXCJFM1wiLDcrOCk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLFwiQjNcIiw3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsXCJDNFwiLDcpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCxcIkU0XCIsNys4KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsXCJDNFwiLDcpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCxcIkEzXCIsNyk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLFwiRTNcIiw3KzgpO1xyXG4gICAgY2hvcmQuYWRkTm90ZShzeW50aCxcIkIzXCIsNyk7XHJcbiAgICBjaG9yZC5hZGROb3RlKHN5bnRoLFwiQzRcIiw3KTtcclxuICAgIGNob3JkLmFkZE5vdGUoc3ludGgsXCJFNFwiLDcrOCk7XHJcbiAgICB0cmFjazMgPSBuZXcgUGF0dGVybihcInRyM1wiKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKGNob3JkLCBudWxsLCAyNTYpO1xyXG4gICAgdHJhY2szLmFkZFBhdHRlcm4oY2hvcmQpO1xyXG4gICAgdHJpZ29uLmFkZFRyYWNrKHRyYWNrMyk7XHJcbn1cclxuXHJcbi8vI2VuZHJlZ2lvblxyXG5cclxuLy8jcmVnaW9uIFRyYWNrNF9kcnVtXHJcbnZhciBzZXRUcmFjazQ9ZnVuY3Rpb24oKXtcclxuICAgIGxldCBkZWxheSA9IHsgZGVsYXlUaW1lOiAwLjMsIHdldDogMC4yNSwgZmVlZGJhY2s6IDAuMjUgfVxyXG4gICAgbGV0IHN5bnRoID0gdHJpZ29uLmJhc2VEcnVtKHt2b2x1bWU6MC44LGRlbGF5OmRlbGF5fSk7XHJcbiAgICBsZXQgbm90ZSA9IFtcImtpY2tcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwic25hcmVcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsXCJraWNrXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcImtpY2tcIiwgXCIwXCIsIFwiMFwiLCBcInNuYXJlXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiLCBcIjBcIiwgXCIwXCIsIFwiMFwiXTtcclxuICAgIGxldCBjaG9yZCA9IG5ldyBQYXR0ZXJuKCk7XHJcbiAgICBjaG9yZC5hZGRQYXR0ZXJuKHN5bnRoLCBub3RlKTtcclxuICAgIGNob3JkLmFkZFBhdHRlcm4oc3ludGgsIG5vdGUpO1xyXG4gICAgY2hvcmQuYWRkUGF0dGVybihzeW50aCwgbm90ZSk7XHJcbiAgICBjaG9yZC5hZGRQYXR0ZXJuKHN5bnRoLCBub3RlKTtcclxuICAgIHRyYWNrNCA9IG5ldyBQYXR0ZXJuKFwidHI0XCIpO1xyXG4gICAgdHJhY2s0LmFkZFBhdHRlcm4oY2hvcmQsIG51bGwsIDI1Nik7XHJcbiAgICB0cmFjazQuYWRkUGF0dGVybihjaG9yZCk7XHJcbiAgICB0cmFjazQuYWRkUGF0dGVybihjaG9yZCk7XHJcbiAgICB0cmlnb24uYWRkVHJhY2sodHJhY2s0KTtcclxufVxyXG5cclxuLy8jZW5kcmVnaW9uXHJcbnRyaWdvbi5zZXRDcmVhdGUoKCk9PntcclxuICAgIHNldFRyYWNrMSgpO1xyXG4gICAgc2V0VHJhY2syKCk7XHJcbiAgICBzZXRUcmFjazMoKTtcclxuICAgIHNldFRyYWNrNCgpO1xyXG59KTtcclxuZXhwb3J0IGRlZmF1bHQgdHJpZ29uOyIsImBcclxu5r2u6bij44KKLeaKmOaIuOS8uOayu1xyXG5jb2RlOkxlbnNoYW5nXHJcbjIwMjAtMDktMjFcclxuYFxyXG5pbXBvcnQgVHJpZ29uIGZyb20gJy4uL2NvcmUvdHJpZ29uLmpzJztcclxuaW1wb3J0IFBhdHRlcm4gZnJvbSAnLi4vY29yZS90cmlnb25fcGF0dGVybi5qcyc7XHJcbnZhciB0cmlnb24gPSBuZXcgVHJpZ29uKCk7XHJcbnRyaWdvbi5zZXRCcG0oNzYpXHJcbmxldCBlbnYgPSB7IGF0dGFjazogMC4wMSwgZGVjYXk6IDAuMDMsIGhvbGQ6IDAuMiwgcmVsZWFzZTogMC4zIH1cclxubGV0IGRlbGF5ID0geyBkZWxheVRpbWU6IDAuNSwgd2V0OiAwLjI1LCBmZWVkYmFjazogMC4yNSB9XHJcbmxldCBwaWFubyA9IHRyaWdvbi5zcXVhcmUoeyBmaWx0ZXI6IHsgdHlwZTogJ2xvd3Bhc3MnLCBmcmVxdWVuY3k6IDE1MDAsIHE6IDEgfSwgZW52OiBlbnYsIGRlbGF5OiBkZWxheSwgdm9sdW1lOiAwLjE1IH0pXHJcbmxldCBwaWFubzIgPSB0cmlnb24uc3F1YXJlKHsgZmlsdGVyOiB7IHR5cGU6ICdsb3dwYXNzJywgZnJlcXVlbmN5OiAxNTAwLCBxOiAxIH0sIGVudjogZW52LCBkZWxheTogZGVsYXksIHZvbHVtZTogMC4zIH0pXHJcbnZhciB0cmFjazE9bmV3IFBhdHRlcm4oXCJ0cjFcIik7XHJcbnZhciB0cmFjazI9bmV3IFBhdHRlcm4oXCJ0cjJcIik7XHJcbnZhciB0cmFjazM9bmV3IFBhdHRlcm4oXCJ0cl9kcnVtXCIpO1xyXG52YXIgdHJhY2s0PW5ldyBQYXR0ZXJuKFwidHJfYmFzc1wiKTtcclxudmFyIHRyYWNrNT1uZXcgUGF0dGVybihcInRyX3N5bnRoXCIpO1xyXG4vLyNyZWdpb24gcGlhbm9fcnl0aG1cclxuZnVuY3Rpb24gc2V0VHJhY2sxKCl7XHJcbiAgICBsZXQgY2hvcmQxID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIGNob3JkMS5hZGRQYXR0ZXJuKHBpYW5vLCBbXCJGM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJDNFwiLCBcIkYzXCIsIFwiQzRcIiwgXCJFNFwiLCBcIkM0XCJdKTtcclxuICAgIGxldCBjaG9yZDIgPSBuZXcgUGF0dGVybigpO1xyXG4gICAgY2hvcmQyLmFkZFBhdHRlcm4ocGlhbm8sIFtcIkczXCIsIFwiQjNcIiwgXCJENFwiLCBcIkIzXCIsXCJHM1wiLCBcIkIzXCIsIFwiRDRcIiwgXCJCM1wiXSk7XHJcbiAgICBsZXQgY2hvcmQzID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIGNob3JkMy5hZGRQYXR0ZXJuKHBpYW5vLCBbXCJBM1wiLCBcIkM0XCIsIFwiRTRcIiwgXCJDNFwiLFwiQTNcIiwgXCJDNFwiLCBcIkU0XCIsIFwiQzRcIl0pO1xyXG5cclxuICAgIGxldCByeXRobTE9bmV3IFBhdHRlcm4oKTtcclxuICAgIFxyXG4gICAgcnl0aG0xLmFkZFBhdHRlcm4oY2hvcmQxKTtcclxuICAgIHJ5dGhtMS5hZGRQYXR0ZXJuKGNob3JkMik7XHJcbiAgICByeXRobTEuYWRkUGF0dGVybihjaG9yZDMpO1xyXG4gICAgcnl0aG0xLmFkZFBhdHRlcm4oY2hvcmQzKTtcclxuXHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihyeXRobTEsbnVsbCwyKTtcclxuICAgIHRyYWNrMS5hZGRQYXR0ZXJuKHJ5dGhtMSk7XHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihyeXRobTEpO1xyXG4gICAgdHJhY2sxLmFkZFBhdHRlcm4ocnl0aG0xKTtcclxuICAgIHRyYWNrMS5hZGRQYXR0ZXJuKHJ5dGhtMSk7XHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihyeXRobTEpO1xyXG4gICAgdHJhY2sxLmFkZFBhdHRlcm4ocnl0aG0xKTtcclxuICAgIHRyYWNrMS5hZGRQYXR0ZXJuKHJ5dGhtMSk7XHJcbiAgICB0cmFjazEuYWRkUGF0dGVybihyeXRobTEpO1xyXG4gICAgdHJhY2sxLmFkZFBhdHRlcm4ocnl0aG0xKTtcclxufVxyXG4vLyNlbmRyZWdpb25cclxuXHJcbi8vI3JlZ2lvbiBwaWFub19tYWluXHJcbmZ1bmN0aW9uIHNldFRyYWNrMigpe1xyXG4gICAgdmFyIHByZVNlY3Rpb249bmV3IFBhdHRlcm4oKTtcclxuICAgIHByZVNlY3Rpb24uYWRkTm90ZShwaWFubzIsXCJHNFwiLDEpO1xyXG4gICAgdmFyIHNlY3Rpb24xPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU1XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIsNilcclxuXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU1XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU1XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIsMilcclxuXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIsMilcclxuXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkQ0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkI0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkU1XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMS5hZGROb3RlKHBpYW5vMixcIkE0XCIsNilcclxuXHJcbiAgICB2YXIgc2VjdGlvbjI9bmV3IFBhdHRlcm4oKTtcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiRzRcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQTRcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiRTVcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQjRcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQzVcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQjRcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQzVcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiRDVcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiRTVcIilcclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQTRcIiw3KVxyXG5cclxuICAgIHNlY3Rpb24yLmFkZE5vdGUocGlhbm8yLFwiQTRcIiwxKVxyXG4gICAgc2VjdGlvbjIuYWRkTm90ZShwaWFubzIsXCJHNFwiLDEpXHJcblxyXG4gICAgdmFyIHNlY3Rpb24zPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkU1XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkI0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkM1XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkI0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkM1XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkI0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkU0XCIsNilcclxuXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkQ0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkU0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkc0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkE0XCIpXHJcbiAgICBzZWN0aW9uMy5hZGROb3RlKHBpYW5vMixcIkI0XCIpXHJcblxyXG4gICAgdmFyIHNlY3Rpb240PW5ldyBQYXR0ZXJuKClcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiRzRcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQTRcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiRTVcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQjRcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQzVcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQjRcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQzVcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiRDVcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiRTVcIilcclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQTRcIiw1KVxyXG5cclxuICAgIHNlY3Rpb240LmFkZE5vdGUocGlhbm8yLFwiQTRcIiwxKVxyXG4gICAgc2VjdGlvbjQuYWRkTm90ZShwaWFubzIsXCJCNFwiLDEpXHJcbiAgICBzZWN0aW9uNC5hZGROb3RlKHBpYW5vMixcIkc1XCIsMSlcclxuXHJcbiAgICB2YXIgc2VjdGlvbjU9bmV3IFBhdHRlcm4oKTtcclxuICAgIHNlY3Rpb241LmFkZFBhdHRlcm4ocGlhbm8yLFtcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQTVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJBNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQjVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJCNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQzZcIixcIkU1XCIsXHJcbiAgICAgICAgXCJCNVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG5cclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQTVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJBNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQjVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJCNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQzZcIixcIkU1XCIsXHJcbiAgICAgICAgXCJCNVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG5cclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQTVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJBNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQjVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJCNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQzZcIixcIkU1XCIsXHJcbiAgICAgICAgXCJCNVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJBNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQTVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkE1XCIsXCJFNVwiLFxyXG4gICAgICAgIFwiRDVcIixcIkU1XCIsXCJCNVwiLFwiRTVcIixcclxuICAgICAgICBcIkQ1XCIsXCJFNVwiLFwiQTVcIixcIkU1XCIsXHJcbiAgICAgICAgXCJENVwiLFwiRTVcIixcIkM2XCIsXCJCNVwiLFxyXG4gICAgICAgIFwiQTVcIlxyXG4gICAgICAgIF0pXHJcbiAgICAvLyBzZWN0aW9uNS5hZGROb3RlKHBpYW5vMixcIkQ1XCIpO1xyXG4gICAgLy8gc2VjdGlvbjUuYWRkTm90ZShwaWFubzIsXCJFNVwiKTtcclxuICAgIC8vIHNlY3Rpb241LmFkZE5vdGUocGlhbm8yLFwiRzVcIik7XHJcbiAgICAvLyBzZWN0aW9uNS5hZGROb3RlKHBpYW5vMixcIkU1XCIpO1xyXG4gICAgLy8gc2VjdGlvbjUuYWRkTm90ZShwaWFubzIsXCJENVwiKTtcclxuICAgIC8vIHNlY3Rpb241LmFkZE5vdGUocGlhbm8yLFwiRTVcIik7XHJcbiAgICAvLyBzZWN0aW9uNS5hZGROb3RlKHBpYW5vMixcIkc1XCIpO1xyXG4gICAgLy8gc2VjdGlvbjUuYWRkTm90ZShwaWFubzIsXCJFNVwiKTtcclxuXHJcbiAgICBsZXQgbWFpbj1uZXcgUGF0dGVybigpO1xyXG4gICAgbWFpbi5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIG1haW4uYWRkUGF0dGVybihzZWN0aW9uMik7XHJcblxyXG4gICAgbWFpbi5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIG1haW4uYWRkUGF0dGVybihzZWN0aW9uMyk7XHJcbiAgICBtYWluLmFkZFBhdHRlcm4oc2VjdGlvbjEpO1xyXG4gICAgbWFpbi5hZGRQYXR0ZXJuKHNlY3Rpb240KTtcclxuICAgIG1haW4uYWRkUGF0dGVybihzZWN0aW9uNSk7XHJcblxyXG4gICAgdHJhY2syLmFkZFBhdHRlcm4ocHJlU2VjdGlvbik7XHJcbiAgICB0cmFjazIuYWRkUGF0dGVybihtYWluKTtcclxufVxyXG4vLyNlbmRyZWdpb25cclxuXHJcbi8vI3JlZ2lvbiBEcnVtS2l0XHJcbmZ1bmN0aW9uIHNldERydW0oKXtcclxuICAgIGxldCBkcnVtID0gdHJpZ29uLmJhc2VEcnVtKHt2b2x1bWU6MC44fSk7XHJcbiAgICBsZXQgcHQxPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBwdDEuYWRkTm90ZShkcnVtLFwia2ljaytvaGhcIik7XHJcbiAgICBwdDEuYWRkTm90ZShkcnVtLFwiY2hoXCIpO1xyXG4gICAgcHQxLmFkZE5vdGUoZHJ1bSxcInNuYXJlK2NoaFwiKTtcclxuICAgIHB0MS5hZGROb3RlKGRydW0sXCJjaGhcIik7XHJcbiAgICBwdDEuYWRkTm90ZShkcnVtLFwia2ljaytjaGhcIik7XHJcbiAgICBwdDEuYWRkTm90ZShkcnVtLFwia2ljaytjaGhcIik7XHJcbiAgICBwdDEuYWRkTm90ZShkcnVtLFwic25hcmUrY2hoXCIpO1xyXG4gICAgcHQxLmFkZE5vdGUoZHJ1bSxcImNoaFwiKTtcclxuXHJcbiAgICBsZXQgcHQyPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBwdDIuYWRkTm90ZShkcnVtLFwia2ljaytjaGhcIik7XHJcbiAgICBwdDIuYWRkTm90ZShkcnVtLFwiY2hoXCIpO1xyXG4gICAgcHQyLmFkZE5vdGUoZHJ1bSxcInNuYXJlK2NoaFwiKTtcclxuICAgIHB0Mi5hZGROb3RlKGRydW0sXCJjaGhcIik7XHJcbiAgICBwdDIuYWRkTm90ZShkcnVtLFwiY2hoXCIpO1xyXG4gICAgcHQyLmFkZE5vdGUoZHJ1bSxcImNoaC8yXCIpO1xyXG4gICAgcHQyLmFkZE5vdGUoZHJ1bSxcImtpY2svMlwiKTtcclxuICAgIHB0Mi5hZGROb3RlKGRydW0sXCJzbmFyZStjaGhcIik7XHJcbiAgICBwdDIuYWRkTm90ZShkcnVtLFwia2ljaytjaGhcIik7XHJcblxyXG4gICAgbGV0IHB0Mz1uZXcgUGF0dGVybigpO1xyXG4gICAgcHQzLmFkZE5vdGUoZHJ1bSxcImtpY2srb2hoXCIpO1xyXG4gICAgcHQzLmFkZE5vdGUoZHJ1bSxcImNoaFwiKTtcclxuICAgIHB0My5hZGROb3RlKGRydW0sXCJzbmFyZStjaGhcIik7XHJcbiAgICBwdDMuYWRkTm90ZShkcnVtLFwiY2hoXCIpO1xyXG4gICAgcHQzLmFkZE5vdGUoZHJ1bSxcImNoaFwiKTtcclxuICAgIHB0My5hZGROb3RlKGRydW0sXCJraWNrK2NoaFwiKTtcclxuICAgIHB0My5hZGROb3RlKGRydW0sXCJzbmFyZStjaGhcIik7XHJcbiAgICBwdDMuYWRkTm90ZShkcnVtLFwiY2hoXCIpO1xyXG5cclxuICAgIGxldCBzZWN0aW9uMT1uZXcgUGF0dGVybigpO1xyXG4gICAgc2VjdGlvbjEuYWRkUGF0dGVybihwdDEpO1xyXG4gICAgc2VjdGlvbjEuYWRkUGF0dGVybihwdDIpO1xyXG4gICAgc2VjdGlvbjEuYWRkUGF0dGVybihwdDMpO1xyXG4gICAgc2VjdGlvbjEuYWRkUGF0dGVybihwdDEpO1xyXG5cclxuICAgIGxldCBwcmVTZWN0aW9uPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBwcmVTZWN0aW9uLmFkZE5vdGUoZHJ1bSxcInNuYXJlXCIsMSk7XHJcblxyXG4gICAgdHJhY2szLmFkZFBhdHRlcm4ocHJlU2VjdGlvbixudWxsLDY0KTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxuICAgIHRyYWNrMy5hZGRQYXR0ZXJuKHNlY3Rpb24xKTtcclxufVxyXG4vLyNlbmRyZWdpb25cclxuXHJcbi8vI3JlZ2lvbiBiYXNzXHJcbmZ1bmN0aW9uIHNldFRyYWNrQmFzcygpe1xyXG4gICAgbGV0IGVudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMiwgcmVsZWFzZTogMC41IH1cclxuICAgIGxldCBiYXNzID0gdHJpZ29uLnRyaWFuZ2xlKHsgZW52OiBlbnYsIHZvbHVtZTogMC4zIH0pXHJcbiAgICB2YXIgc2VjdGlvbj1uZXcgUGF0dGVybigpO1xyXG4gICAgc2VjdGlvbi5hZGROb3RlKGJhc3MsXCJGMlwiLDYpO1xyXG4gICAgc2VjdGlvbi5hZGROb3RlKGJhc3MsXCJGMlwiKTtcclxuICAgIHNlY3Rpb24uYWRkTm90ZShiYXNzLFwiRzJcIiw2KTtcclxuICAgIHNlY3Rpb24uYWRkTm90ZShiYXNzLFwiRzJcIik7XHJcbiAgICBzZWN0aW9uLmFkZE5vdGUoYmFzcyxcIkEyXCIsNik7XHJcbiAgICBzZWN0aW9uLmFkZE5vdGUoYmFzcyxcIkEyXCIpO1xyXG4gICAgc2VjdGlvbi5hZGROb3RlKGJhc3MsXCJBMlwiLDcpO1xyXG4gICAgdHJhY2s0LnN0b3BPbk5leHQ9dHJ1ZTtcclxuICAgIHRyYWNrNC5hZGRQYXR0ZXJuKHNlY3Rpb24sbnVsbCw2Nik7XHJcbiAgICB0cmFjazQuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyYWNrNC5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHJhY2s0LmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0cmFjazQuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyYWNrNC5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHJhY2s0LmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0cmFjazQuYWRkUGF0dGVybihzZWN0aW9uKTtcclxufVxyXG4vLyNlbmRyZWdpb25cclxuXHJcbi8vI3JlZ2lvbiBTeW50aFxyXG5mdW5jdGlvbiBzZXRUcmFja1N5bnRoKCl7XHJcbiAgICAvL2xldCBfZGVsYXkgPSB7IGRlbGF5VGltZTogMC40LCB3ZXQ6IDAuNSwgZmVlZGJhY2s6IDAuNSB9XHJcbiAgICBsZXQgX2VudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMC4wNSwgcmVsZWFzZTogMC41IH1cclxuICAgIGxldCBwYW5uaW5nPXt9XHJcbiAgICBsZXQgc3ludGg9dHJpZ29uLnNhd3Rvb3RoKHsgZW52OiBfZW52LCB2b2x1bWU6IDAuMDUgLHBhbm5pbmc6MH0pXHJcblxyXG4gICAgbGV0IHB0PW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBwdC5hZGROb3RlKHN5bnRoLFwiQTZcIixudWxsLG51bGwse3Bhbm5pbmc6LS41fSk7XHJcbiAgICBwdC5hZGROb3RlKHN5bnRoLFwiQTZcIixudWxsLG51bGwse3Bhbm5pbmc6LjUsdm9sdW1lOjAuMDN9KTtcclxuICAgIHB0LmFkZE5vdGUoc3ludGgsXCJFNlwiLG51bGwsbnVsbCx7cGFubmluZzotLjV9KTtcclxuICAgIHB0LmFkZE5vdGUoc3ludGgsXCJFNlwiLG51bGwsbnVsbCx7cGFubmluZzouNSx2b2x1bWU6MC4wM30pO1xyXG5cclxuICAgIGxldCBzZWN0aW9uPW5ldyBQYXR0ZXJuKCk7XHJcbiAgICBzZWN0aW9uLmFkZFBhdHRlcm4ocHQpO1xyXG4gICAgc2VjdGlvbi5hZGRQYXR0ZXJuKHB0KTtcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwdCk7XHJcbiAgICBzZWN0aW9uLmFkZFBhdHRlcm4ocHQpO1xyXG4gICAgc2VjdGlvbi5hZGRQYXR0ZXJuKHB0KTtcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwdCk7XHJcbiAgICBzZWN0aW9uLmFkZFBhdHRlcm4ocHQpO1xyXG4gICAgc2VjdGlvbi5hZGRQYXR0ZXJuKHB0KTtcclxuXHJcbiAgICB0cmFjazUuYWRkUGF0dGVybihzZWN0aW9uLG51bGwsMik7XHJcbiAgICB0cmFjazUuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyYWNrNS5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHJhY2s1LmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0cmFjazUuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyYWNrNS5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHJhY2s1LmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0cmFjazUuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyYWNrNS5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHJhY2s1LmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbn1cclxuLy8jZW5kcmVnaW9uXHJcbnNldFRyYWNrMSgpO1xyXG5zZXRUcmFjazIoKTtcclxuc2V0RHJ1bSgpO1xyXG5zZXRUcmFja1N5bnRoKCk7XHJcbnNldFRyYWNrQmFzcygpO1xyXG5cclxudHJpZ29uLnNldENyZWF0ZSgoKT0+e1xyXG4gICAgdHJpZ29uLmFkZFRyYWNrKHRyYWNrMSk7XHJcbiAgICB0cmlnb24uYWRkVHJhY2sodHJhY2syKTtcclxuICAgIHRyaWdvbi5hZGRUcmFjayh0cmFjazMpO1xyXG4gICAgdHJpZ29uLmFkZFRyYWNrKHRyYWNrNCk7XHJcbiAgICB0cmlnb24uYWRkVHJhY2sodHJhY2s1KTtcclxufSk7XHJcbmV4cG9ydCBkZWZhdWx0IHRyaWdvbjsiLCJgXHJcblBlcmZvcm1hbmNlLXRlc3RcclxuY29kZTpsZW5zaGFuZ1xyXG4yMDIwLTA5LTIyXHJcbmBcclxuaW1wb3J0IFRyaWdvbiBmcm9tICcuLi9jb3JlL3RyaWdvbi5qcyc7XHJcbmltcG9ydCBQYXR0ZXJuIGZyb20gJy4uL2NvcmUvdHJpZ29uX3BhdHRlcm4uanMnO1xyXG52YXIgdHJpZ29uID0gbmV3IFRyaWdvbigpO1xyXG50cmlnb24uc2V0QnBtKDE4MClcclxubGV0IGVudiA9IHsgYXR0YWNrOiAwLjAxLCBkZWNheTogMC4wMywgaG9sZDogMC4yLCByZWxlYXNlOiAwLjMgfVxyXG5sZXQgZGVsYXkgPSB7IGRlbGF5VGltZTogMC41LCB3ZXQ6IDAuMjUsIGZlZWRiYWNrOiAwLjI1IH1cclxubGV0IHBpYW5vID0gdHJpZ29uLnNxdWFyZSh7IGZpbHRlcjogeyB0eXBlOiAnbG93cGFzcycsIGZyZXF1ZW5jeTogMTUwMCwgcTogMSB9LCBlbnY6IGVudiwgZGVsYXk6IGRlbGF5LCB2b2x1bWU6IDAuMTUgfSlcclxuXHJcbnRyaWdvbi5zZXRDcmVhdGUoKCk9PntcclxuICAgIGxldCBzZWN0aW9uID0gbmV3IFBhdHRlcm4oKTtcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIHNlY3Rpb24uYWRkUGF0dGVybihwaWFubyxbXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiLFwiQTRcIixcIkE0XCIsXCJBNFwiXSlcclxuICAgIFxyXG4gICAgXHJcbiAgICB2YXIgdHI9bmV3IFBhdHRlcm4oKTtcclxuICAgIHRyLmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0ci5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHIuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyLmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0ci5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHIuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyLmFkZFBhdHRlcm4oc2VjdGlvbik7XHJcbiAgICB0ci5hZGRQYXR0ZXJuKHNlY3Rpb24pO1xyXG4gICAgdHIuYWRkUGF0dGVybihzZWN0aW9uKTtcclxuICAgIHRyaWdvbi5hZGRUcmFjayh0cik7XHJcblxyXG4gICAgXHJcbn0pO1xyXG5leHBvcnQgZGVmYXVsdCB0cmlnb24iLCJpbXBvcnQgZGVtbzEgZnJvbSAnLi9zb25ncy9kZW1vMSc7XHJcbmltcG9ydCBjbGFubmFkIGZyb20gJy4vc29uZ3MvY2xhbm5hZCc7XHJcbmltcG9ydCBwZXJmb3JtYW5jZV90ZXN0IGZyb20gJy4vc29uZ3MvcGVyZm9ybWFuY2VfdGVzdCc7XHJcbnZhciB0cmlnb249bnVsbDtcclxuZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJidFwiKS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYodHJpZ29uPT1udWxsKXtcclxuICAgICAgICBhbGVydChcIlBsZWFzZSBzZWxlY3Qgc29uZ3NcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdHJpZ29uLnBsYXkoKTtcclxufVxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0U3RvcFwiKS5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgaWYodHJpZ29uPT1udWxsKXtcclxuICAgICAgICBhbGVydChcIlBsZWFzZSBzZWxlY3Qgc29uZ3NcIik7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgdHJpZ29uLnN0b3AoKTtcclxufVxyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImJ0UGF1c2VcIikub25jbGljayA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGlmKHRyaWdvbj09bnVsbCl7XHJcbiAgICAgICAgYWxlcnQoXCJQbGVhc2Ugc2VsZWN0IHNvbmdzXCIpO1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIHRyaWdvbi5wYXVzZSgpO1xyXG59XHJcblxyXG52YXIgbGlzdD1bXHJcbiAgICB7bmFtZTpcImRlbW8xXCIsc29uZzpkZW1vMX0sXHJcbiAgICB7bmFtZTpcIua9rum4o+OCilwiLHNvbmc6Y2xhbm5hZH0sXHJcbiAgICB7bmFtZTpcInBlcmZvcm1hbmNlLXRlc3RcIixzb25nOnBlcmZvcm1hbmNlX3Rlc3R9LFxyXG5dXHJcblxyXG5cclxudmFyIGRvbV9saXN0PWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbGlzdFwiKVxyXG5cclxuZG9tX2xpc3QuaW5uZXJIVE1MPVwiXCI7XHJcblxyXG5mb3IobGV0IGluZGV4PTA7aW5kZXg8bGlzdC5sZW5ndGg7aW5kZXgrKyl7XHJcbiAgICBsZXQgbmV3X2RvbT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7XHJcbiAgICBuZXdfZG9tLnNldEF0dHJpYnV0ZShcImhyZWZcIixcImphdmFzY3JpcHQ6dm9pZCgwKTtcIik7XHJcbiAgICBsZXQgX2luZGV4PWluZGV4O1xyXG4gICAgbmV3X2RvbS5vbmNsaWNrPSgpPT57XHJcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgzXCIpLmlubmVyVGV4dD1saXN0W19pbmRleF0ubmFtZTtcclxuICAgICAgICB0cmlnb249bGlzdFtfaW5kZXhdLnNvbmc7XHJcbiAgICB9XHJcbiAgICBuZXdfZG9tLmlubmVySFRNTD1saXN0W2luZGV4XS5uYW1lO1xyXG4gICAgbGV0IG5ld19saT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xyXG4gICAgbmV3X2xpLmFwcGVuZENoaWxkKG5ld19kb20pO1xyXG4gICAgZG9tX2xpc3QuYXBwZW5kQ2hpbGQobmV3X2xpKTtcclxufVxyXG5cclxuZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImgzXCIpLmlubmVyVGV4dD1saXN0WzFdLm5hbWU7XHJcbnRyaWdvbj1saXN0WzFdLnNvbmc7Il0sInNvdXJjZVJvb3QiOiIifQ==